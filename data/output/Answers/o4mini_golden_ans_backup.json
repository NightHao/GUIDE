{
    "What is the system architecture of Vehicle-to-Grid?": "A Vehicle\u2011to\u2011Grid (V2G) system is best understood as a layered, bidirectional energy\u2010and\u2010information exchange architecture.  At its simplest it consists of four principal building blocks\u2014Electric Vehicle, Electric Vehicle Communication Controller, Supply Equipment (the charging station), and the Power Grid (with its back\u2011end systems)\u2014and the communication layers defined by the ISO\u00a015118 family of standards that tie them all together.\n\n1. Physical & Power Layer  \n   \u2022  EV side: traction battery + power electronics + on\u2011board charger  \n   \u2022  EVSE side: AC/DC conversion, meter, contactor/pilot signal interface  \n   \u2022  Interface: standardized conductive connector (e.g. IEC\u00a062196) carrying power  \n\n2. Data Link Layer (ISO\u00a015118\u20113)  \n   \u2022  Power Line Communication (PLC) modem in EV and in EVSE  \n   \u2022  SLAC procedure to establish and maintain the PLC link (selecting B1/B2 states for wake/sleep)  \n   \u2022  PLCLinkStatus monitoring (tested by TC_\u2026_PLCLinkStatus test cases)  \n\n3. Network & Transport Layer (ISO\u00a015118\u20114)  \n   \u2022  IPv6 or IPv4 addressing over PLC  \n   \u2022  TCP/TLS session management for message integrity and confidentiality  \n   \u2022  Service Discovery Protocol (SDP) for preparing the \u201cservice binding\u201d (e.g. selecting OCPP, HTTP, etc.)  \n\n4. Application Layer (ISO\u00a015118\u20112, \u20115, \u20118)  \n   \u2022  EVCC (Electric Vehicle Communication Controller) in the vehicle acts as the client  \n   \u2022  SECC (Supply Equipment Communication Controller) in the EVSE acts as the server  \n   \u2022  High\u2011Level Communication (HLC\u2011C) messages for:  \n     \u2013 Charging session negotiation (energy profile, time windows)  \n     \u2013 Grid\u2011to\u2011vehicle information exchange (dynamic grid constraints, pricing, frequency)  \n     \u2013 Vehicle\u2011to\u2011grid services (discharging/ancillary services)  \n   \u2022  Session management messages such as SessionStopReq to pause or terminate a session  \n   \u2022  B1/B2 transitions and BCB (Breaker Control Block) toggling used to test and control wake\u2011up/sleep behavior  \n\n5. Back\u2011End & Grid Integration  \n   \u2022  The SECC or EVSE communicates upstream (e.g. via OCPP) to a charge\u2011point operator or energy management system  \n   \u2022  Aggregator or Utility systems dispatch V2G commands (e.g. demand response signals) that are passed down via HLC messages  \n\nPutting it all together:  \n\n   EV (Battery + EVCC)  \u2190\u2192  PLC link (ISO\u00a015118\u20113)  \u2190\u2192  SECC (in EVSE)  \u2190\u2192  EVSE Power Electronics  \u2190\u2192  Grid  \n                \u2191                                        \u2193  \n        Application layer                       Back\u2011end/grid operator  \n\nAt plug\u2011in the EVCC and SECC perform:  \n 1) SLAC to establish the PLC modem link,  \n 2) TLS handshake for secure network transport,  \n 3) SDP to select and bind a charging/discharging service,  \n 4) HLC\u2011C message exchange to negotiate power profiles and grid constraints,  \n 5) Charging loop under HLC\u2011C (obeying dynamic grid information),  \n 6) Optional pause/resume via B1/B2 and BCB toggles,  \n 7) SessionStopReq to cleanly end the V2G session.  \n\nAll of these protocols, state transitions and message formats are defined in the ISO\u00a015118 series (physical/data\u2011link in Part\u00a03, network/transport in Part\u00a04, application/se\u2011 curity in Parts\u00a02,\u00a05,\u00a08), and are validated by conformance test cases such as the various TC_\u2026_PLCLinkStatus and TC_SECC_\u2026 test suites.",
    "What is HPGP?": "HomePlug Green PHY (often abbreviated HPGP or \u201cGreen PHY\u201d) is a power\u2010line communication (PLC) technology and protocol suite optimized for low\u2010power, low\u2010cost, energy\u2011efficient data exchange over existing wiring\u2014most notably for smart\u2011grid and electric\u2011vehicle charging applications.  Below is a more detailed breakdown of its key aspects:\n\n1. Purpose and Applications  \n \u2022 Enables high\u2011frequency digital communication between Electric Vehicle Supply Equipment (EVSE) and Electric Vehicles (EV) over the EV charging infrastructure (especially over the Control Pilot line and Protective Earth).  \n \u2022 Mandated by ISO\u00a015118 for vehicle\u2011to\u2011grid (V2G) communication and referenced by V2G3\u2011A11\u201101 through A11\u201106 requirements.  \n \u2022 Also used in broader smart\u2011grid, home\u2011automation and energy\u2011management scenarios.\n\n2. Physical Implementation  \n \u2022 Signal Injection:  PLC signals are capacitively (and/or inductively) coupled onto the Control Pilot wire (and sometimes PE wires) via a dedicated coupling circuit or transformer.  \n \u2022 Control Pilot Line:  Normally carries a low\u2011frequency duty\u2011cycle signal (per IEC\u00a061851\u20111).  Green\u00a0PHY injects its high\u2011frequency OFDM carriers in parallel, using low\u2011pass filters to protect the pilot\u2019s low\u2011frequency function.  \n \u2022 Coupling Components:  \n   \u2013 Coupling transformer (or capacitive network) to inject/extract HF signals.  \n   \u2013 Inductor (L) to isolate EVSE/charge\u2011cord capacitive loads from HF.  \n   \u2013 Low\u2011pass filters to keep the pilot\u2019s basic signaling intact.  \n \u2022 Transmission Path Considerations:  The Control Pilot wiring, the EVSE circuitry, the charge cord\u2019s capacitance and the EV\u2019s input all form part of the PLC \u201ctransmission line.\u201d  Designers must minimize unwanted capacitance or insertion\u2011loss to maintain adequate signal strength and meet PSD limits.\n\n3. Protocol Stack  \n \u2022 Physical Layer (PHY):  \n   \u2013 Defines OFDM carriers, notched sub\u2011bands (to avoid interference with amateur radio, etc.), spectral masks and power limits.  \n   \u2013 Release Version 1.1.1 of the HomePlug Green PHY Specification fully specifies these details.  \n \u2022 Data Link Layer (MAC):  \n   \u2013 Manages node\u2011to\u2011node framing, error detection/correction and service primitives.  \n   \u2013 Provides Control SAP (Service Access Point) for PLC\u2011specific configuration and ETH SAP (Ethernet II\u2011class SAP) for bridging to higher\u2011layer/Ethernet functions.  \n \u2022 Network Formation:  \n   \u2013 Central Coordinator Manager (CCo) oversees network membership, security (NMK\u2009\u2192\u2009NID derivation), and timing.  \n   \u2013 AVLN (Ad\u2011hoc Virtual Local Network) formed during the SLAC matching process.  \n\n4. Commissioning and Matching (SLAC)  \n \u2022 SLAC (Signal\u00a0Level Attenuation Characterization) protocol determines the best matching between EV and EVSE by measuring signal strength and attenuation characteristics over the PLC channel.  \n \u2022 CM_SLAC_MATCH MMEs and related messages (CM_SLAC_PARMS.CNF, etc.) perform discovery and join procedures.  \n \u2022 ATTEN_PROFILE fields and prescaler settings adjust per\u2011carrier attenuation to fit within regulatory and hardware limits.  \n\n5. Power and Coexistence Management  \n \u2022 Transmission Power:  Adjustable via an internal prescaler; carriers can be selectively attenuated (ATTEN_PROFILE) for EMC compliance.  \n \u2022 Coexistence:  Implements the IEEE Intersystem Protocol (ISP) to share the wiring medium fairly with other HomePlug AV/Green PHY networks.  \n \u2022 EMC/ESD:  Protective measures (filters, shielding, surge protection) ensure that neither the high\u2011frequency PLC nor the low\u2011frequency pilot are unduly affected by electromagnetic disturbances or electrostatic discharge.\n\n6. Standardization and Testing  \n \u2022 HomePlug Green PHY Specification (Release\u00a01.1.1) defines all PHY/MAC behaviors, coupling methods, and compliance criteria.  \n \u2022 ISO\u00a015118\u20113 (\u201cRoad vehicles\u2014Vehicle\u2011to\u2011grid communication interface\u2014Part\u00a03: Physical and data link layer requirements\u201d) incorporates HPGP conformance tests (signal calibration and measurement, SLAC codec in TTCN\u20113).  \n \u2022 IEC\u00a061851\u20111 (referred to as \u201cIEC\u20111\u201d in some contexts) Annex\u00a0A details the Control Pilot line characteristics and timing for parallel injection.  \n \u2022 V2G3\u2011A11\u20110x requirements specify wiring, connector and duty\u2011cycle compatibility for HomePlug Green PHY in EV charging.\n\nIn summary, HomePlug Green PHY is a dedicated PLC solution that re\u2011uses the EV charging pilot wiring (and ground) to carry OFDM\u2011based data between EVSE and EV with minimal additional hardware, ensuring interoperability, safety, energy efficiency and compliance with smart\u2011grid and electric\u2011vehicle standards.",
    "What is SLAC?": "Signal Level Attenuation Characterization (SLAC) is the low\u2010layer, power\u2010line\u2010communication (PLC) based discovery and \u201cmatching\u201d protocol used in Mode\u20113 AC charging to pair a plug\u2011in electric vehicle (PEV) with a particular socket\u2011outlet of an AC Electric Vehicle Supply Equipment (EVSE).  It is specified in ISO\u00a015118\u20113:2015 (A.9) and in the HomePlug GreenPHY (HPGP) Release\u00a01.1.1 standard, and is implemented in the so\u2011called \u201clow\u2011layer communication module\u201d on both EV and EVSE.  Its primary objectives are:\n\n 1.  Measure the physical attenuation characteristics of the PLC channel between EV and EVSE.  \n 2.  Select the best EV/E\u00adVSE pair based on signal\u2011strength (\u201cattenuation\u201d) measurements.  \n 3.  Bring both sides into a secure HomePlug GreenPHY logical network (via NMK exchange) so that higher\u2011layer (ISO\u00a015118) messaging can proceed.\n\nKey steps and message flows in SLAC are:\n\n  \u2022  Initialization (e.g. timers TT_EVSE_SLAC_init on the EVSE side and TT_EV_SLAC_init on the EV side are started, HAL_61851_Listener is ready).  \n  \u2022  Parameter negotiation via CM_SLAC_PARM_REQ and CM_SLAC_PARM_CNF, where EV and EVSE agree on sounding parameters (number of M\u2011SOUNDS, frequencies, random seeds).  \n  \u2022  Multi\u2011node broadcast soundings (CM_MNBC_SOUND_IND): EVSE transmits a sequence of \u201csound\u201d packets, EV measures attenuation per tone and group.  \n  \u2022  Attenuation characterization Report (CM_ATTEN_CHAR_IND/CM_ATTEN_CHAR_RSP): EVSE sends grouped attenuation measurements to EV; EV acknowledges.  Optionally, a CM_ATTEN_PROFILE_IND conveys summary profiles.  \n  \u2022  Matching handshake (CM_SLAC_MATCH_REQ/CM_SLAC_MATCH_CNF): both sides agree on which EV\u2013EVSE link has acceptable signal quality and confirm the match.  \n  \u2022  (Optional) Validation (CM_VALIDATE_REQ/CM_VALIDATE_CNF): an out\u2011of\u2011band or control\u2011pilot based check to guard against false positives.  \n  \u2022  Once the \u201cMatched\u201d state is reached, no further SLAC messages are exchanged; the EVSE and EV join on a common HPGP network and proceed with the high\u2011layer ISO\u00a015118 V2G session.\n\nAll SLAC messages are carried in raw Ethernet\u2014encapsulated as Management Message Entries (MMEs)\u2014and conformance is verified using TTCN\u20113 test suites (Annex\u00a0G) and timers defined in the Timer_15118_3 module.  SLAC thus provides a robust, standardized way to ensure each plugged\u2011in EV attaches to the correct EVSE socket with adequate link quality before any secure charging session begins.",
    "What is Logical Network?": "A \u201clogical network\u201d in the context of EV\u2013EVSE communication is essentially a virtual, software\u2011defined Layer\u20112 network that sits atop whatever physical medium (power line, cable, wireless, etc.) is used.  It is created and managed by the EVSE\u2019s low\u2011layer communication module (acting as the Central Coordinator, or CCo) to segment and secure communication between one EVSE port and its attached EV.  \n\nKey characteristics and functions of a logical network are:  \n1. Layer\u20112 scope  \n   \u2022 It is defined at the Data\u2011Link layer (OSI Layer\u00a02).  \n   \u2022 Above this layer, all members of the logical network \u201csee\u201d each other and can exchange encrypted payload data.  \n\n2. Virtual segmentation  \n   \u2022 Multiple logical networks may coexist on the same physical medium.  \n   \u2022 Each network is distinguished by its Network Membership Key (NMK) and other identifiers.  \n   \u2022 Segmentation prevents cross\u2011talk and unauthorized access between different EV\u2013EVSE pairs.  \n\n3. Membership and visibility  \n   \u2022 Only devices that have successfully \u201cjoined\u201d (i.e. exchanged and set the required parameters, including NMK) can communicate.  \n   \u2022 The EV\u2019s and EVSE\u2019s low\u2011layer communication modules detect joins and leaves.  \n   \u2022 Higher layers (above Layer\u00a02) rely on the logical network to know which link is up and to receive link\u2011status indications.  \n\n4. Security and encryption  \n   \u2022 Payload encryption is negotiated via SLAC/MME parameter exchange (e.g. CM_SLAC_MATCH messages).  \n   \u2022 Upon joining, both sides set the negotiated NMK and network parameters.  \n   \u2022 Leaving the network resets the NMK and returns the module to an \u201cUnmatched\u201d matching state.  \n\n5. Control and coordination (the CCo role)  \n   \u2022 The EVSE\u2019s low\u2011layer module assumes the Central Coordinator (CCo) role, managing network creation, discovery, and member tracking.  \n   \u2022 It detects when an EV joins or\u2014via timers such as TP_match_leave\u2014when an EV must leave (e.g. on error or cable disconnect).  \n\n6. Join/leave process  \n   \u2022 Join: After plug\u2011in and initial discovery, EV and EVSE exchange SLAC/MME parameters (using a sequence chart like Figure\u00a0A.1) in CM_SLAC_MATCH.req/cnf to form the logical network.  \n   \u2022 Leave: On error or termination (e.g. D\u2011LINK_ERROR.request), the low\u2011layer module must leave within TP_match_leave (typically 1\u00a0s), clear keys, and revert to unmatched.  \n\n7. Role in higher\u2011level communication  \n   \u2022 Once formed, the logical network allows higher\u2011layer protocols and applications (e.g. charging control, vehicle\u2011to\u2011grid messaging) to operate transparently as though on a direct point\u2011to\u2011point link.  \n\nIn summary, a logical network is the software\u2011managed Layer\u20112 environment created by the EVSE\u2019s low\u2011layer communication technology to securely bind a specific EV to a specific EVSE port.  It provides segmentation, encryption, and coordination services that underlie all subsequent higher\u00ad-layer communication and charging control.",
    "What is CCo?": "The Central Coordinator (CCo), sometimes also called the Central Communication Controller, is the single, authoritative entity in a HomePlug\u2011based EV/EVSE logical network that is responsible for:  \n1. Network Formation and Management  \n   \u2022 Bringing devices (EVSE outlets and EV modems) into a common logical network.  \n   \u2022 Assigning and managing the network identifier (NetID) and encryption keys.  \n   \u2022 Using SLAC Management Message Entries (MMEs) to carry out link setup, key exchange, parameter configuration and other network\u2011management tasks.  \n\n2. Link Monitoring and Control  \n   \u2022 Detecting when a new PLC link arrives in its logical network (e.g. an EV plugging in and transmitting its first LLDP/SLAC message), which in turn stops the TT_MATCH_JOIN timer.  \n   \u2022 Detecting when an EV gracefully or abruptly leaves the network, so that resources (keys, time slots, carriers) can be reclaimed.  \n   \u2022 Accepting requests from the higher\u2010layer protocol stack to tear down or reconfigure links\u2014thus establishing the \u201ccontrol relationship\u201d with upper layers.  \n\n3. Role Enforcement  \n   \u2022 Per requirement V2G3\u2011A06\u201102, under no circumstances may the low\u2011layer communication module on the EV side assume the CCo role; it must always be configured as a non\u2011CCo \u201cstation.\u201d  \n   \u2022 Conversely, the EVSE side low\u2011layer module is configured to become and remain the CCo for its outlet.  \n\n4. Configuration Interface  \n   \u2022 The CCo mode is entered (or re\u2011entered) by issuing the APCM_SET_CCo.REQ primitive defined in the Control SAP Service of the HomePlug Green PHY (HPGP) specification.  \n\nIn summary, the Central Coordinator is the master controller of the layer\u20112 (PLC) logical network: it brings nodes into the network, distributes and rotates keys, watches link health, responds to upper\u2011layer commands to tear down or reconfigure links, and ensures that exactly one device (always the EVSE) holds the CCo role at any given time.",
    "What is the difference between Data SAP and Data link control SAP?": "A Service Access Point (SAP) is simply a named interface through which one layer of the protocol stack offers services to the layer immediately above it.  In the Data Link layer of the EV/PLC (e.g. HomePlug Green PHY/G3-PLC) stack you actually get two distinct SAPs: one for carrying user data (the \u201cData SAP\u201d) and one for carrying link-management and control information (the \u201cData Link Control SAP\u201d).  Here is how they differ:\n\n1. Purpose and Functionality  \n   \u2022 Data SAP  \n     \u2013 Carries user-payload frames (Ethernet-II or other data packets) between Layer 3 (Network) and the Data Link layer.  \n     \u2013 Primitives include things like DATA-LINK-SEND.request / DATA-LINK-SEND.confirm and DATA-LINK-RECEIVE.indication.  \n     \u2013 Identified in HomePlug Green PHY as the \u201cETH SAP\u201d when converging Ethernet traffic over PLC.  \n   \u2022 Data Link Control SAP  \n     \u2013 Carries link-status, error indications, flow-control commands, matching/initialization messages, etc.  \n     \u2013 Primitives include D-LINK_READY.indication(link-established or no-link), D-LINK_ERROR.request, etc.  \n     \u2013 Provides the higher layers (e.g. the SLAC matching/validation logic or network-layer control protocols) with up-to-date information on whether the PLC link is up, what errors have occurred, and when to retry or tear down the link.\n\n2. Who Provides Them  \n   \u2022 Data SAP  \n     \u2013 Exposed by the convergence layer or the MAC sublayer as the point through which ordinary data frames are injected into or extracted from the lower-layer communication technology.  \n   \u2022 Data Link Control SAP  \n     \u2013 Provided by the Connection Coordination Entity (the module that actually manages the life-cycle of the PLC link), because it needs to mediate matching, initialization and error-recovery operations.\n\n3. Relationship to Layers  \n   \u2022 Both SAPs sit \u201cabove\u201d the MAC sublayer and \u201cbelow\u201d the Network layer (Layer 3).  But:  \n     \u2013 Data SAP is the \u201cdata-plane\u201d interface: it carries user traffic.  \n     \u2013 Data Link Control SAP is the \u201ccontrol-plane\u201d interface: it carries link management messages and status indications.\n\n4. Primitive Examples  \n   \u2022 Over the Data SAP (ETH SAP):  \n     \u2013 DATA-LINK-SEND.request(data-PDU) \u2192 lower layers will attempt transmission  \n     \u2013 DATA-LINK-SEND.confirm(success/failure) \u2192 informs Network layer of the outcome  \n     \u2013 DATA-LINK-RECEIVE.indication(new-data-PDU) \u2192 notifies Network layer of incoming payload  \n   \u2022 Over the Data Link Control SAP:  \n     \u2013 D-LINK_READY.indication(link-established) \u2192 tells higher layers they may start using the link  \n     \u2013 D-LINK_READY.indication(no-link) \u2192 tells higher layers the link has been lost  \n     \u2013 D-LINK_ERROR.request \u2192 instructs the lower layers to abort/re-initiate the link-setup process  \n\nIn short, whenever you want to move *user data* (IP packets, TCI frames, etc.) you go out over the Data SAP; whenever you want to manage or monitor the health of the underlying PLC link (bring it up, tear it down, detect errors, flow-control it, match EV to EVSE, etc.) you go out over the Data Link Control SAP.",
    "What is the difference between basic signaling and high-level communication?": "Basic signaling and high-level communication (HLC) both sit in an EV-to-EVSE communication system, but they serve very different roles and use very different technologies:\n\n1. Basic signaling  \n  \u2022 Defined by IEC 61851-1 (often called \u201cIEC-1\u201d) and referenced in ISO 15118-3.  \n  \u2022 Uses the single control-pilot conductor and simple PWM duty-cycles (5\u2009%\u201396\u2009%) plus discrete pilot states (A, B, C, D, X1, X2, etc.) to convey only the most fundamental information:  \n    \u2013 \u201cVehicle present / ready to receive current\u201d  \n    \u2013 \u201cAvailable maximum current\u201d (via duty cycle)  \n    \u2013 \u201cStart / stop charging\u201d  \n  \u2022 Analog / on-off in nature, unidirectional or very limited bidirectional (e.g. counting B-C-B toggles for validation).  \n  \u2022 Always available and must be supported by every Mode 3/Mode 4 charger; used as a fallback (\u201cbasic charging mode\u201d) if HLC-C fails.  \n  \u2022 No ability to carry richer data (metered values, dynamic grid constraints, identification keys, schedules, etc.).\n\n2. High-Level Communication (HLC)  \n  \u2022 Defined in ISO 15118-3 and related V2G standards (e.g. V2G3-M06-02, V2G3-M06-14).  \n  \u2022 Runs on top of basic signaling by embedding a PLC (HomePlug Green PHY or G3-PLC) modem in both EV and EVSE.  \n  \u2022 Supports a full message-based protocol stack (HLC-C mode) for bidirectional data exchange:  \n    \u2013 Vehicle and EVSE identification and authorization (EIM, Plug & Charge, ISO-2 message sets)  \n    \u2013 Dynamic grid information, pricing, charging profiles, state-of-charge updates  \n    \u2013 V2G services (bidirectional energy flow, smart charging/discharging schedules)  \n    \u2013 Sleep-mode negotiation, firmware updates, diagnostics  \n  \u2022 Messages include SLAC matching (CM_SLAC_*), attenuation characterization (CM_ATTEN_CHAR.*), validation (CM_VALIDATE.REQ/CNF), amplitude map exchange (CM_AMP_MAP.REQ), etc.  \n  \u2022 Without basic signalling you cannot establish or maintain the safety-critical pilot; HLC simply rides in parallel to provide all the \u201cintelligence.\u201d\n\nIn short:  \n  \u2013 Basic signaling is a low-level, single-wire pilot-line scheme for rudimentary charging control (current limits, connection state).  \n  \u2013 High-level communication is a full digital, bidirectional protocol (typically over PLC) that enables advanced features: secure identification, dynamic grid management, V2G, Plug & Charge, diagnostics and more.",
    "What is the difference between MTC and PTC?": "The two components sit at different levels of the test architecture and have very different responsibilities:\n\n1. Role and Scope  \n  \u2013 Main Test Component (MTC)  \n   \u2022 Acts as the *test executive* or \u201ctest controller.\u201d  \n   \u2022 Implements the TTCN-3 test configuration, orchestrates test steps, sends and receives protocol messages (SLAC, CmValidate, CmSlacMatch, CmAmpMap, PLCLinkStatus, etc.), computes verdicts.  \n   \u2022 Can be either an EVCC_Tester (when the System Under Test is an EVCC) or a SECC_Tester (when SUT is a SECC).  \n   \u2022 Drives the high-level conformance testing of the communication controller under test (protocol, data-link layer, SLAC, ISO 15118-3 behaviors).  \n\n  \u2013 Parallel Test Component (PTC)  \n   \u2022 Runs *in parallel* to the MTC but is subordinate to it.  \n   \u2022 Is purely a physical-layer/IEC 61851-1 pilot-signal monitor&stimulus entity.  \n   \u2022 Continuously observes and manipulates the control-pilot PWM signal (duty-cycle, frequency, voltage states) and the EIM authorization status.  \n   \u2022 Confirms physical state changes (e.g. State B transitions, valid duty-cycle range, frequency range) and reports success/failure of EIM authorization back to the MTC.  \n\n2. Ports and Interfaces  \n  \u2013 MTC  \n   \u2022 Maps and uses ports like pt_SLAC_Port (for SLAC message exchange), pt_HAL_61851_Port (to drive the control-pilot line), pt_HAL_61851_Internal_Port (to read analog pilot-line state), etc.  \n   \u2022 Controls low-layer data-link processing (power-line communication link status, attenuation-characterization procedures) through those ports.  \n\n  \u2013 PTC  \n   \u2022 Has its own pt_HAL_61851_Internal_Port (and possibly HAL_61851_Listener_Port) mapped to the same physical pilot line, but uses it only to *observe* or *stimulate* PWM states in lock-step with the MTC\u2019s test script.  \n   \u2022 Does not run the TTCN-3 test configuration itself\u2014its sole purpose is to monitor or change the physical control-pilot signal in accordance with IEC 61851-1.  \n\n3. Responsibilities  \n  \u2013 MTC  \n   \u2022 Sequences protocol exchanges (e.g. CM_VALIDATE_REQ/CNF, CM_SLAC_PARM_REQ/CNF, CM_SLAC_MATCH_REQ/CNF).  \n   \u2022 Triggers attenuation-characterization GoodCase procedures, calculates average attenuation, manages timers (e.g. TT_match_sequence, TP_EVSE_avg_atten_calc).  \n   \u2022 Aggregates verdicts for conformance.  \n\n  \u2013 PTC  \n   \u2022 Implements the IEC 61851-1 Pilot Test Controller functions (V2G5-027 to V2G5-030): change PWM state condition, adjust valid duty-cycle and frequency ranges, process incoming EIM status (V2G5-034), inform MTC of EIM-authorization outcome.  \n   \u2022 Exercises the physical interface: toggles PWM states, measures voltages, confirms the EVSE/EV reaction on the pilot line.  \n\n4. Hierarchy and Interaction  \n  \u2013 The MTC *creates* or *spawns* the PTC as a parallel actor when a test scenario requires physical-layer stimulus or monitoring.  \n  \u2013 The PTC runs throughout the test case to watch for EIM or PWM-state events, and it calls back into the MTC to signal success/failure when those events occur.  \n  \u2013 At no point does the PTC itself drive protocol-level messages\u2014those always originate from the MTC.  \n\nIn short:  \n  \u2022 The Main Test Component is your *TTCN-3 test controller* for upper-layer protocol conformance (SECC/EVCC behavior, SLAC, PLC link, ISO 15118-3).  \n  \u2022 The Parallel Test Component is your *physical-layer pilot-signal controller*, continuously observing or manipulating the IEC 61851-1 control-pilot PWM and EIM status in parallel to the MTC\u2019s protocol tests.",
    "What is ATS?": "The Abstract Test Suite (ATS) is a standardized, high\u2011level collection of test cases and associated artifacts whose purpose is to verify that a System Under Test (SUT) complies with the conformance requirements of a given protocol or standard (in our context, ISO\u00a015118\u20113).  It is \u201cabstract\u201d in that it defines what must be tested\u2014test objectives, pre\u2011conditions, stimuli, expected responses and post\u2011conditions\u2014without prescribing any one concrete implementation or execution environment.  \n\nKey characteristics and components of the ATS:\n\n1. Scope and Purpose  \n   \u2022 Verifies both static (capability) and dynamic (behavioral) conformance requirements of the SUT against ISO\u00a015118\u20113.  \n   \u2022 Ensures that an implementation under test meets the mandatory and conditional requirements defined by the standard.  \n   \u2022 Is used in a conformance\u2011testing framework (e.g. as specified by V2G5\u2011038) to systematically check and report compliance.\n\n2. Structure  \n   \u2022 A set of abstract test cases, each mapped to one or more specific requirements of ISO\u00a015118\u20113 (see \u201cTable\u00a029 \u2013 ATS coverage of requirements in ISO\u00a015118\u20113\u201d).  \n   \u2022 A corresponding list of requirements not covered by the ATS (see \u201cTable\u00a027 \u2013 Requirements of ISO\u00a015118\u20113 not considered in the ATS\u201d), indicating known gaps.  \n   \u2022 Grouping by use case or domain (e.g. AC charging vs. DC charging, EVCC vs. SECC, authentication profiles such as EIM or PnC).  \n   \u2022 Identification of \u201cX\u201d\u2011marked requirements that have one or more covering test cases.\n\n3. Supporting Documentation  \n   \u2022 PICS (Protocol Implementation Conformance Statement): a document in which the implementer declares which options and capabilities of the protocol are supported.  All PICS entries referenced in the ATS are collected (e.g. in Tables\u00a06\u20138).  \n   \u2022 PIXIT (Protocol Implementation eXtra Information for Testing): contains additional configuration details or boundary values needed to run particular test cases (summarized in Tables\u00a09\u201311).  \n   \u2022 Test architecture description: explains how the abstract test cases are organized, how they relate to the overall framework, and how adaptors (SUT adaptor, platform adaptor) and interfaces (Test Control Interface, Test Runtime Interface) interact.\n\n4. Execution Process  \n   \u2022 INTERPRETATION phase: analysts or an automated test generator interpret the ATS definitions to produce concrete, executable test scripts or stimuli sequences.  \n   \u2022 EXECUTION phase: the test framework runs those scripts against the SUT in a controlled Test Environment, drives message exchanges, measures signal characteristics, and evaluates SUT responses.  \n   \u2022 Test results are analyzed to confirm whether each abstract test case\u2014and hence each mapped requirement\u2014passed or failed.\n\n5. Relationship to ISO\u00a015118\u20113  \n   \u2022 ISO\u00a015118\u20113 defines the lower\u2011layer (physical and data link) requirements and PLC signal measurement/calibration procedures for vehicle\u2011to\u2011grid communication.  \n   \u2022 The ATS draws its test objectives directly from ISO\u00a015118\u20113\u2019s static and dynamic conformance clauses.  \n   \u2022 Through coverage tables, the ATS documents which parts of the ISO\u00a015118\u20113 requirements are tested, and which are intentionally out of scope.\n\nIn summary, the Abstract Test Suite is the cornerstone of a conformance\u2011testing effort: it captures, at the level of \u201cwhat\u201d needs to be tested, the full breadth of relevant protocol requirements, while relying on subsequent interpretation and execution steps (within a test framework and environment) to handle \u201chow\u201d the tests are actually run against a given SUT.",
    "What is TSS?": "Test Suite Structure (TSS) is the formal framework defined in ISO\u00a015118 (notably in clause\u00a07.2 of Part\u00a03) that organizes, names and governs all elements of the conformance test suite.  Its goal is to ensure that every requirement of ISO\u00a015118\u20113 (and related parts) is exercised in a consistent, repeatable way.  \n\nKey aspects of TSS:\n\n1. Hierarchy and Segmentation  \n   \u2022 The overall test suite is broken into subgroups (\u201ctest modules\u201d) aligned with ISO\u00a015118 use\u2011cases (e.g. AC/DC charging, power\u2010line communication).  \n   \u2022 Within each module, individual test cases reside on a second level: each case applies specific stimuli to the System Under Test (SUT) and checks for the correct system reaction.  \n\n2. Naming and Identifiers  \n   \u2022 TSS defines strict conventions for module identifiers, test case IDs, template names and function names.  \n   \u2022 These conventions ensure unambiguous cross\u2011referencing between requirements, test descriptions, verdicts and reports.  \n\n3. Templates for EVCC and SECC  \n   \u2022 Separate template rules are given for tests involving the Electric Vehicle Communication Controller (EVCC) and the Supply Equipment Communication Controller (SECC).  \n   \u2022 Each template specifies the message sequence, parameters, timing constraints and expected verdicts.  \n\n4. Protocol Implementation Conformance Statement (PICS)  \n   \u2022 A PICS is a standardized checklist embedded in the TSS that records which protocol options and features a given implementation supports or omits.  \n   \u2022 Test cases reference the PICS to select only applicable tests for the implementation under test.  \n\n5. Protocol Implementation eXtra Information for Testing (PIXIT)  \n   \u2022 PIXIT augments PICS by providing implementation\u2011specific data needed during testing (e.g. IP addresses, certificate profiles, timeouts).  \n   \u2022 The TSS defines where and how PIXIT parameters are applied across test cases.  \n\n6. Annexes  \n   \u2022 Several informative and normative annexes accompany the core TSS text.  \n   \u2022 They include template definitions, example identifiers, supplementary explanations and any edge\u2011case clarifications.  \n\n7. General Utility Functions (Annex\u00a0D.4)  \n   \u2022 Annex\u00a0D.4 of the TSS collects reusable utility functions (e.g. common XML-schema validations, cryptographic helpers, timer management) to avoid duplication across test cases.  \n   \u2022 Test case templates reference these utilities by name.  \n\n8. Relationship to Conformance Testing  \n   \u2022 By enforcing a uniform structure, TSS guarantees that all mandatory, conditional and optional requirements in ISO\u00a015118\u20113 are covered.  \n   \u2022 It serves both as a guide for test developers and as a blueprint for automated test harness implementations.  \n\nIn sum, the Test Suite Structure is the backbone of ISO\u00a015118\u2019s conformance tests: it standardizes the way test cases are grouped, named, parameterized (via PICS/PIXIT), augmented (via annexes) and executed (via EVCC/SECC templates and shared utilities).",
    "What is EIM?": "External Identification Means (EIM) is the ISO\u00a015118\u20111 term for any external method or \u201cprofile\u201d by which a user or vehicle is identified and authorized at an EV charging station before the vehicle is plugged in.  In practice EIM typically takes the form of an RFID card or fob, a smartphone app, a back\u2011office backend call, or other out\u2011of\u2011band token that the Electric Vehicle Supply Equipment (EVSE) can read.  It is offered as an alternative (or complement) to the Plug\u2009&\u2009Charge (PnC) \u201cID from EV\u201d mechanism.  \n\nKey aspects of EIM:  \n1.   Definition & Scope  \n     \u2022  Defined in ISO\u00a015118\u20111 under the term External Identification Means.  \n     \u2022  Sometimes referred to more generally as Electricity Information Management\u2014i.e. the system in the EVSE that manages EIM-based identification, authorization and related data exchange.  \n2.   Where it Fits in the Sequence  \n     \u2022  During the EVSE\u2019s initialization phase the station decides whether to use \u201cID from EV\u201d (Plug\u2009&\u2009Charge) or an EIM method (requirement V2G3\u2011M06\u201104).  \n     \u2022  If EIM is chosen, the EVSE waits for the user to perform an EIM action (e.g. tap card).  \n     \u2022  The EVSE then invokes its EIM authorization function (V2G5\u2011033), exchanges status information with the EIM backend or reader (V2G5\u2011034) and reports AUTHORIZATION\u00a0OK when successful.  \n     \u2022  Only after successful EIM authorization does the EVSE start the SLAC \u201cmatching process\u201d to establish the low\u2011level communication link and begin charging.  \n3.   Protocol & Component Interactions  \n     \u2022  Works alongside high\u2011level communication (HLC\u2011C) and Plug\u2009&\u2009Charge protocols.  \n     \u2022  Is implemented in both AC and DC EVSEs; the EVCC (vehicle side) may also support EIM for data exchange.  \n     \u2022  The SECC (Supply Equipment Communication Controller) hosts the EIM service on the EVSE side, and its behavior is exercised in SECC Tester configurations (SECC DC PICS/PIXIT).  \n4.   Testing & Conformance  \n     \u2022  Main Test Component (MTC) modules detect and control EIM status information via special functions (as per V2G5\u2011033/\u2011034).  \n     \u2022  A Parallel Test Component (PTC) continuously observes the evolving EIM authorization status until it reaches AUTHORIZATION\u00a0OK or fails.  \n     \u2022  Conformance to EIM behavior is verified under ISO\u00a015118\u20113 (for PLC signalling) and IEC\u00a061851\u20111 SECC/EVCC test cases (e.g. TC_SECC_AC_VTB_CMSLACPARM_004).  \n5.   Post\u2011Authorization Actions  \n     \u2022  Upon a positive EIM result, requirement V2G3\u2011M06\u201108 specifies that the EVSE proceed with authentication, SLAC matching and the start of power delivery.  \n\nIn summary, EIM is the standardized way for an EVSE to authenticate and identify a user\u2019s contract or vehicle via an external token or system\u2014seamlessly integrating into the ISO\u00a015118 vehicle\u2011to\u2011grid communication sequence and allowing a charging session to proceed only after successful authorization.",
    "What is CM_SLAC_PARAM.REQ?": "CM_SLAC_PARM.REQ is the \u201cSLAC\u2010parameter request\u201d message that an Electric Vehicle (EV) sends to Electric Vehicle Supply Equipment (EVSE) to kick off the Signal Level Attenuation Characterization (SLAC) matching process and to supply the parameters the EVSE needs in order to perform its signal\u2010strength measurements.  It is defined as one of the Management Message Entity (MME) types in the SLAC protocol (hex code 0x6064 when encoded).\n\nKey characteristics of CM_SLAC_PARM.REQ  \n\u2022 Purpose  \n  \u2013 Initiates a new SLAC matching session.  \n  \u2013 Conveys to the EVSE the parameters under which the EVSE should perform its signal\u2010strength (attenuation) measurements.  \n  \u2013 Triggers the timer\u2010based TT_match_response process on both sides.  \n\n\u2022 Mandatory fields  \n  \u2013 RunID  \n    \u2022 A randomly chosen identifier, constant for the entire run, used by both EV and EVSE to correlate messages.  \n  \u2013 APPLICATION_TYPE  \n    \u2022 Indicates the application context; for PEV\u2013EVSE matching this is fixed to 0x00.  \n  \u2013 SECURITY_TYPE  \n    \u2022 Indicates the security level; for an unsecured SLAC exchange this is fixed to 0x00 (\u201cNo Security\u201d).  \n  \u2013 Additional SLAC parameters  \n    \u2022 (e.g. slot timing, M\u2010Sound symbol parameters) as defined in the MME payload structure in ISO\u200915118\u20113/HomePlug Green PHY.  \n\n\u2022 Timing and repetition  \n  \u2013 TP_EV_SLAC_init  \n    \u2022 The EV must send its first CM_SLAC_PARM.REQ within this time window after detection of Pilot\u2010signal State B (plug insertion or wake\u2011up).  \n  \u2013 TT_MATCHING_REPETITION  \n    \u2022 If no CM_SLAC_PARM.CNF is received, the EV repeats CM_SLAC_PARM.REQ at intervals governed by this timer until either a CNF arrives or the timer expires.  \n  \u2013 Upon sending CM_SLAC_PARM.REQ, the EV starts TT_match_response, during which it waits for the EVSE\u2019s CM_SLAC_PARM.CNF.  \n\n\u2022 Expected response  \n  \u2013 CM_SLAC_PARM.CNF  \n    \u2022 A unicast confirmation message from the EVSE echoing the RunID, EV MAC address and the chosen measurement parameters.  \n    \u2022 Must not be sent by the EVSE before its own TT_match_response timer permits.  \n\n\u2022 Role in tests and requirements  \n  \u2013 Many ISO\u200915118\u20103 test cases (e.g. TC_EVCC_CMN_VTB_CMSLACPARM_xxx) verify that the EVCC issues CM_SLAC_PARM.REQ with valid RunID, APPLICATION_TYPE\u2009=\u20090x00 and SECURITY_TYPE\u2009=\u20090x00, respects timing windows, and correctly handles repetitions.  \n  \u2013 Requirement V2G3\u2011A09\u201113 partially covers conditions under which the EVSE may defer or suppress its CM_SLAC_PARM.CNF in response to REQ.  \n  \u2013 Requirement V2G3\u2011A06\u201105 specifies that the EV\u2019s low\u2010layer communication module must not itself respond to CM_SLAC_PARM.REQ messages (that is strictly an EVSE function).  \n\nIn summary, CM_SLAC_PARM.REQ is the standardized request from the EV to the EVSE that starts the SLAC parameter\u2010exchange phase: it tells the EVSE how to measure and report signal attenuation so that the PEV\u2013EVSE power\u2010line link can be matched and optimized.",
    "What is CM_SLAC_PARAM.CNF?": "CM_SLAC_PARM.CNF is simply the \u201cconfirmation\u201d counterpart to a CM_SLAC_PARM request in the SLAC (Signal\u2010Level Attenuation Characterization) portion of the ISO\u00a015118/HomePlug GreenPHY power\u2010line\u2013based EVSE\u2194EV protocol.  In other words, once the EVCC (the electric\u2010vehicle control controller) has sent a CM_SLAC_PARM.REQ to propose or negotiate SLAC parameters (e.g. timing, number of probing tones, attenuation thresholds, etc.), the EVSE responds with CM_SLAC_PARM.CNF to tell the EVCC:\n\n  \u2022  Whether it accepted or rejected the proposed parameters (via a Result field)  \n  \u2022  The actual values that will be used (i.e. the parameters the EVSE has configured)  \n  \u2022  A ToggleNum (often zero on first pass) showing how many pilot\u2010line toggles have been counted or confirming that the EVSE\u2019s state has not changed in the meantime  \n\nCM_SLAC_PARM.CNF thus completes the parameter\u2010exchange phase of the SLAC matching procedure, enabling both sides to proceed with attenuation characterization or move on to the CM_SLAC_MATCH phase once the TT_match_response timer rules are met.",
    "What is CM_START_ATTEN_CHAR.IND?": "CM_START_ATTEN_CHAR.IND is a management\u2010level \u201cindication\u201d message in the SLAC (Signal Level Attenuation Characterization) protocol, exchanged between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE) as part of the V2G (vehicle\u2011to\u2011grid) matching and parameter\u2010exchange sequence.  Its main characteristics are:\n\n1. Role and Direction  \n\u00a0\u00a0\u00a0\u2022 Sent by the EV to the EVSE.  \n\u00a0\u00a0\u00a0\u2022 Purpose is to trigger the start of the attenuation\u2011characterization (signal\u2011strength measurement) process on the power line.  \n\n2. Protocol Context  \n\u00a0\u00a0\u00a0\u2022 Defined as an MME (Message Management Entity) template\u2014its message fields must conform to the MME definition in the SLAC specification.  \n\u00a0\u00a0\u00a0\u2022 Forms part of the \u201cTT_match_sequence\u201d exchange: the EVSE must receive CM_START_ATTEN_CHAR.IND before the TT_match_sequence timer expires. Upon successful reception, that timer is stopped.  \n\n3. Timing Constraints  \n\u00a0\u00a0\u00a0\u2022 The number of times the EV sends CM_START_ATTEN_CHAR.IND in one matching attempt is parameterized by C_EV_start_atten_char_inds.  \n\u00a0\u00a0\u00a0\u2022 Between batches of CM_START_ATTEN_CHAR.IND, the EV must wait at least TP_EV_batch_msg_interval.  \n\u00a0\u00a0\u00a0\u2022 Requirement V2G3\u2011A09\u201126 places upper bounds on these intervals to ensure timely message exchange.  \n\n4. Test\u2011Case Usage  \n\u00a0\u00a0\u00a0\u2022 In conformance test cases (e.g. TC_EVCC_* and TC_SECC_*_ATTENUATIONCHARACTERIZATION), CM_START_ATTEN_CHAR.IND is the stimulus the test harness or EV sends to kick off the attenuation\u2011characterization procedure.  \n\u00a0\u00a0\u00a0\u2022 Test cases typically verify that:  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u2013 No CM_START_ATTEN_CHAR.IND is sent before preconditions are met.  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u2013 The EV sends exactly C_EV_start_atten_char_inds indications.  \n\u00a0\u00a0\u00a0\u00a0\u00a0\u2013 The EVSE reacts by subsequently sending CM_ATTEN_CHAR.IND messages with measured attenuation profiles.  \n\n5. Downstream Processing  \n\u00a0\u00a0\u00a0\u2022 Upon receipt of CM_START_ATTEN_CHAR.IND, the EVSE will transmit a series of M\u2011SOUND bursts (CM_MNBC_SOUND.IND) and ultimately return CM_ATTEN_CHAR.IND messages containing the computed attenuation profile.  \n\u00a0\u00a0\u00a0\u2022 The low\u2011layer communication module on the EV may have additional requirements (e.g. per V2G3\u2011A06\u201105 it should not respond to certain MMEs, but it must recognize CM_START_ATTEN_CHAR.IND to proceed).  \n\nIn short, CM_START_ATTEN_CHAR.IND is the EV\u2019s \u201cgo\u2011ahead\u201d indication to the EVSE that it should begin measuring and reporting channel attenuation as part of the SLAC\u2010based EV/EVSE matching process.",
    "What is CM_MNBC_SOUND.IND?": "CM_MNBC_SOUND.IND is a SLAC\u2011layer protocol message used by an Electric Vehicle (EV) in vehicle\u2011to\u2011grid (V2G) communication (HomePlug Green PHY) to perform multi\u2011node broadcast \u201csounding\u201d of the power\u2010line network for signal\u2010level attenuation characterization.  Its main characteristics are:\n\n1. Purpose  \n   \u2022 Indicates the transmission of a network \u201csound\u201d (test signal) by the EV as part of the SLAC (Signal Level Attenuation Characterization) process.  \n   \u2022 Enables the receiving EVSE (Electric Vehicle Supply Equipment) or test system to measure attenuation on the line.  \n\n2. When and how often it is sent  \n   \u2022 After completing the CM_START_ATTEN_CHAR.IND sequence, the EV waits TP_EV_batch_msg_interval and then begins sending CM_MNBC_SOUND.IND.  \n   \u2022 The EV sends it C_EV_match_MNBC times in one sequence.  With each transmission, the \u2018cnt\u2019 (counter) field is decremented.  \n\n3. Major fields  \n   \u2022 APPLICATION_TYPE (fixed 0x00 for \u201cPEV\u2011EVSE Matching\u201d)  \n   \u2022 SECURITY_TYPE (fixed 0x00 for \u201cNo Security\u201d)  \n   \u2022 RUNID (must match the RunID chosen by the EV in CM_SLAC_PARM.REQ)  \n   \u2022 cnt (counter of remaining sound messages to send)  \n\n4. Timing requirements  \n   \u2022 Interval between consecutive CM_MNBC_SOUND.IND messages = TP_EV_batch_msg_interval  \n   \u2022 Overall sequencing and timing governed by the V2G3\u2011A09\u201128 (use of the sequence) and V2G3\u2011A09\u201129 (timing) requirements.  \n\n5. Test\u2011case usage  \n   \u2022 In attenuation\u2010characterization test cases (e.g. TC_EVCC_CMN_VTB_ATTENUATIONCHARACTERIZATION_001 and variants), the test system sends and/or receives CM_MNBC_SOUND.IND to collect attenuation measurements.  \n   \u2022 The EV\u2019s low\u2011layer communication module shall not respond to CM_MNBC_SOUND.IND (V2G3\u2011A06\u201105).  \n\nIn summary, CM_MNBC_SOUND.IND is the dedicated broadcast \u201csound\u201d indication message in the SLAC matching and signal\u2010characterization procedure, carrying application, security, run\u2010ID and counter information, transmitted by the EV at defined intervals to enable the EVSE (or test system) to measure line attenuation.",
    "What is CM_ATTEN_CHAR.IND?": "CM_ATTEN_CHAR.IND is a SLAC\u2010level \u201cindication\u201d message used in HomePlug Green PHY\u2013based vehicle\u2010to\u2010grid (V2G) communications.  Its primary purpose is to convey measured signal attenuation data from the Electric Vehicle Supply Equipment (EVSE) to the Electric Vehicle (EV) during the parameter\u2010exchange and matching process.  \n\nKey characteristics of CM_ATTEN_CHAR.IND  \n\u2022 Message role and timing  \n  \u2013 Sent by the EVSE after it receives CM_START_ATTEN_CHAR.IND (which initiates attenuation characterization).  \n  \u2013 The EV starts a timer (TT_EV_atten_results) when it issues CM_START_ATTEN_CHAR.IND, and must collect incoming CM_ATTEN_CHAR.IND messages before that timer expires.  \n  \u2013 Part of the SLAC matching process defined in clauses such as V2G3\u2011A09\u201122, A09\u201135 and A09\u201137.  \n\n\u2022 Protocol type and format  \n  \u2013 Realized as an MME (Management Message Entity) payload, defined in Table\u00a0A.4 of the SLAC annex.  \n  \u2013 Identified by its MMTYPE in the SLAC header (the \u201cindication\u201d for attenuation characteristics).  \n\n\u2022 Principal fields  \n  \u2013 APPLICATION_TYPE (1\u00a0byte)  \n     \u2022 Value 0x00 \u21d2 \u201cPEV\u2011EVSE matching\u201d  \n  \u2013 SECURITY_TYPE (1\u00a0byte)  \n     \u2022 Value 0x00 \u21d2 \u201cNo Security\u201d  \n  \u2013 SOURCE_ADDRESS (6\u00a0bytes)  \n     \u2022 MAC address of the EV host initiating the SLAC session  \n  \u2013 NUM_SOUNDS (1\u00a0byte)  \n     \u2022 Number of M\u2011Sounds measured and reported  \n     \u2022 If NUM_SOUNDS = 0 \u21d2 ATTEN_PROFILE is meaningless and the entire message is to be ignored by the EV  \n  \u2013 ATTEN_PROFILE (variable length)  \n     \u2022 One or more attenuation entries (per M\u2011Sound)  \n     \u2022 Used by the EV to compute an arithmetic mean (\u201cAverage_Attenuation\u201d) corrected for receive\u2011path attenuation (AttnRx\u2011EVSE)  \n\n\u2022 Processing and response  \n  \u2013 The EV accumulates the ATTEN_PROFILE entries, calculates Average_Attenuation, and uses it to update its EV_Discovery_Status (e.g. determining link quality and whether matching was successful).  \n  \u2013 Upon receipt, the EV shall send CM_ATTEN_CHAR.RSP to acknowledge or address the indication.  \n\n\u2022 Test\u2010case and conformance context  \n  \u2013 Numerous conformance tests (e.g. TC_EVCC_AC_VTB_ATTENUATIONCHARACTERIZATION_001\u2011010, TC_SECC_CMN_VTB_ATTENUATIONCHARACTERIZATION_001\u2011011, etc.) verify correct content, timing, repetition counts, handling of zero NUM_SOUNDS, absence until timers expire, and proper invocation of CM_ATTEN_CHAR.RSP.  \n  \u2013 Timing requirements include TP_EVSE_avg_atten_calc on the EVSE side for average\u2010profile computation, and TT_EV_atten_results on the EV side for waiting on CM_ATTEN_CHAR.IND.  \n\nIn summary, CM_ATTEN_CHAR.IND is the SLAC\u2010protocol indication message by which an EVSE communicates measured signal attenuation characteristics to an EV during PEV\u2013EVSE matching.  It carries per\u2011sound attenuation profiles and supporting fields, triggers the EV\u2019s attenuation\u2010averaging logic, and must be acknowledged with CM_ATTEN_CHAR.RSP.",
    "What is CM_ATTEN_CHAR.RSP?": "CM_ATTEN_CHAR.RSP is a standardized SLAC\u2011layer protocol message sent by the Electric Vehicle (EV) in response to an attenuation\u2011characterization indication (CM_ATTEN_CHAR.IND) from the Electric Vehicle Supply Equipment (EVSE). Its primary purpose is to acknowledge receipt of the attenuation\u2010profile measurement and to convey any required response parameters back to the EVSE as part of the EVCC matching procedure.  \n\nKey characteristics of CM_ATTEN_CHAR.RSP  \n\u2022 Triggering and Role  \n  \u2013 Sent by the EV upon receiving a CM_ATTEN_CHAR.IND.  \n  \u2013 Confirms to the EVSE that the attenuation profile has been received and processed.  \n  \u2013 Forms part of the Signal Level Attenuation Characterization (SLAC) process used to assess channel quality over the control pilot.  \n\n\u2022 Timing Constraints  \n  \u2013 Must be transmitted within the TP_match_sequence after receipt of CM_ATTEN_CHAR.IND.  \n  \u2013 The EVSE starts a TT_match_response timer on sending CM_ATTEN_CHAR.IND; if no RSP arrives before that timer expires, EVSE shall retransmit CM_ATTEN_CHAR.IND and reset TT_match_response.  \n\n\u2022 Content and Validation  \n  \u2013 Encoded according to the Message Management Entity (MME) definition (see Table\u00a0A.4 in V2G3\u2011A09\u201137).  \n  \u2013 Carries fields such as applicationType, securityType, sourceAddress, runID, sourceID, respID and result.  \n  \u2013 The SUT\u2019s CM_ATTEN_CHAR.RSP content is validated against MME rules; test cases may inject invalid values to verify error handling.  \n\n\u2022 Standard and Test\u2011Case Context  \n  \u2013 Defined in the ISO\u00a015118\u20113\u2011based V2G3\u2011A09\u201137 standard.  \n  \u2013 Used in conformance and interoperability tests (e.g. TC_EVCC_CMN_VTB_ATTENUATIONCHARACTERIZATION_xxx).  \n  \u2013 V2G3\u2011A06\u201105 specifies that the EV\u2019s low\u2011layer communication module shall not itself respond to this message\u2014as it is generated by the EVCC.  \n\nIn summary, CM_ATTEN_CHAR.RSP is the EV\u2019s formal acknowledgement and response to an EVSE\u2019s attenuation\u2011characterization request, enabling both parties to agree on channel characteristics before proceeding with secure power\u2010line communication and charging.",
    "What is CM_ATTEN_PROFILE.IND?": "CM_ATTEN_PROFILE.IND is a protocol\u2010level message used in the SLAC (Signal Level Attenuation Characterization) process that takes place between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE) over a power\u2011line communication link. Its main purpose is to convey an \u201cattenuation profile\u201d derived from one or more prior test signals (the so\u2011called M\u2011SOUNDS) so that the EVSE can assess link quality and complete the matching/validation sequence.\n\nKey points about CM_ATTEN_PROFILE.IND:\n\n1. Role in SLAC  \n   \u2022 Part of the SLAC protocol suite (often implemented atop HomePlug Green PHY) for measuring and characterizing signal attenuation on the EV\u2011to\u2011EVSE power\u2011line link.  \n   \u2022 One of several message types (alongside CM_START_ATTEN_CHAR.IND, CM_ATTEN_CHAR.IND, etc.) exchanged during the \u201cmatching\u201d phase to ensure a robust communication channel before high\u2011power charging begins.\n\n2. Contents  \n   \u2022 Carries an ATTEN_PROFILE field, which represents the measured attenuation values (in dB or a platform\u2011specific format) averaged over a sequence of M\u2011SOUNDS.  \n   \u2022 May include metadata such as the number of M\u2011SOUNDS used to derive the profile, timestamps, sequence counters, etc., depending on the SLAC implementation.\n\n3. How ATTEN_PROFILE Is Computed  \n   \u2022 The EV computes an arithmetic mean of the attenuation readings from previous M\u2011SOUNDS.  \n   \u2022 For downstream messages (CM_ATTEN_CHAR.IND), this mean is further corrected by the EVSE\u2019s receive\u2011path attenuation (AttnRx\u2011EVSE) as specified in the normative annex (e.g. A.9.4.1 of the HPGP/SLAC spec).  \n   \u2022 If a subsequent CM_ATTEN_CHAR.IND carries NUM_SOUNDS=0, its ATTEN_PROFILE is deemed irrelevant and that message (and any derived state) is ignored.\n\n4. EVSE Processing  \n   \u2022 The EVSE Listening Process must receive and validate CM_ATTEN_PROFILE.IND frames within a timing window governed by the TT_EVSE_match_MNBC timer.  \n   \u2022 On receipt, the EVSE uses the profile to decide whether the line conditions are acceptable or if the SLAC matching must be retried or aborted.  \n   \u2022 Failure to process these messages in time (e.g. timer expiry) can trigger a new matching sequence or a fault condition.\n\n5. Lifecycle in the \u201cNew Matching Process\u201d  \n   \u2022 A matching session usually starts with the EV sending CM_START_ATTEN_CHAR.IND, followed by one or more M\u2011SOUNDS and associated CM_ATTEN_PROFILE.IND messages.  \n   \u2022 Once sufficient attenuation data are exchanged and both sides agree on link quality, the SLAC process transitions to higher\u2010layer configuration (e.g. key exchange, network association).\n\nIn summary, CM_ATTEN_PROFILE.IND is the SLAC message by which an EV reports its measured attenuation profile (based on prior M\u2011SOUNDS) to the EVSE. The EVSE uses it\u2014within a defined timeout\u2014to characterize the power\u2011line link and ensure reliable, standards\u2011compliant communication before enabling high\u2011power charging.",
    "What is CM_VALIDATE.REQ?": "CM_VALIDATE.REQ is the \u201cvalidation request\u201d message in the ISO\u201115118/SLAC vehicle\u2011to\u2011grid (V2G) protocol.  It is the first message in the \u201cCM Validate\u201d request\u2011response exchange by which an Electric Vehicle (EV or EVCC) asks the Electric Vehicle Supply Equipment (EVSE or SECC) to perform its validation step before charging or SLAC matching.  \n\nKey points about CM_VALIDATE.REQ:\n\n1. Role in the protocol  \n\u2003\u2013 Sent by the EV (or by a Test System acting as the EV) to the EVSE to initiate validation.  \n\u2003\u2013 Triggers the EVSE to carry out checks (e.g. control\u2011pilot toggles, signal\u2011strength measurements or SLAC attenuation characterization).  \n\u2003\u2013 Always expects a corresponding CM_VALIDATE.CNF confirmation in reply.  \n\n2. Typical contents  \n\u2003\u2013 A \u201cresult\u201d field indicating whether the EV insists on validation (\u201cReady\u201d) or can skip it (\u201cNot\u00a0Ready\u201d).  \n\u2003\u2013 A pilot\u2011timer or TP_EV_vald_toggle field (600\u20133500\u00a0ms) that instructs how long the EV will toggle the pilot line (PEV\u00a0S2) to allow the EVSE to measure.  \n\u2003\u2013 Optional fields such as signalType and other MME\u2011defined parameters, all conforming to the Management Message Entity (MME) definitions in the SLAC annex (e.g. Tables\u00a0A.5/A.6).  \n\n3. Timers and retry behavior  \n\u2003\u2013 The EVSE must respond with CM_VALIDATE.CNF within the TT_MATCH_SEQUENCE timeout.  \n\u2003\u2013 If the EVSE does not respond, the EV may resend CM_VALIDATE.REQ (up to a retry limit, often two).  \n\u2003\u2013 Special rules (V2G3\u2011A09\u201177) apply if the timer field is zero\u2014EVSE must resend its last CM_VALIDATE.CNF.  \n\n4. Where it appears  \n\u2003\u2013 In the SLAC matching sequence between EV and EVSE (A.9.3 in the V2G3 standard).  \n\u2003\u2013 In a suite of conformance test cases (e.g. TC_EVCC_CMN_VTB_CMVALIDATE_001\u2026_020 and corresponding TC_SECC_CMN_VTB_CMVALIDATE_00x).  \n\u2003\u2013 Underpins the \u201cGoodCase\u201d test procedure in which the Test System waits for CM_VALIDATE.REQ and then verifies that the System Under Test (EVSE or EVCC) behaves correctly.  \n\nIn short, CM_VALIDATE.REQ is the standardized request\u2011message that kicks off the validation step of an EVSE\u2013EV charging session, defining how long and under what conditions the EVSE must perform its readiness and signal\u2011level checks before charging can continue.",
    "What is CM_VALIDATE.CNF?": "CM_VALIDATE.CNF is the standard \u201cconfirmation\u201d message in the SLAC\u2011based validation protocol used during electric\u2011vehicle\u2011to\u2011EVSE (Electric Vehicle Supply Equipment) communication.  In practice:\n\n1. Role in the protocol  \n   \u2022 It is sent by the EVSE (or the SECC\u2019s MME module) in direct response to a previously received CM_VALIDATE.REQ from the EV (or test system).  \n   \u2022 It marks the end of the \u201cvalidation\u201d step and tells the EV whether it may proceed (e.g. start SLAC matching or begin power transfer) or if no validation was required.\n\n2. Key fields  \n   \u2022 Result\u00a0\u2013 a status code indicating the outcome of the validation.  Typical values include:  \n     \u2013 Success (e.g. 00h)  \n     \u2013 Failure (some non\u2011zero code)  \n     \u2013 Not_Required (indicating the EVSE has determined no validation step was needed)  \n   \u2022 ToggleNum\u00a0\u2013 the count of control\u2011pilot toggles (BCB\u2011Toggles) observed during the EV\u2019s \u201cPEV\u00a0S2\u201d toggling sequence; used by the EV to verify the EVSE counted the correct number of pilot\u2011line transitions.  \n   \u2022 (Optionally) other SLAC\u2010MME parameters, such as signalType or any fields mandated by the MME template.\n\n3. Timing and sequencing  \n   \u2022 Must be sent within TP_match_response (and certainly before the TT_match_response timer expires) after CM_VALIDATE.REQ arrives.  \n   \u2022 On the EV side the receipt of CM_VALIDATE.CNF stops the TT_match_response timer.  \n   \u2022 On the EVSE side the act of sending CM_VALIDATE.CNF may start the TT_match_sequence timer, awaiting the next step (often CM_SLAC_MATCH.REQ).\n\n4. Interaction with CM_VALIDATE.REQ  \n   \u2022 Every CM_VALIDATE.REQ (which carries a request for validation, including a timeout value in its pilotTimer field) must be followed by exactly one CM_VALIDATE.CNF\u2014unless the EVSE later receives a fresh CM_VALIDATE.REQ with timer=0, in which case it must re\u2011send its previous CM_VALIDATE.CNF.  \n   \u2022 CM_VALIDATE.CNF and CM_VALIDATE.REQ together form the request\u2013response exchange that confirms whether the physical control\u2011pilot toggling and logical SLAC parameters meet the protocol\u2019s requirements.\n\n5. Conformance and test cases  \n   \u2022 The Result field setting is governed by requirements such as V2G3\u2011A09\u201161 through A09\u201177 (e.g. how \u201cNot_Required\u201d is handled, when retries or resends are mandated).  \n   \u2022 A multitude of test cases (TC_EVCC_CMN_VTB_CMVALIDATE_xxx and TC_SECC_CMN_VTB_CMVALIDATE_xxx) verify correct CM_VALIDATE.CNF behavior: timely transmission, correct field values, proper handling of repeats, and correct triggering of subsequent messages like CM_SLAC_MATCH.REQ.\n\nIn short, CM_VALIDATE.CNF is the \u201cI have validated (or waived) your request\u201d message that allows the EV to know it may continue with the SLAC matching sequence or move directly to charging.",
    "What is CM_SLAC_MATCH.REQ?": "CM_SLAC_MATCH.REQ is the SLAC\u2010level \u201cmatch request\u201d message sent by a Plug\u2011in Electric Vehicle (PEV/EV) to an Electric Vehicle Supply Equipment (EVSE) to initiate or re\u2011transmit the Signal Level Attenuation Characterization (SLAC) matching process.  Its key characteristics are:\n\n1. Role and Purpose  \n   \u2022 It is a request (REQ) in the SLAC protocol used to match a PEV with an EVSE over the power\u2011line communication link.  \n   \u2022 By sending CM_SLAC_MATCH.REQ the EV tells the EVSE \u201cI\u2019m ready for the attenuation\u2011based matching phase,\u201d so that the two can agree on network parameters (e.g. NID/NMK) and establish a secure PLC link.  \n\n2. When and How It Is Sent  \n   \u2022 The EV sends CM_SLAC_MATCH.REQ immediately after either \u2013  \n     \u2013 Receiving a CM_VALIDATE.CNF (if validation was needed), or  \n     \u2013 Expiration of the TT_EVSE_MATCH_SESSION timer (if no validation was required).  \n   \u2022 If no CM_SLAC_MATCH.CNF arrives within the prescribed TT_MATCH_SEQUENCE interval, the EV may retransmit CM_SLAC_MATCH.REQ up to C_EV_match_retry times.  \n\n3. Core Parameters  \n   \u2022 runID\u2003\u2003\u2003\u2013 a unique identifier chosen by the EV for this matching session (constant for all messages in the same run).  \n   \u2022 evMac\u2003\u2003\u2003\u2013 the EV\u2019s MAC address.  \n   \u2022 evseMac\u2003\u2003\u2013 the EVSE\u2019s MAC address.  \n   \u2022 applicationType \u2013 identifies the application; in most test cases a valid code is used, but \u2018FF\u2019H may be injected to test error handling.  \n   \u2022 (optionally) other SLAC\u2011specific fields as defined in Table A.7 (e.g. mvfLength, securityType, etc.).  \n\n4. Timer Interaction  \n   \u2022 TT_EVSE_MATCH_SESSION\u2003\u2013 governs when the EV must send (or retransmit) CM_SLAC_MATCH.REQ after session start.  \n   \u2022 TT_MATCH_SEQUENCE\u2003\u2003\u2003\u2013 stops as soon as the EVSE receives a valid CM_SLAC_MATCH.REQ, indicating the sequence has succeeded.  \n\n5. Expected Response  \n   \u2022 Upon correct receipt and validation of CM_SLAC_MATCH.REQ, the EVSE replies with CM_SLAC_MATCH.CNF, supplying the negotiated network parameters.  \n   \u2022 If CM_SLAC_MATCH.REQ is malformed (e.g. invalid runID, mvfLength, MACs), the EVSE may ignore it or drop the session\u2014test cases verify that the EV limits retries to C_EV_match_retry.  \n\n6. Test\u2011Case Usage  \n   \u2022 Many V2G/SLAC test cases (e.g. TC_EVCC_CMN_VTB_CMSLACMATCH_xxx) verify that:  \n     \u2013 CM_SLAC_MATCH.REQ is sent with correct parameters after the appropriate timer.  \n     \u2013 Retries are limited to C_EV_match_retry.  \n     \u2013 CM_SLAC_MATCH.CNF is not sent before TT_MATCH_RESPONSE expires.  \n\nIn summary, CM_SLAC_MATCH.REQ is the standardized \u201cplease match with me\u201d message by which an EV triggers the attenuation\u2010based matching phase of the SLAC protocol toward an EVSE.",
    "What is CM_SLAC_MATCH.CNF?": "CM_SLAC_MATCH.CNF is the standardized \u201cmatch\u2010confirmation\u201d protocol message in the HomePlug Green PHY SLAC (Signal Level Attenuation Characterization) sequence.  In practice it has the following characteristics:\n\n1. Role in the SLAC exchange  \n   \u2022  Sent by the EVSE (Supply Equipment Communication Controller) in direct response to a CM_SLAC_MATCH.REQ issued by the EV (Electric Vehicle Communication Controller).  \n   \u2022  Confirms that the EVSE has received the EV\u2019s request to join or establish the ad\u2011hoc virtual local network (AVLN) and that it agrees on the same low\u2011layer communication parameters.  \n\n2. Timing requirements  \n   \u2022  Must not be transmitted until the TT_match_response timer has expired.  TT_match_response (sometimes called TP_match_response) is the maximum time the EV is allowed to wait for this confirmation.  \n   \u2022  Once CM_SLAC_MATCH.CNF is sent, the EV has until TT_MATCH_JOIN to finish link\u2011establishment before needing to retry.  \n\n3. Message contents  \n   At minimum, a valid CM_SLAC_MATCH.CNF carries:  \n   \u2013 runID: the session identifier agreed with the earlier CM_SLAC_PARM.REQ/REQ sequence, unchanged from the EV\u2019s request.  \n   \u2013 EV MAC and EVSE\u00a0MAC addresses: the source and destination link\u2011layer addresses.  \n   \u2013 NID (Network Identifier): a unique identifier for the newly formed AVLN.  \n   \u2013 NMK (Network Membership Key): the shared security key for use on the AVLN.  \n   Additional fields (applicationType, securityType, mvfLength, etc.) must conform to the Message Management Entity (MME) templates defined in the standard.  \n\n4. Standards and conformance  \n   \u2022  Defined by ISO/IEC\u00a015118\u20113 and the Plug\u2011in Charging (V2G3) test specifications.  \n   \u2022  Requirement V2G3\u2011A09\u201195 mandates that an EV ignore any CM_SLAC_MATCH.CNF with invalid content; V2G3\u2011A09\u2011101 specifies post\u2011reception actions.  \n   \u2022  In conformance tests (e.g. the TC_EVCC_CMN_VTB_CMSLACMATCH_xxx series), the test harness verifies that CM_SLAC_MATCH.CNF arrives only after the proper timer, carries exactly the right runID, NID, NMK and MAC fields, and that the SUT (System Under Test) behaves correctly upon receiving invalid or malformed confirmations.  \n\n5. Effect on link establishment  \n   Receipt of a valid CM_SLAC_MATCH.CNF allows the EV to proceed to logical\u2011link establishment on the AVLN.  If the EVSE never sends it (or sends a malformed one), the EV will retry matching after TT_MATCH_JOIN expires.  \n\nIn short, CM_SLAC_MATCH.CNF is the EVSE\u2019s \u201cyes, I accept your SLAC match request\u201d message, carrying the network\u2010level identifiers and keys that the EV and EVSE will use to build their private PLC link (the AVLN).",
    "What is CM_SET_KEY.REQ?": "CM_SET_KEY.REQ is a SLAC\u2011management message (an MME) used by an Electric Vehicle (EV) or Electric Vehicle Supply Equipment (EVSE) to program the low\u2011layer communication module with the cryptographic and network identifiers that define a logical power\u2011line network.  In essence, it is the \u201cset or update key\u201d request in the PLC\u2011based SLAC protocol.  \n\nKey characteristics and usage of CM_SET_KEY.REQ:  \n\u2022 Message role  \n  \u2013 It is sent unicast from the high\u2011level controller (the MME) down to the local low\u2011layer communication module.  \n  \u2013 It carries the network parameters that the module must adopt before or after the SLAC matching phase.  \n\n\u2022 Parameters carried  \n  \u2013 NID (Network Identifier): the logical network ID under which the node will communicate.  \n  \u2013 NMK (Network Membership Key): a secret key (usually a fixed\u2010length value) used to secure and authenticate all subsequent PLC frames on that network.  \n  \u2013 Possible auxiliary configuration fields (e.g. key type, version, validity period).  \n\n\u2022 Protocol flow  \n  1. After successful SLAC match (CM_SLAC_MATCH.CNF), the controller knows which NID/NMK pair to use.  \n  2. It issues a CM_SET_KEY.REQ, unicast to the low\u2011layer communication module.  \n  3. The module programs its hardware/firmware with the new NID and NMK.  \n  4. It replies with CM_SET_KEY.CNF to acknowledge success or report errors.  \n\n\u2022 Purpose  \n  \u2013 Ensures that every outlet (on the EVSE side) or every EV instance joins exactly the same logical network with the correct shared key.  \n  \u2013 Secures downstream PLC traffic by enforcing the proper NMK.  \n  \u2013 Enables modular design: high\u2011level logic need only send one MME to reconfigure the PHY/MAC layer.  \n\nIn short, CM_SET_KEY.REQ is the \u201cset-key\u201d management message used to provision or rotate the network membership key and identifier in a low\u2011layer communication module during the SLAC\u2011driven configuration of EV\u2011to\u2011EVSE power\u2011line links.",
    "What is CM_SET_KEY.CNF?": "CM_SET_KEY.CNF is a \u201cconfirmation\u201d message (an MME) in the SLAC\u2011based PLC configuration sequence.  In essence:  \n\u2022 Role: It is sent by the low\u2011layer communication module (e.g. in the EV or EVSE) back to its peer to confirm whether a previous CM_SET_KEY.REQ succeeded or failed.  \n\u2022 Context: After a successful CM_SLAC_MATCH.CNF (i.e. both ends have agreed on a PLC link), the controller issues CM_SET_KEY.REQ to install the logical\u2011network keys/parameters into the modem.  The modem then replies with CM_SET_KEY.CNF.  \n\u2022 Contents: At minimum it carries a status code (success/failure).  It may include implementation\u2011specific error or diagnostic information.  \n\u2022 Error handling: The standard leaves it up to each implementation how to react if CM_SET_KEY.CNF reports failure\u2014or if no CM_SET_KEY.CNF arrives at all (e.g. time\u2011out, retry, abort).  \n\u2022 Purpose: To ensure that both ends of the power\u2011line link have loaded the same encryption/authentication keys (and any other logical\u2011network parameters) before entering normal data\u2011exchange mode.",
    "What is CM_AMP_MAP.REQ?": "CM_AMP_MAP.REQ is the protocol\u2010level \u201camplitude map request\u201d message/command used in the CM_AMP_MAP amplitude\u2010mapping procedure.  Its key characteristics are:\n\n1. Purpose  \n   \u2022 Intra\u2011module (low\u2011layer) use:  \n     \u2013 The low\u2011layer communication module issues CM_AMP_MAP.REQ to its peer in order to ask that peer to reduce transmission power on one or more carriers.  \n     \u2013 The peer must acknow\u00adledge with a CM_AMP_MAP.CNF.  If no valid CM_AMP_MAP.CNF arrives within the timer max(TT_match_response), the requester restarts the timer and retransmits, up to C_EV_match_retry times.  After that it declares the match process FAILED.  \n     \u2013 If the peer receives a duplicate CM_AMP_MAP.REQ (because its original CM_AMP_MAP.CNF was lost), it simply re\u2011sends the CM_AMP_MAP.CNF.  \n\n   \u2022 Inter\u2011host (information exchange) use:  \n     \u2013 One host sends CM_AMP_MAP.REQ to another host over the low\u2011layer interface, carrying per\u2011carrier power requests for the recipient\u2019s own amplitude\u2010map calculations.  \n     \u2013 In this context CM_AMP_MAP.REQ does *not* directly force the transmitter\u2019s power; it is purely informational.  \n\n2. Contents  \n   \u2022 AMDATA field:  \n     \u2013 A sequence of 4\u2011bit entries (e.g. 0x0, 0xE, \u2026), each encoding one carrier\u2019s desired amplitude.  \n     \u2013 Resolution is \u20132\u00a0dB per LSB relative to a \u201350\u00a0dBm/Hz reference.  (For example, AMDATA=0b0011 \u21d2 \u20136\u00a0dB below the \u201350\u00a0dBm/Hz baseline.)  \n\n3. Message flow  \n   \u2022 Requester \u2192 CM_AMP_MAP.REQ \u2192 peer  \n   \u2022 Peer   \u2192 CM_AMP_MAP.CNF \u2192 requester  \n   \u2022 Retransmit CM_AMP_MAP.REQ if CNF not received in max(TT_match_response), up to C_EV_match_retry times.  \n\nIn short, CM_AMP_MAP.REQ is the standardized \u201cask\u201d message that carries per\u2011carrier amplitude (power) information\u2014either to negotiate a transmission\u2011power reduction with a low\u2011layer peer or to inform a remote host about desired amplitudes for its own map calculations.",
    "What is CM_AMP_MAP.CNF?": "CM_AMP_MAP.CNF is the HomePlug Green PHY (HPGP) \u201camplitude\u2010map confirmation\u201d message:  \n\n1. Purpose  \n   \u2022 It is the protocol\u2010level confirmation sent by the recipient of a CM_AMP_MAP.REQ to acknowledge that an amplitude\u2010map request has been received and processed.  \n   \u2022 It completes the CM_AMP_MAP.REQ\u2009\u2192\u2009CM_AMP_MAP.CNF exchange defined in the HPGP MME (Message Management Entity) specification and the V2G3\u2011A09\u2011115 series of standards.  \n\n2. Protocol Context  \n   \u2022 Layer/Standard: HomePlug Green PHY (HPGP) / SLAC (Signal Level Attenuation Characterization) management messages.  \n   \u2022 Role: Unicast confirmation from one PLC node (e.g. EVSE) to its peer (e.g. EVCC) that carries a result code indicating success or failure of the amplitude map operation.  \n   \u2022 Timing: Must be sent within the TT_match_response timer. If no valid CM_AMP_MAP.CNF arrives before max(TT_match_response), the requester retransmits CM_AMP_MAP.REQ.  \n\n3. Message Structure (per MME Definition \u2013 Table\u00a0A.9)  \n   \u2022 ResType (1\u00a0byte)  \n     \u2013 0x00 = success  \n     \u2013 0x01 = failure  \n     \u2013 0x02\u20260xFF = reserved  \n   \u2022 (Other fields follow the generic MME_Header\u2009+\u2009MME_Payload structure but carry no additional parameters for basic confirmation.)  \n\n4. Behavioral Rules  \n   \u2022 On receipt of a valid CM_AMP_MAP.REQ, the node must reply with CM_AMP_MAP.CNF containing ResType=0x00 if the request was accepted.  \n   \u2022 If the CM_AMP_MAP.REQ cannot be honored, the node replies with ResType=0x01.  \n   \u2022 Reserved result codes (0x02\u20130xFF) must not be used except where explicitly allowed by future extensions.  \n   \u2022 If the requester does not receive a CM_AMP_MAP.CNF within TT_match_response, it must retransmit CM_AMP_MAP.REQ; on each retransmission the responder must send CM_AMP_MAP.CNF again.  \n\n5. Test\u2010Case Usage  \n   \u2022 Good\u2010case tests (e.g. TC_SECC_CMN_VTB_CMAMPMAP_001 / TC_EVCC_CMN_VTB_CMAMPMAP_001) verify that, after sending a CM_AMP_MAP.REQ with a new amplitude map and valid parameters, the SUT returns CM_AMP_MAP.CNF with ResType=0x00.  \n   \u2022 Negative/time\u2010out tests (e.g. TC_SECC_CMN_VTB_CMAMPMAP_003) verify that no CM_AMP_MAP.CNF is sent until TT_match_response expires, forcing the requester to retry.  \n   \u2022 Retry\u2010limit tests (e.g. TC_SECC_CMN_VTB_CMAMPMAP_004) inject an invalid ResType (0xFF) to ensure the requester limits its retries to the PIXIT\u2011specified count.  \n\n6. Associated Requirement  \n   \u2022 V2G3\u2011A09\u2011110 specifies that every CM_AMP_MAP.REQ must be met with a CM_AMP_MAP.CNF conforming to the MME definition (Table\u00a0A.9) and containing a valid ResType.  \n\nIn summary, CM_AMP_MAP.CNF is the standardized acknowledgment message in the HPGP/SLAC protocol stack that tells the requestor whether its requested amplitude\u2010map update was accepted (ResType=0x00) or rejected (ResType=0x01), and it must be exchanged within defined timing (TT_match_response) and retry rules.",
    "What is D-LINK_READY.indication?": "D\u2011LINK_READY.indication is a primitive in the ISO\u201115118/PLC\u2011based electric\u2011vehicle charging protocol by which the lower\u2011layer communication module notifies the higher\u2011layer entity (HLE) of any change in the data\u2011link status.  Its key characteristics are:\n\n1. Purpose  \n   \u2022 To signal to the HLE that a point\u2011to\u2011point data link over the power\u2011line (or other physical medium) has either been successfully established or has been lost.  \n   \u2022 Enables the HLE to begin or resume higher\u2011level protocol exchanges (e.g. SLAC matching, parameter exchange, security handshakes) once the data link is ready.\n\n2. D\u2011LINKSTATUS  \n   \u2022 The indication carries a D\u2011LINKSTATUS value with one of two states:  \n     \u2013 \u201clink established\u201d  \n     \u2013 \u201cno link\u201d  \n\n3. When It Is Sent  \n   \u2022 As soon as the lower layers detect a data link after wake\u2011up, they send D\u2011LINK_READY.indication(link established).  \n   \u2022 Upon exiting the \u201cMatching\u201d state (e.g. after SLAC_MATCH), whether matching succeeded or failed.  \n   \u2022 If no AMP MAP Exchange occurs within the TT_AMP_MAP_EXCHANGE timeout on either the EV or EVSE side (requirement V2G3\u2011A09\u2011117), a \u201clink established\u201d indication is sent anyway.  \n   \u2022 Any subsequent loss of the data link (after an earlier \u201clink established\u201d) immediately triggers D\u2011LINK_READY.indication(no link).  \n   \u2022 Must be issued without undue delay: the interval between SLAC_MATCH completion and the \u201clink established\u201d indication must not exceed the performance timer TP_link_ready_notification (requirement V2G3\u2011A09\u2011120).\n\n4. Who Sends and Who Receives  \n   \u2022 Sent by the \u201clower layers\u201d (physical + data\u2011link control sublayers).  \n   \u2022 Received by the HLE (Higher\u2011Layer Entity), which sits above the data\u2011link layer and orchestrates the remainder of the charging communication.\n\n5. Role in EV \u21c4 EVSE Communication  \n   \u2022 Ensures both Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE) know exactly when the low\u2011level link is up or down.  \n   \u2022 Forms the prerequisite handshake for all subsequent message exchanges in the vehicle\u2011to\u2011grid charging session.\n\nIn short, D\u2011LINK_READY.indication is the standardized \u201cready/not ready\u201d notification primitive used to bridge the gap between raw link\u2011establishment at the physical/data\u2011link layers and the higher\u2011level charging protocol state machine.",
    "What is D-LINK_TERMINATE.request?": "D\u2011LINK_TERMINATE.request is a low\u2011level protocol primitive used in EV\u2013EVSE (Electric Vehicle\u2013Electric Vehicle Supply Equipment) communication (e.g. the V2G3\u2011M09\u201117 protocol) to tear down an existing data\u2011link session.  In practice it works as follows:\n\n\u2022 Issued by the High\u2011Level Entity (HLE)  \n  \u2013 When the charging application or upper\u2011layer controller decides that the link must be closed, it sends D\u2011LINK_TERMINATE.request down to the low\u2011layer communication module.  \n\n\u2022 Instructs the low\u2011layer communication module to leave the logical network  \n  \u2013 Upon receipt, the module must stop all data\u2011link traffic and disassociate from the current network.  \n\n\u2022 Timing requirement (TP_match_leave)  \n  \u2013 The node (EV or EVSE) has at most the TP_match_leave interval (typically \u2264\u00a01\u00a0s) to drop out of the network.  \n\n\u2022 State and parameter reset  \n  \u2013 All parameters associated with the now\u2011terminated link are reset to their defaults.  \n  \u2013 The matching state is changed to \u201cUnmatched,\u201d making the node ready for a fresh session.  \n\nIn short, D\u2011LINK_TERMINATE.request is the \u201ctear\u2011down\u201d command by which an EV or EVSE\u2019s low\u2011layer comms module is told\u2014within a strictly bounded time\u2014to exit the network, clear link parameters, and await any future matching or reconnection.",
    "What is D-LINK_ERROR.request?": "D\u2011LINK_ERROR.request is a standardized data\u2011link\u2011layer primitive in the ISO\u201115118/V2G3 vehicle\u2011to\u2011grid communication stack that carries an error\u2011management directive from the High\u2011Level Entity (HLE) down into the EVSE\u2019s (or EV\u2019s) low\u2011layer communication node.  It is defined in the V2G3\u2011M07\u201113/\u201114/\u201116 requirements and is used whenever the HLE detects a fault or loss of the established data link and needs to force a tear\u2011down and re\u2011establishment of that link.\n\nKey characteristics and behavior of D\u2011LINK_ERROR.request:\n\n1. Origin and Purpose  \n   \u2022 Issued by the HLE layer to signal an irrecoverable error in the data\u2011link layer.  \n   \u2022 Its intent is to cleanly terminate the current data link and re\u2011start the \u201cmatching\u201d (link\u2011setup) process.\n\n2. Scope of Action  \n   \u2022 Instructs the lower layers (PLC modem, MAC layer) to immediately release or reset all data\u2011link resources.  \n   \u2022 Triggers a control\u2011pilot transition (usually to state E) in order to signal to the EVSE/EV that the physical line has gone idle or errored.  \n   \u2022 Causes the communication node to abandon the current logical network and revert its \u201cmatching\u201d state to \u201cunmatched.\u201d\n\n3. State\u2011Machine Impact  \n   \u2022 Typically received in the X2 state of the EVSE\u2019s (or EV\u2019s) data\u2011link FSM.  \n   \u2022 Upon receipt, the communication node must perform a defined sequence of state transitions (exit X2, go to E, then await restart).  \n   \u2022 The primitive ultimately leads to a D\u2011LINK_READY.indication once the tear\u2011down is complete, indicating to higher layers whether a new data link can now be established or not.\n\n4. Options for Handling (EVSE vs. EV)  \n   \u2013 EVSE\u2019s Communication Node:  \n     \u2022 Implements one of two alternative recovery procedures as specified in V2G3\u2011M07\u201113/\u201114.  \n     \u2022 Both options involve termination of the current link, toggling the control pilot back to \u201cidle,\u201d resetting matching timers and counters, then re\u2011initiating SLAC/HomePlug\u2011based discovery.  \n   \u2013 EV\u2019s Communication Node:  \n     \u2022 Must keep its overall protocol\u2010state unchanged, leave the existing logical network, set its matching state to \u201cunmatched,\u201d and await a fresh invitation from the EVSE to re\u2011match.\n\n5. Where It Fits in the Protocol  \n   \u2022 Part of the error\u2011management framework defined in Clause\u00a06 and Clause\u00a09 of the V2G3 test specification.  \n   \u2022 Complements primitives like D\u2011LINK_READY.indication (success/failure of data\u2011link) and CM_VALIDATE.req/ind (higher\u2011layer parameter validation).  \n   \u2022 Ensures robust recovery from noise, PLC\u2011modem faults or higher\u2011layer protocol violations, by forcing a clean restart of the physical and data\u2011link layers.\n\nIn summary, D\u2011LINK_ERROR.request is the \u201chard reset\u201d command for the data\u2011link in an EV\u2194EVSE charging session.  By propagating an HLE\u2011detected link\u2011failure down into the control\u2011pilot and PLC/MAC stack, it guarantees that both sides abandon any corrupted link state and re\u2011negotiate from scratch under well\u2011defined timing and signaling rules.",
    "What is D-LINK_PAUSE.request?": "The D\u2011LINK_PAUSE.request is a data\u2011link\u2011layer service primitive defined in the vehicle\u2011to\u2011grid (V2G3) communication protocol between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE).  Its sole purpose is to tell the lower layers of the communication stack to \u201cpause\u201d or go into a low\u2011power (sleep) mode while preserving the established link state (\u201cMatched\u201d).  \n\nKey points about D\u2011LINK_PAUSE.request  \n1. Invocation:  It is sent by whichever entity (EV or EVSE) needs to suspend data\u2011link activity without fully tearing down the logical connection.  \n2. Effect on Lower Layers:  Upon receipt, the lower\u2011layer communication module may (optionally) power down or significantly reduce its activity to save energy, but it must retain all network parameters so that the link can be resumed quickly.  \n3. Control\u2011Pilot Signaling:  \n   \u2013 On the EV side, reception of D\u2011LINK_PAUSE.request causes the EV to move its control\u2011pilot circuit into state \u201cBx.\u201d  \n   \u2013 On the EVSE side, it must switch the control\u2011pilot to the prescribed idle/sleep state (per requirement V2G3\u2011M07\u201120).  \n4. State Retention:  Although data transmission is suspended, both ends keep the data\u2011link in the \u201cMatched\u201d state.  When communication is to be resumed, a D\u2011LINK_READY.indication (or equivalent) will bring the link back up without repeating the full matching procedure.  \n5. Standard Reference:  The behavior of D\u2011LINK_PAUSE.request (including mandatory state changes and the optional powering down of the physical module) is governed by the V2G3\u2011M07\u201120 requirement in the ISO/IEC 15118 family of standards.  \n\nIn short, D\u2011LINK_PAUSE.request is the formal \u201csleep\u201d command for the EV\u21c4EVSE data link, allowing both sides to conserve power without losing the context of their already\u2011matched communication session."
}