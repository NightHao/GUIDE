{
    "What is the system architecture of Vehicle-to-Grid?": "A typical Vehicle-to-Grid (V2G) system can be viewed as three cooperating domains\u2014 the Electric Vehicle (EV), the Charging Station (often called Electric Vehicle Supply Equipment or EVSE), and the Power Grid\u2014 tied together by a layered communication and control architecture defined by the ISO-15118 family of standards. Below is an overview of its major building blocks and how they interact:\n\n1. EV Domain  \n   \u2022 Electric Vehicle (EV)  \n     \u2013 The vehicle\u2019s battery, motor, power electronics and on-board charger.  \n     \u2013 Hosts the Electric Vehicle Communication Controller (EVCC), which acts as the client in all V2G communication.  \n   \u2022 EVCC (Electric Vehicle Communication Controller)  \n     \u2013 Implements the high-level V2G protocol (ISO 15118 application layer), handles charging/discharging requests, certificate\u2010based authentication, billing, etc.  \n     \u2013 Manages state machines, timers and message exchanges with the EVSE\u2019s counterpart, the SECC.\n\n2. EVSE (Charging Station) Domain  \n   \u2022 Power conversion and metering hardware  \n     \u2013 AC or DC power electronics that actually deliver or absorb energy to/from the vehicle.  \n   \u2022 SECC (Supply Equipment Communication Controller)  \n     \u2013 Acts as the server in the ISO 15118 protocol.  \n     \u2013 Negotiates charging parameters (voltage, current, schedule), implements security (TLS), and enforces grid/operator policies.  \n   \u2022 Booster Circuit Breaker (BCB)  \n     \u2013 A switch or breaker used during test or wake-up sequences (\u201ctoggle\u201d event) to emulate grid disturbances or to resume a paused session.\n\n3. Grid/Aggregator Domain  \n   \u2022 Distribution Grid / Energy Management System  \n     \u2013 Provides dynamic grid constraints (e.g. maximum charge/discharge power based on local demand).  \n     \u2013 Sends updated limitations to EVSE, which forwards them over the high-level link to the EV.\n\n4. Physical & Data-Link Layers  \n   \u2022 Power Line Communication (PLC) / PWM signaling  \n     \u2013 ISO 15118-3 defines the physical (e.g. modulation, wiring) and data-link layers (frame formats, MAC) used to carry higher-level messages over the charging cable.  \n   \u2022 SLAC (Signal Level Attenuation Characterization)  \n     \u2013 A sub-procedure to establish and optimize the PLC link before any ISO 15118 messaging.\n\n5. High-Level Communication (HLC-C)  \n   \u2022 Defined in ISO 15118-2 and \u20115, sometimes referred to simply as \u201cHLC-C.\u201d  \n   \u2022 Once the PLC link is up, EVCC and SECC exchange XML\u2010based V2G messages (e.g. ServiceDiscovery.req, ChargeParameterDiscovery.req, SessionStopReq).  \n   \u2022 Carries dynamic grid information, charge schedules, pricing, and manages bidirectional power flow (charging or discharging back to the grid).\n\n6. Session & State Management  \n   \u2022 SDP Procedure (Service Discovery Protocol)  \n     \u2013 Ensures both sides are ready before session binding.  \n   \u2022 B1/B2 Transitions  \n     \u2013 B1 = Active communication state; B2 = Sleep/paused state.  \n     \u2013 Wake-up transitions triggered by timers or external toggles (e.g. BCB events).  \n   \u2022 SessionStopReq  \n     \u2013 A dedicated V2G message used by either party to cleanly terminate or pause a session.  \n\n7. Standards & Conformance  \n   \u2022 ISO 15118-3:2015 (Physical/Data-Link Layer)  \n   \u2022 ISO 15118-2 / \u20115 (High-Level Communication and Application Layer)  \n   \u2022 Conformance test suites (e.g. PICS_CMN_CMN_CombinedTesting, PLCLinkStatus test cases TC_\u2026PLCLinkStatus_001\u2013012, etc.) verify correct implementation of link behavior, state transitions, message syntax/semantics and grid-informed control logic (e.g. requirement V2G3-M06-14 mandating HLC-C mode for V2G charging loops).\n\nIn sum, the V2G architecture is a layered system where the EV\u2019s EVCC and the EVSE\u2019s SECC communicate bidirectionally over a PLC link, using the ISO 15118 protocol suite, to negotiate, control and monitor both energy flow and session state under the supervision of the grid/operator domain.",
    "What is HPGP?": "HomePlug Green PHY (often abbreviated HPGP or GPHY) is a low-power, low-complexity variant of the HomePlug family of power-line communication (PLC) specifications, specifically optimized for smart-grid and electric-vehicle charging applications.  Its key characteristics and functional elements are:\n\n1. Purpose and Applications  \n \u2022 Designed for energy-management, smart-grid and vehicle-to-grid (V2G) communications, and in particular for communication over the Control Pilot line in Mode 3 EV charging.  \n \u2022 Mandated by ISO 15118 for the physical and data-link layers of the EV/EVSE interface, and referenced in IEC 61851\u20101 (often called \u201cIEC-1\u201d) Annex A.  \n\n2. Physical Transmission  \n \u2022 Uses the existing AC wiring infrastructure (Control Pilot conductor, Protective Earth, even the charge cord) as a high-frequency transmission path.  \n \u2022 Employs OFDM carriers \u201cnotched\u201d to avoid interference with amateur bands, broadcast services, etc.  \n \u2022 Coupling to the Control Pilot line is via a capacitive coupling circuit (plus inductor L to block capacitive loads), injection transformer or coupling transformer.  \n \u2022 Low-pass filters on the Control Pilot preserve the low-frequency duty-cycle signaling while blocking the GPHY HF band from the vehicle\u2019s analog control circuitry.  \n \u2022 Must contend with insertion loss and capacitive loading of the EVSE, cable and EV end, so matching and SLAC (Signal-Level Attenuation Characterization) processes are used to characterize and optimize signal power.  \n\n3. Protocol Stack and Network Management  \n \u2022 Physical Layer (PHY): defines modulation (OFDM), carrier spacing, power spectral density limits and band-notching.  \n \u2022 Data Link / MAC Layer: handles media-access control, node-to-node framing, error detection/correction, service-access points (Control SAP for GPHY configuration, ETH SAP for an Ethernet-II-class interface).  \n \u2022 Central Coordinator Manager: the device (often in the EVSE) that orchestrates network formation, key distribution (NMK\u2192NID derivation), SLAC matching, and admission of leaf nodes (EV modems).  \n \u2022 Coexistence (ISP): supports the IEEE-defined Intersystem Protocol so HPGP can coexist on the same wiring with other HomePlug technologies (AV, AV2, etc.).  \n \u2022 Security and Logical Networks: uses Network Identifiers (NIDs) derived from Network Membership Keys (NMKs) for link security and segregation of multiple EV\u2010EVSE pairs on the same physical bus.  \n\n4. SLAC and Matching Process  \n \u2022 SLAC (Signal-Level Attenuation Characterization) is a specialized protocol for measuring signal attenuation and establishing the best logical link between an EV and a specific EVSE outlet.  \n \u2022 Messages such as CM_SLAC_MATCH, CM_AMP_MAP.REQ/CNF, CM_VALIDATE.REQ, etc., are defined in HPGP and exercised in ISO 15118\u20103 test suites.  \n \u2022 The matching process aligns the EV\u2019s low-layer modem parameters to the EVSE\u2019s channel characteristics before higher-layer ISO 15118 message exchange.  \n\n5. Regulatory and Standards Context  \n \u2022 Specified in HomePlug Green PHY Specification Release Version 1.1.1 (2013).  \n \u2022 Normatively referenced by ISO 15118-3 (\u201cRoad vehicles \u2013 Vehicle to grid communication interface \u2013 Part 3: Physical and data link layer requirements\u201d) and by IEC 61851-1 mode 3 for control pilot signaling.  \n \u2022 V2G3-A11-01 through A11-06 requirements in ISO/IEC conformance documents mandate GPHY injection circuits, EMC/ESD safeguards, and support for all IEC control-pilot duty cycles.  \n \u2022 TTCN-3 test language definitions for SLAC and HPGP frame decoding are included in ISO 15118 test suites.  \n\n6. Implementation Considerations  \n \u2022 Requires a \u201clow-layer communication module\u201d in both EV and EVSE to handle the PHY/MAC functionality in hardware or firmware.  \n \u2022 Uses prescalers to manage transmit power within regulatory limits, and low-pass filters to isolate the control-pilot hardware from HF energy.  \n \u2022 Charge-cord length, connector capacitance, and the vehicle\u2019s protective-earth wiring all contribute to channel attenuation and must be accounted for in the coupling design.  \n\nIn short, HomePlug Green PHY is the standardized, low-power PLC modem technology that enables reliable, secure, high-frequency data exchange between an electric vehicle and its supply equipment\u2014using the existing control-pilot conductor and associated wiring\u2014so that ISO 15118 and related smart-grid functions can operate seamlessly during charging.",
    "What is SLAC?": "Signal Level Attenuation Characterization (SLAC) is both a protocol and a test process used in electric-vehicle charging systems (particularly in the ISO 15118 and HomePlug Green PHY environments) to measure, analyze and manage the attenuation of the power-line communication (PLC) channel between a Plug-in Electric Vehicle (PEV) and the Electric Vehicle Supply Equipment (EVSE). By characterizing how much the signal is weakened (in dB) as it travels over the power wiring, SLAC ensures that the PEV and the EVSE can establish a reliable, secure PLC link, select the \u201cbest\u201d outlet (in the case of an EVSE with multiple sockets), negotiate network parameters, and agree on encryption keys.\n\nKey aspects of SLAC include:\n\n 1.  Initialization  \n    \u2022  After the EVCC (the vehicle\u2019s communication controller) first plugs in, the EVSE\u2019s low-layer communication module must be ready to receive a SLAC request within a timeout called TT_EVSE_SLAC_init.  \n    \u2022  The EV (or EVCC) sends a CM_SLAC_PARM.REQ message (and the EVSE replies with CM_SLAC_PARM.CNF) to set up run-IDs, MAC addresses and other parameters for the SLAC session.\n\n 2.  Sounding (Multinode Broadcast)  \n    \u2022  The EVSE transmits CM_MNBC_SOUND_IND messages\u2014brief bursts (\u201csounds\u201d) over the PLC channel\u2014that let the EV discover which outlet gives the strongest reception.\n\n 3.  Attenuation Characterization  \n    \u2022  Once an outlet is selected, the EVSE (or EVCC during testing) sends CM_START_ATTEN_CHAR_IND to begin a series of attenuation measurements.  \n    \u2022  For each group of soundings the EVSE reports back via CM_ATTEN_CHAR_IND (listing attenuation values) and CM_ATTEN_CHAR.RSP (the vehicle\u2019s acknowledgment).  \n    \u2022  Optionally CM_ATTEN_PROFILE_IND messages may follow to convey an aggregated attenuation profile.\n\n 4.  Matching and Validation  \n    \u2022  Based on the measured attenuation, the EVCC and EVSE execute a matching procedure with CM_SLAC_MATCH_REQ/CM_SLAC_MATCH_CNF messages to confirm they have identified the same outlet and channel.  \n    \u2022  As a final check the CM_VALIDATE_REQ/CM_VALIDATE_CNF exchange may be used to ensure the link truly meets quality requirements (e.g. meets duty-cycle and noise limits).\n\n 5.  Shutdown  \n    \u2022  After charging session setup is complete (or at test teardown), both sides invoke ShutdownConfiguration_SLAC to safely close down the SLAC session.\n\nSLAC is specified in ISO 15118-3:2015 (Annex A.9) and in the HomePlug Green PHY specification (release 1.1.1). In a test environment it is exercised via TTCN-3 data structures (defined in Annex G) and timers (e.g. TT_EVSE_SLAC_init, TT_EV_atten_results, TT_match_response) to verify correct behavior, conformance to requirements such as V2G3-A09-03/A09-17/A09-118, and robust handling of corner cases (timeouts, retries, invalid parameters). By characterizing and matching signal attenuation, SLAC enables reliable PLC-based communication, secure key exchange and proper PEV-to-EVSE association in AC charging systems.",
    "What is Logical Network?": "A \u201clogical network\u201d in the context of EV\u2010to\u2010Grid communication is not a separate piece of hardware but rather a virtual, link-layer grouping of devices (EV, EVSE, low-layer communication modules, communication nodes, etc.) that allows them to discover one another, exchange encrypted payloads, and coordinate charging and data\u2010exchange activities.  Its key characteristics are:\n\n1. Layer-2 scope  \n   \u2022 It lives at the data-link layer (OSI Layer 2) and uses its own network identifiers and encryption key (NMK).  \n   \u2022 Higher layers see only members of the same logical network and can exchange messages or data only if they share that Layer 2 context.\n\n2. Virtual segmentation on shared physical media  \n   \u2022 Multiple logical networks can coexist on the same wires or PLC spectrum\u2014each isolated by its own NMK and network configuration.  \n   \u2022 This provides network segmentation without additional physical cabling.\n\n3. Managed by the Central Coordinator (CCo)  \n   \u2022 The CCo (Central Communication Controller) establishes and maintains the logical network, tracks who has joined or left, and detects loss of participants (e.g., when an EV departs).  \n\n4. Established during the SLAC \u201cmatching\u201d process  \n   \u2022 The EVSE generates a random NMK and other joining parameters.  \n   \u2022 Via the CM_SLAC_MATCH exchange (MMEs), both EVSE and EV configure their low-layer modules (with CM_SET_KEY requests) to use that NMK and join the same logical network.  \n   \u2022 Once joined, encrypted tone\u2010masked payloads and amplitude maps can flow.\n\n5. Join/leave behavior and error handling  \n   \u2022 The EV\u2019s or EVSE\u2019s low-layer communication module joins only after successful parameter exchange (when EV_Discovering_status == EVSE_FOUND).  \n   \u2022 On errors or upon receiving a D-LINK_TERMINATE.request, the module must leave the logical network within TP_match_leave (typically \u2264 1 s), reset the NMK, and revert to an \u201cUnmatched\u201d state.  \n\n6. Visibility on higher layers  \n   \u2022 Devices in the same logical network become visible to each other at higher protocol layers (e.g. for IP or application traffic), while others remain invisible.  \n\nIn short, a logical network is the software-defined, encrypted Layer 2 \u201cneighborhood\u201d that an EV and an EVSE build (and leave) during the SLAC-based matching process so that they can securely exchange control, measurement, and charging data over a shared physical medium.",
    "What is CCo?": "The Central Coordinator (CCo), also referred to as the Central Communication Controller, is the dedicated entity in a vehicle-to-grid communication system\u2014typically located on the EVSE side\u2014that is responsible for creating, managing and supervising the low-layer logical network over which an Electric Vehicle (EV) and the charging equipment communicate.  Key aspects of the CCo role include:\n\n\u2022  Logical-network management  \n   \u2013  Establishes and maintains the virtual network into which EV(s) join.  \n   \u2013  Detects when an EV joins or leaves the network and triggers the appropriate timers and state changes.  \n\n\u2022  Timer control  \n   \u2013  When a new link is detected, the CCo stops the TT_MATCH_JOIN timer (which governs the maximum duration for matching and joining).  \n\n\u2022  Link control  \n   \u2013  Responds to higher-layer requests to terminate a link.  This indicates that a control relationship exists between upper-layer protocols and the CCo.  \n\n\u2022  Management messaging  \n   \u2013  Uses SLAC Management Message Entries (MMEs) to exchange configuration, parameterization and control messages with the EV\u2019s low-layer module.  \n\n\u2022  Configuration requirements  \n   \u2013  Under V2G3-A06-02, the EV\u2019s low-layer communication module must be configured never to assume the CCo role; the CCo function is always on the EVSE side.  \n   \u2013  The EVSE\u2019s low-layer module is configured into CCo mode\u2014typically via the APCM_SET_CCo.REQ primitive defined in the HPGP \u201cControl SAP Service.\u201d  \n\nBy centralizing the control of network formation, timing and message exchange, the CCo ensures that the EV\u2013EVSE communication link is established, maintained and torn down in a consistent, standards-compliant manner.",
    "What is the difference between Data SAP and Data link control SAP?": "In many data\u2010link\u2013layer designs you actually get two parallel Service Access Points (SAPs) up into the layers above:\n\n 1.   The \u201cData\u201d SAP (often called the ETH SAP in an Ethernet or PLC context)  \n      \u2022  Purely the data\u2010plane interface.  \n      \u2022  Carries user-payload packets (IP datagrams, SLAC messages, etc.) up and down through the data-link layer.  \n      \u2022  Typical primitives:  \n         \u2013  DATA-LINK_SEND.REQ  (higher layer hands a data packet down for transmission)  \n         \u2013  DATA-LINK_SEND.CNF  (status of that transmission, success or failure)  \n         \u2013  DATA-LINK_RECEIVE.IND  (notify higher layer that a new packet has arrived)  \n      \u2022  Identified in the standard as the ETH SAP or simply \u201cData SAP.\u201d  In HomePlug Green PHY it is completely covered by the HPGP (G3-PLC MAC) specification.\n\n 2.   The \u201cData-Link Control\u201d SAP  \n      \u2022  Purely the control-plane interface.  \n      \u2022  Manages and reports link state, error conditions, flow-control and other control signals between the data-link layer and the layer-3 (network) and connection-coordination entity.  \n      \u2022  Typical primitives and messages:  \n         \u2013  D-LINK_READY.indication(link established)  \n         \u2013  D-LINK_READY.indication(no link)  \n         \u2013  D-LINK_ERROR.request  (notify higher layers of a link failure or error)  \n         \u2013  D-LINK_TERMINATE.request  (request to tear down the link)  \n      \u2022  Sits \u201cabove\u201d (or beside) the general packet forwarding machinery; it is provided by the connection-coordination entity in order to feed link status and error reports up to the network or application layers.\n\nIn short:  \n\u2014 Data SAP = \u201chere\u2019s your user data\u201d  \n\u2014 Data-Link Control SAP = \u201chere\u2019s your link-management/control information.\u201d",
    "What is the difference between basic signaling and high-level communication?": "Basic signalling and high-level communication (HLC) coexist in modern EV charging but serve very different roles:\n\n1. Underlying mechanism  \n  \u2013 Basic signalling  \n    \u2022 Defined by IEC 61851-1 (often called \u201cMode 3 basic charging\u201d), it uses only the control-pilot line: a simple PWM duty-cycle and discrete states (A, B, C, D, E, F, etc.) to indicate \u201cEV plugged in,\u201d \u201cready to charge,\u201d \u201cmaximum current,\u201d \u201cventilation required,\u201d and so on.  \n    \u2022 No data link or packet-based messages\u2014just analog signaling and low-pass filtering on the CP wire.  \n    \u2022 Always available as a fallback whenever HLC-C fails or is unsupported.  \n\n  \u2013 High-Level Communication (HLC)  \n    \u2022 An overlay protocol (commonly called HLC-C in ISO 15118) that runs on top of a power-line communications (PLC) modem such as HomePlug Green PHY.  \n    \u2022 Exchanges full digital messages (authentication, authorization, grid information, dynamic load management, billing data, vehicle-to-grid commands, etc.).  \n    \u2022 Specified by ISO 15118-3 and the V2G3 series requirements (e.g. V2G3-M06-02 mandates its use in addition to basic signalling).  \n    \u2022 Cannot change the pilot PWM duty cycle for conveying grid limits; all dynamic parameters are sent in HLC messages.  \n\n2. Functionality and features  \n  \u2013 Basic signalling  \n    \u2022 Conveys only a handful of pre-defined flags and a coarse \u201cmaximum current\u201d via PWM duty cycle.  \n    \u2022 No support for Plug-and-Charge, bidirectional energy flow, detailed metering, firmware updates or sophisticated grid-edge coordination.  \n\n  \u2013 High-Level Communication  \n    \u2022 Supports advanced use cases: Plug-and-Charge (PnC), External Identification Means (EIM), device authentication, smart-charging profiles, V2G charge/discharge loops, firmware-over-the-air, dynamic grid constraints, etc.  \n    \u2022 Bidirectional, session-oriented protocol with retry, encryption (if used), SLAC matching for PLC, ACK/NACK, timers, and error recovery.  \n\n3. Relationship and fallback  \n  \u2013 Basic signalling is the universal, lowest-common-denominator channel\u2014every EVSE and EV must at least support it to begin charging under IEC 61851-1.  \n  \u2013 HLC builds on top of basic signalling: first a B-link (control pilot at ~5 % duty) indicates the EV is connected, then a PLC link is established (using SLAC, CM_SLAC_* messages), and finally the HLC-C message exchange runs over that link.  \n  \u2013 If the EV or EVSE does not support HLC-C, or if the PLC link fails, charging continues under basic signalling only (with potentially reduced feature set).  \n\nIn short, basic signalling is an analog \u201con-off\u201d and duty-cycle pilot scheme for very limited control, while high-level communication is a full digital protocol layer (ISO 15118-based) over PLC that enables all the \u201csmart\u201d charging and V2G features.",
    "What is the difference between MTC and PTC?": "The \u201cMain Test Component\u201d (MTC) and the \u201cParallel Test Component\u201d (PTC) are two cooperating but logically distinct parts of a TTCN-3-based test architecture.  In brief:\n\n1. Role and Scope  \n  \u2013 Main Test Component (MTC)  \n    \u2022 The primary test controller.  It instantiates the overall test, drives the test verdict, orchestrates the sequence of TTCN-3 test steps, manages timing, stimulus and response.  \n    \u2022 Depending on the System Under Test (SUT) it may be an EVCC_Tester (when the SUT is an EVCC) or an SECC_Tester (when the SUT is an SECC).  \n    \u2022 Contains the TTCN-3 test configuration (templates, functions, timers) and maps its ports (pt_SLAC_Port, pt_HAL_61851_Port, pt_HAL_61851_Internal_Port) to the abstract Test System Interface.  \n    \u2022 Responsible for link-status processing, EIM-authorization control, reducing control-pilot signal level, dispatching CM_* messages, collecting verdicts.  \n\n  \u2013 Parallel Test Component (PTC)  \n    \u2022 A subordinate, concurrently running component launched and controlled by the MTC.  \n    \u2022 Dedicated to observing or stimulating a particular slice of behavior in parallel with the main test flow (for example, PWM-state changes or external-identification (EIM) status).  \n    \u2022 Implements the IEC 61851-1 PTC functions such as \u201cconfirm PWM state,\u201d \u201cchange valid duty-cycle range,\u201d \u201cprocess incoming EIM status.\u201d  \n    \u2022 Uses its own mapped ports (pt_HAL_61851_Internal_Port to the HAL_61851_Listener) to monitor control-pilot voltage/frequency/duty-cycle and to inform the MTC of success or failure events.  \n\n2. Port mappings and technology integration  \n  \u2013 Both share a HAL_61851_Internal_Port but connect it to different listeners:  \n    \u2022 In the MTC, that port feeds into the test control logic for sequencing, verdict decisions, link-status monitoring.  \n    \u2022 In the PTC, it drives the parallel observer that continuously watches PWM parameters (voltage state, frequency, duty cycle, proximity resistor) against the Annex A valid ranges.  \n\n3. Functional decomposition  \n  \u2013 MTC  \n    \u2022 Drives test cases: sends stimuli, waits for CM_VALIDATE, CM_SLAC_MATCH, CM_AMP_MAP, CM_ATTEN_CHAR messages, enforces timers and retries.  \n    \u2022 Hosts pre-condition, test-behavior and post-condition modules (e.g. f_\u2026_PR_\u2026, TestBehavior_\u2026, f_\u2026_PO_\u2026).  \n    \u2022 Coordinates SLAC, SDP, PLC-link-status, validation, attenuation-characterization flows end-to-end.  \n\n  \u2013 PTC  \n    \u2022 Runs side-by-side to spot duty-cycle transitions (State A\u2194B\u2194C), trigger validity checks (V2G5-027, V2G5-028, V2G5-029\u2026), capture EIM-authorization outcomes (V2G5-034).  \n    \u2022 Doesn\u2019t itself send high-layer CM_* messages apart from notifying the MTC of low-level pilot-signal events.  \n    \u2022 Can be considered the \u201chardware-abstraction\u201d or \u201cprotocol-test\u201d slice focusing strictly on IEC 61851-1 signalling.  \n\n4. Hierarchy and lifecycle  \n  \u2013 The MTC creates and tears down one or more PTC instances according to the test configuration (e.g. CF_05_001).  \n  \u2013 PTC runs for the entire duration of the test case (or a defined subset) continuously observing; it reports back asynchronously via mapped ports or internal signals.  \n  \u2013 When the MTC advances to the next test step or concludes, it stops the PTC and collects its final status.  \n\nSummary  \n  \u2022 The Main Test Component is the \u201cmaster test engine\u201d that sequences stimuli and verdict logic across high-level protocols (SLAC, CmValidate, CmAmpMap, CmAttenChar, PLC-link).  \n  \u2022 The Parallel Test Component is a \u201cconcurrent observer/stimulator\u201d that specifically implements and monitors the IEC 61851-1 PTC functions (PWM-state and EIM status) and reports back to the MTC.",
    "What is ATS?": "The Abstract Test Suite (ATS) is a standardized, high-level collection of test cases and associated artifacts whose purpose is to verify that a System Under Test (SUT) conforms to the normative requirements of a protocol or standard\u2014most notably ISO 15118-3 in the context of vehicle-to-grid (V2G) communication.  In more detail:\n\n1. Definition and Scope  \n   \u2022  A set of \u201cabstract\u201d test cases: specified without tying them to particular tools or implementation details.  \n   \u2022  Designed to exercise both \u201cstatic\u201d (capability) and \u201cdynamic\u201d (behavior) conformance requirements.  \n   \u2022  Organized and referenced in tables (e.g. Table 29 for requirements covered, Table 27 for those omitted).  \n\n2. Relationship to ISO 15118-3  \n   \u2022  ISO 15118-3 defines the communications protocol requirements for EVSE \u2194 EV interfaces (PLC, timing, message formats, etc.).  \n   \u2022  The ATS maps individual ISO 15118-3 requirements to one or more abstract test cases (denoted by \u201cX\u201d where coverage exists).  \n   \u2022  Static conformance (observable capabilities) is verified via \u201ccapability tests\u201d; dynamic conformance (message behavior over time) via \u201cbehavior tests.\u201d  \n\n3. Key Artifacts  \n   \u2022  PICS (Protocol Implementation Conformance Statement): a declaration by the implementer of which protocol options/capabilities are supported.  All PICS selections to be tested are listed in the ATS (e.g. Tables 6\u20138).  \n   \u2022  PIXIT (Protocol Implementation eXtra Information for Testing): supplemental information needed to run tests against a particular implementation (e.g. parameter values, test-specific settings), summarized in the ATS (e.g. Tables 9\u201311).  \n   \u2022  Requirement mappings: a cross-reference between ISO 15118-3 requirement identifiers and ATS test cases (see Table 29).  \n\n4. Process Integration  \n   \u2022  Interpretation: the activity of reading the ATS and determining exactly which test steps, parameters and verdict criteria apply.  \n   \u2022  Execution: the act of running those abstract test cases\u2014typically by a Test Framework\u2014which instantiates them, drives the SUT through message sequences, collects responses and applies pass/fail verdicts.  \n   \u2022  Test Framework: the software/hardware environment (as defined in V2G5-038 and related specifications) that loads the ATS, initializes adapters (e.g. SUT adaptor, platform adaptor), encodes/decodes messages, and logs results.  \n\n5. Usage  \n   \u2022  Mandated in conformance testing campaigns for ISO 15118-3 implementations (both EVCC and SECC roles).  \n   \u2022  Provides a uniform, implementation-agnostic bench of tests so different laboratories or tool-vendors can reproduce results.  \n   \u2022  Ensures full traceability from standardized requirements to concrete test cases, while documenting any requirements not covered by the ATS.  \n\nIn summary, the Abstract Test Suite is the centerpiece of a standardized conformance-testing methodology: it defines what to test (the requirements), how to test it (the abstract test cases, PICS and PIXIT), and leaves the \u201chow to run\u201d to a compliant test framework that carries out the interpretation and execution phases.",
    "What is TSS?": "The Test Suite Structure (TSS) is the ISO-15118-conformance framework that systematically defines how all of the pieces of a conformance test suite\u2014modules, test cases, data, identifiers, templates, supplementary documents and utility functions\u2014fit together.  In more detail:  \n\n1. Purpose and Scope  \n  \u2022  Provides the naming conventions, hierarchy and layout for every test module and test case in an ISO 15118 conformance suite.  \n  \u2022  Ensures consistency in how tests for both the Electric Vehicle Communication Controller (EVCC) and the Supply Equipment Communication Controller (SECC) are defined, executed and reported.  \n\n2. Hierarchical Organization  \n  \u2022  First level (\u201cmodules\u201d): groups of related test cases aligned with specific protocol features or use\u2010cases defined in ISO 15118 (e.g. SessionSetup, Metering, ChargeParameterDiscovery).  \n  \u2022  Second level (\u201ctest cases\u201d): individual, atomic tests that stimulate the System Under Test (SUT) with defined inputs and verify specific expected reactions.  \n\n3. Key Components  \n  \u2022  Module Identifiers: unique codes that locate a module in the overall suite (e.g. \u201cTS_EVCC_SessionSetup\u201d).  \n  \u2022  Test Case Templates: standardized shells for writing test cases, with clearly defined preconditions, stimuli, expected outcomes and verdict criteria. Separate template rules exist for EVCC tests and for SECC tests.  \n  \u2022  PICS (Protocol Implementation Conformance Statement): a form where implementers declare which protocol options they support or omit.  It is part of the TSS and drives test selection.  \n  \u2022  PIXIT (Protocol Implementation eXtra Information for Testing): complements the PICS by capturing implementation\u2010specific details needed to execute certain tests.  \n  \u2022  Annexes: appendices to the TSS document that house supplementary information\u2014additional templates, fill-in tables, background explanation or XML schemas.  \n  \u2022  D.4 Utility Functions: a sub-section of the TSS (in ISO 15118-3, often denoted Annex D.4) that collects general\u2010purpose helper functions (timeouts, common message generators, basic checks) reusable across many test cases.  \n\n4. Alignment with ISO 15118  \n  \u2022  The TSS is structured to mirror the use\u2010cases and requirements specified in ISO 15118-3 (and the other parts of ISO 15118).  \n  \u2022  Section 7.2 of the standard is typically where the \u201cTest suite structure\u201d is defined\u2014laying out both the conceptual hierarchy and the document organization.  \n\n5. How It\u2019s Used in Practice  \n  \u2022  Test developers consult the TSS when adding new modules or test cases to ensure they follow the same identifier rules, template formats and annex references.  \n  \u2022  Test laboratories use the PICS/PIXIT statements derived from the TSS to automatically select and parameterize the correct subset of tests for a given implementation.  \n  \u2022  Tool vendors build their test\u2010execution engines around the utility functions in D.4 so that timeouts, logging, message parsing and verdict reporting are consistent across test suites.  \n\nIn short, the Test Suite Structure is the \u201cblueprint\u201d for how an entire ISO 15118 conformance test suite is put together\u2014what sections it contains, how modules and test cases are named, what supporting information (PICS, PIXIT, annexes) is required, and which shared utilities (D.4) are available to every test.",
    "What is EIM?": "External Identification Means (EIM), also called \u201cExternal Identification Mean\u201d in ISO 15118-1, is the set of methods and associated protocol profile by which an EV or its user is identified and authorized for a charging session using any external device or token.  In practice it encompasses things like RFID cards, smart-phone apps, smart cards or other out-of-band identifiers that tie the charging session to a customer contract or vehicle identity.\n\nKey points about EIM in the ISO 15118 / V2G context:\n\n 1. Definition (ISO 15118-1)  \n    \u2022  \u201cAny external means that enable the user to identify their contract or the car.\u201d  \n    \u2022  It\u2019s one of the identification modes alongside \u201cID from EV\u201d (Plug & Charge).\n\n 2. Role in the Initialization Phase  \n    \u2022  During system start-up the EVSE determines whether identification will come from the EV\u2019s own certificate (PnC) or via EIM.  \n    \u2022  If EIM is selected or offered, the EVSE must be ready \u201cat any time\u201d to receive the customer\u2019s external credential.\n\n 3. Authorization Flow  \n    \u2022  Requirement V2G3-M06-04 mandates that, when payment or authorization is needed, the EVSE shall offer PnC or EIM.  \n    \u2022  Once the customer presents their EIM credential and authorization is granted (\u201cAUTHORIZATION OK\u201d), the EVSE proceeds.\n\n 4. Post-Authorization Actions  \n    \u2022  V2G3-M06-08 specifies what must happen after a positive EIM check (e.g. transition to the matching process).  \n    \u2022  V2G5-033/-034 define that the SECC\u2019s EIM status control service must be able to initiate authorization and process status updates (observed by a Parallel Test Component in test environments).\n\n 5. Interaction with Other Protocols  \n    \u2022  EIM works alongside Plug & Charge (PnC) and high-level communication (HLC-C) in AC and DC EVSE.  \n    \u2022  After successful EIM authorization, a SLAC-based matching process is started to establish the low-layer communication link before the vehicle is plugged in.\n\n 6. EVSE Implementation  \n    \u2022  AC and DC charging stations implement an EIM subsystem to manage presentation, validation and status\u2010monitoring of external IDs.  \n    \u2022  The Main Test Component (MTC) in conformance tests uses special functions to detect and control EIM status.\n\nIn summary, EIM is the standardized mechanism in the ISO 15118 family that lets a user or vehicle present an \u201cexternal\u201d credential to the EVSE for authenticating and authorizing a charging session before any power\u2010transfer or data-link establishment begins.",
    "What is CM_SLAC_PARAM.REQ?": "CM_SLAC_PARM.REQ is the SLAC-protocol parameter\u2010request message that an Electric Vehicle (EV) sends to the Electric Vehicle Supply Equipment (EVSE) during the SLAC (Signal Level Attenuation Characterization) matching phase.  It serves to tell the EVSE how the EV wants to perform its signal\u2010strength measurements and establishes a new SLAC \u201crun.\u201d  \n\nKey points  \n1. Role in SLAC  \n   \u2022 Initiates the SLAC parameter\u2010exchange phase of PEV\u2013EVSE matching.  \n   \u2022 Triggers the EVSE to prepare and later confirm (\u201cCM_SLAC_PARM.CNF\u201d) the requested settings.  \n\n2. When it is sent  \n   \u2022 The EV must send CM_SLAC_PARM.REQ within the TP_EV_SLAC_init window (i.e. shortly after Control-Pilot state B is detected).  \n   \u2022 From the EVSE side, it must be received before the TT_EVSE_SLAC_init timer expires.  \n\n3. Message contents (MME fields)  \n   \u2013 Application_Type (1 byte): fixed 0x00 (\u201cPEV\u2013EVSE Matching\u201d)  \n   \u2013 Security_Type (1 byte): fixed 0x00 (\u201cNo Security\u201d)  \n   \u2013 RunID (4 bytes or other agreed length): a random identifier chosen by the EV to tag this particular matching attempt; must remain constant for the life of that run  \n   \u2013 (Other optional SLAC parameters as defined by the MME in ISO 15118-3)  \n\n4. Message exchange and timers  \n   \u2022 Upon sending CM_SLAC_PARM.REQ the EV starts the TT_match_response timer, during which it waits for a matching CM_SLAC_PARM.CNF from any EVSE.  \n   \u2022 If no CNF arrives before TT_match_response expires, the EV may repeat CM_SLAC_PARM.REQ, governed by a TT_Matching_Repetition timer and a maximum number of retries.  \n   \u2022 The EVSE may not send CM_SLAC_PARM.CNF until it has processed the request and any internal timers or criteria (e.g. maximum attenuation characterization time) have been met.  \n\n5. Purpose of the exchange  \n   \u2022 Aligns measurement parameters (e.g. number of M-Sound carriers, measurement timing, attenuation thresholds) so that both EV and EVSE execute the same signal-strength assessment.  \n   \u2022 The subsequent CM_SLAC_PARM.CNF message confirms those parameters (or reports errors) and carries back the EV\u2019s RunID and MAC addresses to ensure the EVSE is talking to the correct vehicle.  \n\nIn summary, CM_SLAC_PARM.REQ is the EV\u2019s formal request for SLAC measurement parameters.  It contains the application and security type fields, a unique RunID, and any additional SLAC settings.  It must be sent promptly after plug-in, is repeated under a repetition timer if no confirmation arrives, and is always followed by a corresponding CM_SLAC_PARM.CNF from the EVSE once the latter is ready to begin attenuation characterization.",
    "What is CM_SLAC_PARAM.CNF?": "CM_SLAC_PARM.CNF is the \u201cSLAC Parameter Confirmation\u201d message that the EVSE (Supply Equipment) sends back to the EV in the Signal\u2010Level Attenuation Characterization (SLAC) parameter\u2010exchange phase of ISO 15118-3.  Its main characteristics are:\n\n1. Role and Timing  \n  \u2013 It is sent only in response to a prior CM_SLAC_PARM.REQ from the EV.  \n  \u2013 It must not be transmitted until the configured TT_match_response timer has expired.  \n  \u2013 It signals the EVSE\u2019s readiness to proceed with SLAC/M-sound measurements and eventual PEV\u2013EVSE matching.\n\n2. Purpose  \n  \u2013 Acknowledges and confirms the SLAC parameters requested by the EV in CM_SLAC_PARM.REQ.  \n  \u2013 Provides the EV with the exact parameter set it must use for the next attenuation\u2010characterization steps.\n\n3. Principal Fields  \n  \u2022 runID, EV MAC, EVSE MAC \u2013 identifiers carried over from the request.  \n  \u2022 M_SOUND_TARGET \u2013 the multicast/broadcast target address for M-sound tones (fixed for Ethernet broadcast).  \n  \u2022 NUM_SOUNDS \u2013 the number of M-sound pulses the EVSE will emit.  \n  \u2022 TIME_OUT \u2013 the interval during which the EVSE will listen for M-sound responses.  \n  \u2022 RESP_TYPE \u2013 the type of response (e.g. \u201cOther GP station\u201d).  \n  \u2022 FORWARDING_STA \u2013 the MAC address of the host (ultimate destination) for SLAC results.\n\n4. Conformance Requirements  \n  \u2013 The structure and values must comply with the MME template defined in Table A.2 of the standard.  \n  \u2013 Invalid or out-of-range field values are governed by requirement V2G3-A09-09 (e.g. how to handle incorrect timeout or respType).  \n  \u2013 Test cases (e.g. TC_SECC_CMN_VTB_CMSLACPARM_xxx and TC_EVCC_CMN_VTB_CMSLACPARM_xxx) verify both correct content and correct timing (no CM_SLAC_PARM.CNF until TT_match_response expires).\n\n5. Interaction in Test Scenarios  \n  \u2013 In \u201cgood\u2010case\u201d procedures, CM_SLAC_PARM.CNF carries valid parameters enabling the EV to transition to the attenuation\u2010characterization phase.  \n  \u2013 Negative tests may check that it is suppressed until TT_match_response expires or that the EVSE properly rejects/flags invalid field values.  \n\nIn summary, CM_SLAC_PARM.CNF is the standardized, time-controlled confirmation from EVSE to EV of the SLAC parameter set that the two devices will use to perform signal\u2010level attenuation measurements and complete the PEV\u2013EVSE matching process.",
    "What is CM_START_ATTEN_CHAR.IND?": "CM_START_ATTEN_CHAR.IND is the SLAC-layer \u201cStart Attenuation Characterization Indication\u201d message that an Electric Vehicle (EV) sends to its Electric Vehicle Supply Equipment (EVSE) to kick off the signal\u2010strength (attenuation) measurement sequence.  In the context of the ISO/IEC and V2G3 vehicle-to-grid protocol it has the following key characteristics and roles:  \n\n1. Purpose  \n \u2022 It tells the EVSE \u201cI\u2019m ready\u2014please perform an M-SOUND exchange so I can characterize the channel attenuation.\u201d  \n \u2022 Upon reception of CM_START_ATTEN_CHAR.IND the EVSE stops its TT_match_sequence timer and begins measuring signal losses.  \n\n2. Origin and Destination  \n \u2022 Origination: the EV\u2019s low-layer communication module (Power Line Communication SLAC entity).  \n \u2022 Destination: the EVSE\u2019s SLAC management entity.  \n\n3. Sequence and Timing  \n \u2022 Must be sent by the EV within the TT_match_sequence window (requirement V2G3-A09-26).  \n \u2022 After sending one or more CM_START_ATTEN_CHAR.INDs, the EV must wait at least TP_EV_batch_msg_interval before sending the next.  \n \u2022 The parameter C_EV_START_ATTEN_CHAR_INDS governs how many times the EV issues this message in a single characterization round.  \n\n4. Message Structure  \n \u2022 Defined as an MME (Management Message Entry) in the SLAC protocol.  \n \u2022 Content must conform to the MME template (e.g. correct header fields, runID, EV MAC address).  \n\n5. Expected Response  \n \u2022 The EVSE, after measuring the channel via M-SOUND bursts, will reply with one or more CM_ATTEN_CHAR.IND messages carrying the measured attenuation profile.  \n \u2022 If the EVSE does not send CM_ATTEN_CHAR.IND (for instance in negative\u2010test variants), the EV will time out or repeat CM_START_ATTEN_CHAR.IND up to C_EV_START_ATTEN_CHAR_INDS.  \n\n6. Test-Case Usage  \n \u2022 CM_START_ATTEN_CHAR.IND is the trigger message in all SLAC attenuation\u2010characterization test cases (e.g. TC_EVCC_AC_VTB_ATTENUATIONCHARACTERIZATION_001 through _00n, and the analogous SECC tests).  \n \u2022 Test scripts verify that no CM_START_ATTEN_CHAR.IND is sent before preconditions are met, that it is sent with correct MME formatting, and that timing (TP_EV_batch_msg_interval, TT_match_sequence) is respected.  \n\n7. Standards References  \n \u2022 V2G3-A09-26 mandates the timing and window for CM_START_ATTEN_CHAR.IND.  \n \u2022 V2G3-A06-05 (on the EV-side low-layer) specifies how and when it must not respond to certain SLAC MMEs (though CM_START_ATTEN_CHAR.IND is always generated by the EV).  \n\nIn short, CM_START_ATTEN_CHAR.IND is the EV\u2019s \u201cplease measure attenuation now\u201d command in the SLAC matching and parameter\u2010exchange sequence of the vehicle-to-grid communication stack.",
    "What is CM_MNBC_SOUND.IND?": "CM_MNBC_SOUND.IND is a protocol message in the SLAC (Signal Level Attenuation Characterization) process used in vehicle-to-grid (V2G) communication.  Its primary purpose is to \u201csound\u201d or \u201cprobe\u201d the power-line network so that signal attenuation can be measured and link quality assessed.\n\nKey characteristics  \n\u2022 Message Type  \n\u2002 \u2013 Part of the SLAC matching/attenuation-characterization sequence (\u201cM-sound\u201d broadcast)  \n\u2002 \u2013 Defined by V2G3-A09-28 (use of the sequence) and V2G3-A09-29 (timing requirements)  \n\n\u2022 Usage in Test Cases  \n\u2002 \u2013 Used in attenuation-characterization test cases (e.g. TC_EVCC_AC_VTB_ATTENUATIONCHARACTERIZATION_001)  \n\u2002 \u2013 Broadcast by the EV to assist in measuring end-to-end attenuation  \n\u2002 \u2013 Low-layer EV module must not attempt to respond to it (per V2G3-A06-05)  \n\n\u2022 Message Fields  \n\u2002 \u2013 APPLICATION_TYPE (fixed 0x00 for \u201cPEV-EVSE Matching\u201d)  \n\u2002 \u2013 SECURITY_TYPE (fixed 0x00 for \u201cNo Security\u201d)  \n\u2002 \u2013 RunID (must match the RunID chosen by the EV in CM_SLAC_PARM.REQ)  \n\u2002 \u2013 cnt (a decrementing counter; the EV sends the message C_EV_match_MNBC times)  \n\n\u2022 Transmission Sequence  \n\u2002 1. After completing CM_START_ATTEN_CHAR.IND exchanges, the EV waits TP_EV_batch_msg_interval  \n\u2002 2. The EV then transmits CM_MNBC_SOUND.IND messages in rapid succession  \n\u2002 3. With each transmission the \u201ccnt\u201d field is decremented until zero  \n\u2002 4. The total number of transmissions is governed by the parameter C_EV_match_MNBC  \n\nIn summary, CM_MNBC_SOUND.IND is the \u201cnetwork broadcast sound indication\u201d message that an EV sends repeatedly\u2014at precise intervals and for a specified count\u2014to characterize line attenuation in the SLAC matching procedure.",
    "What is CM_ATTEN_CHAR.IND?": "CM_ATTEN_CHAR.IND is a SLAC (Signal Level Attenuation Characterization) \u201cindication\u201d message that an Electric-Vehicle Supply Equipment (EVSE) sends to an Electric Vehicle (EV) during the PEV\u2013EVSE matching (parameter-exchange) phase.  Its purpose is to convey the measured signal-attenuation characteristics of the PLC link so that the EV can decide whether it has found a suitable charging outlet.  \n\nKey points about CM_ATTEN_CHAR.IND  \n\u2022 Message role  \n  \u2013 It is an MME-level indication (IND) sent by the EVSE to the EV.  Upon receipt the EV must send back a CM_ATTEN_CHAR.RSP.  \n  \u2013 It is defined in the V2G3 (ISO 15118-3) SLAC standard (see requirements V2G3-A09-22, V2G3-A09-35, V2G3-A09-37).  \n\n\u2022 Timing  \n  \u2013 The EV starts a timer TT_EV_ATTEN_RESULTS when it issues CM_START_ATTEN_CHAR.IND; CM_ATTEN_CHAR.IND messages are expected from the EVSE before that timer expires.  \n  \u2013 On the EVSE side, once M-SOUNDS have been collected or TT_EVSE_match_MNBC times out, the EVSE waits up to TP_EVSE_avg_atten_calc to compute/pack the attenuation data into CM_ATTEN_CHAR.IND.  \n\n\u2022 Structure and fields  \n  CM_ATTEN_CHAR.IND is carried as an MME record (MME_Header + MME_Payload).  Its payload contains at least the following sub-fields:  \n  \u2022 APPLICATION_TYPE  (1\u2009byte)  \n     \u2013 Fixed value 0x00 (\u201cPEV\u2013EVSE Matching\u201d)  \n  \u2022 SECURITY_TYPE     (1\u2009byte)  \n     \u2013 Fixed value 0x00 (\u201cNo Security\u201d)  \n  \u2022 SOURCE_ADDRESS    (6\u2009bytes)  \n     \u2013 MAC address of the EV host that initiated the SLAC process  \n  \u2022 runID             (2\u2009bytes)  \n     \u2013 Identifier matching the preceding CM_START_ATTEN_CHAR.IND  \n  \u2022 NUM_SOUNDS        (1\u2009byte)  \n     \u2013 Number of M-SOUND bursts used to build the profile; if zero, the entire message shall be ignored by the EV.  \n  \u2022 ATTEN_PROFILE     (variable)  \n     \u2013 A sequence of NUM_SOUNDS attenuation values (one per M-SOUND), each representing the measured path attenuation.  \n     \u2013 The EVSE computes each entry as the arithmetic mean of its own M-SOUND attenuation measurements (corrected by the receive-path attenuation AttnRx-EVSE).  \n\n\u2022 What the EV does with it  \n  \u2013 The EV calculates an overall Average_Attenuation (arithmetic mean of all ATTEN_PROFILE entries).  \n  \u2013 It uses that average (and possibly the per-sound values) to decide whether this EVSE has sufficient link quality (compare against its own C_EV_match_MNBC criterion).  \n  \u2013 If acceptable, the EV continues the SLAC matching sequence; otherwise it may ignore this outlet or retry.  \n\n\u2022 Relation to other messages  \n  \u2013 CM_START_ATTEN_CHAR.IND: sent by the EV to trigger the EVSE\u2019s M-SOUND measurement.  \n  \u2013 CM_ATTEN_CHAR.RSP: the EV\u2019s acknowledgement/response to each CM_ATTEN_CHAR.IND.  \n\nIn short, CM_ATTEN_CHAR.IND is the standard SLAC indication message by which an EVSE reports back its measured signal-attenuation profile to an EV so that the EV can perform its discovery and matching decisions.",
    "What is CM_ATTEN_CHAR.RSP?": "CM_ATTEN_CHAR.RSP is the \u201cattenuation\u2010characterization response\u201d message in the SLAC (Signal\u2010Level Attenuation Characterization) exchange between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE).  Its key characteristics are:\n\n1. Purpose  \n  \u2022 It is sent by the EV (more precisely by the EV\u2019s low\u2010layer communication module or EVCC) in direct reply to a CM_ATTEN_CHAR.IND indication from the EVSE.  \n  \u2022 It acknowledges receipt of the EVSE\u2019s attenuation\u2010measurement request (the IND) and either confirms that the EV has measured/processed the requested attenuation profile or reports the outcome of that processing.  \n\n2. Protocol context  \n  \u2022 It is defined by the ISO 15118\u20133 / V2G3-A09-37 SLAC standard.  \n  \u2022 It forms part of the \u201cmatching\u201d sequence in the SLAC process: after CM_ATTEN_CHAR.IND is received, CM_ATTEN_CHAR.RSP must be returned within the TT_match_response timer period (and generally within the overall TP_match_sequence).  \n  \u2022 If the EVSE does not receive a valid CM_ATTEN_CHAR.RSP before TT_match_response expires, it will re-send CM_ATTEN_CHAR.IND and restart that timer.  \n\n3. Content and validation  \n  \u2022 The message structure is defined in the MME template (see Table A.4 in the V2G3 annex).  Typical elements include applicationType, securityType, sourceAddress, runID, respID and a result code.  \n  \u2022 The payload confirms the EV\u2019s view of the attenuation profile originally signaled in CM_ATTEN_CHAR.IND (e.g. reporting the measured path attenuation, possibly averaged over multiple M-SOUNDS).  \n\n4. Test-case relevance  \n  \u2022 In conformance tests the SUT (system under test, here typically the EVCC) is expected to generate CM_ATTEN_CHAR.RSP within TT_match_response.  Tests may verify correct handling of invalid or missing fields (e.g. bad applicationType, runID, sourceID, respID, result values) or improper timing (no response until a timer expires).  \n\nIn short, CM_ATTEN_CHAR.RSP is the required SLAC response message sent by the EV to confirm or report on the attenuation characteristics after receiving a CM_ATTEN_CHAR.IND from the EVSE.",
    "What is CM_ATTEN_PROFILE.IND?": "CM_ATTEN_PROFILE.IND is a protocol\u2010level message defined in the SLAC (Signal Level Attenuation Characterization) process of the IEC-61851-24 HomePlug Green PHY-based EV-to-EVSE communication.  Its main purpose is to convey to the EVSE the \u201cattenuation profile\u201d that the EV has measured during its preceding sequence of M-SOUNDS.  \n\nKey points about CM_ATTEN_PROFILE.IND:  \n1. Role in SLAC matching  \n   \u2022 SLAC is the handshake/matching procedure by which a Plug-in Electric Vehicle (PEV) and an Electric Vehicle Supply Equipment (EVSE) characterize the power-line channel between them.  \n   \u2022 CM_ATTEN_PROFILE.IND carries the result of that channel characterization (the attenuation profile) back to the EVSE so it can choose optimal link parameters or proceed with the ride-through/matching sequence.  \n\n2. Contents and calculation  \n   \u2022 The message\u2019s ATTEN_PROFILE field represents a vector or set of attenuation values measured on each sub-carrier (or tone) over the last group of M-SOUNDS sent by the EV.  \n   \u2022 In downstream processing (in CM_ATTEN_CHAR.IND), these values are averaged (arithmetic mean) over one or more previous CM_ATTEN_PROFILE.IND messages and then corrected by the known receive-path attenuation (AttnRx-EVSE), as specified in clause A.9.4.1 of the HPGP standard.  \n   \u2022 If the corresponding CM_ATTEN_CHAR.IND\u2019s NUM_SOUNDS field is zero (i.e. no meaningful M-SOUNDS were processed), then the ATTEN_PROFILE is deemed insignificant and both messages are ignored.  \n\n3. Timing and EVSE behavior  \n   \u2022 The EVSE must start its TT_EVSE_match_MNBC timeout when it begins listening for attenuation data; if it does not receive CM_ATTEN_PROFILE.IND within that window, the match attempt fails.  \n   \u2022 The \u201cEVSE Listening Process\u201d is the sub-routine in the EVSE firmware dedicated to capturing CM_ATTEN_PROFILE.IND (and related) messages.  \n   \u2022 Once received and validated, the EVSE uses the profile to adjust power-line PHY parameters or to drive the next round of matching or key exchange.  \n\n4. Context and limits  \n   \u2022 CM_ATTEN_PROFILE.IND is one of several \u201cindication\u201d messages (CM_*_IND) used during SLAC for status reporting and profile exchange; it is not a command that directly alters charging current or state of charge.  \n   \u2022 Outside of the SLAC matching procedure (for example, in a non-HPGP PLC system or once SLAC has completed), CM_ATTEN_PROFILE.IND messages are ignored.  \n\nIn summary, CM_ATTEN_PROFILE.IND is the standard SLAC \u201cattenuation profile indication\u201d message that enables the EVSE to learn how strongly or weakly each frequency tone is propagated between the EV and charging station, so that it can complete its matching, link-establishment and, ultimately, secure charging session setup.",
    "What is CM_VALIDATE.REQ?": "CM_VALIDATE.REQ is the standardized \u201cvalidation\u2010request\u201d message that an electric vehicle (EV) (or its EV communication controller, EVCC) sends to the Electric Vehicle Supply Equipment (EVSE) to kick off the so-called \u201cvalidation process\u201d in a Vehicle-to-Grid (V2G) or SLAC (Signal Level Attenuation Characterization) session.  In practice it has the following characteristics:\n\n1. Role in the Protocol  \n\u2003\u2013 It is the very first step in a request-response exchange: upon reception of CM_VALIDATE.REQ the EVSE must perform whatever checks are required (e.g. control-pilot toggles, parameter verification) and then reply with a CM_VALIDATE.CNF confirmation message.  \n\u2003\u2013 The EVSE implementation is required to adhere to timing rules (e.g. stop its TT_MATCH_SEQUENCE timer when a valid CM_VALIDATE.REQ arrives) and to the message format definitions (MME fields as given in Tables A.5/A.6 of the standard).  \n\n2. Sender and Receiver  \n\u2003\u2013 Sent by the EV (or EVCC) to the EVSE.  \n\u2003\u2013 Received by the EVSE as part of its normal operation; if the EVSE receives a second CM_VALIDATE.REQ whose timer field is zero after it has already sent its CM_VALIDATE.CNF, it must resend that CM_VALIDATE.CNF.  \n\n3. Contents and Parameters  \n\u2003\u2013 At minimum it carries a \u201cresult\u201d field (indicating whether the EV insists on validation or can skip it) and a timer value (often called TP_EV_VALD_TOGGLE) that tells the EVSE how long to listen for the BCB-toggle sequence on the control-pilot line.  \n\u2003\u2013 May also carry other SLAC-specific fields (signalType, toggleNum or vcVarField) as defined by the MME template.  \n\n4. Timing and Retries  \n\u2003\u2013 The EV must send its CM_VALIDATE.REQ within the TP_MATCH_SEQUENCE window.  \n\u2003\u2013 If no CM_VALIDATE.CNF arrives, it may retry up to the limit defined by the standard (typically two retries).  \n\u2003\u2013 Various requirements (V2G3-A09-60, \u2011A09-67, \u2011A09-76, \u2011A09-77) govern how to handle invalid or zero-timer CM_VALIDATE.REQ messages.  \n\n5. Test-Case Usage  \n\u2003\u2013 All of the EVCC and SECC test cases labelled TC_*_CMVALIDATE_* (for example TC_EVCC_CMN_VTB_CMVALIDATE_003 or TC_SECC_CMN_VTB_CmValidate_003) use CM_VALIDATE.REQ to verify correct handling, retry limits, field validation and proper sequencing of the confirmation (CM_VALIDATE.CNF).  \n\nIn short, CM_VALIDATE.REQ is the request message by which an EV tells an EVSE \u201cplease validate your readiness/compliance now,\u201d forming the first half of the mutual\u2010validation handshake in V2G and SLAC communication.",
    "What is CM_VALIDATE.CNF?": "CM_VALIDATE.CNF is the standardized \u201cvalidation confirmation\u201d message used in the SLAC-based V2G (vehicle-to-grid) communication protocol between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE).  Its main characteristics are:\n\n1. Role in the Protocol  \n   \u2022 It is the response to a CM_VALIDATE.REQ request.  Whenever the EV or Test System sends CM_VALIDATE.REQ to check that the EVSE and EV pilot-line parameters (toggles, duty cycle, etc.) are within bounds, the EVSE must reply with CM_VALIDATE.CNF.  \n   \u2022 It concludes (or skips) the validation step of the SLAC matching/parameter-exchange procedure and indicates whether the validation succeeded, failed, or was not required.  \n\n2. Key Fields  \n   \u2022 Result  \n     \u2013 A code that tells the requester whether validation was \u201cReady\u201d (success), \u201cNot_Required\u201d (EVSE elected to skip further validation), or an error condition.  \n   \u2022 ToggleNum (sometimes called BCB-Toggles)  \n     \u2013 A count of the control-pilot line toggles observed or expected during validation; used by the EV to cross-check that the EVSE saw the same number of signal transitions.  \n   \u2022 (Optional) Other measurement parameters  \n     \u2013 Depending on the test case or requirement, additional fields (e.g. signalType, pilotTimer) may be included to describe the exact conditions under which validation was performed.  \n\n3. Timing and Sequencing  \n   \u2022 It must be sent by the EVSE within the TP_match_response window after receipt of CM_VALIDATE.REQ.  \n   \u2022 Upon receiving a valid CM_VALIDATE.CNF, the EV stops its TT_match_response timer.  \n   \u2022 Sending CM_VALIDATE.CNF also kicks off the EVSE\u2019s TT_match_sequence timer, which governs how long the EVSE waits for next steps (e.g. CM_SLAC_MATCH.REQ).  \n   \u2022 Under requirement V2G3-A09-77, if the EVSE receives another CM_VALIDATE.REQ with timer=0 after sending its first CM_VALIDATE.CNF, it must resend that first confirmation.  \n\n4. Conformance and Testing  \n   \u2022 CM_VALIDATE.CNF must conform to the Management Message Entity (MME) template definitions (lengths, field order, value ranges) as specified in the SLAC annexes of the ISO 15118-3 standard.  \n   \u2022 Numerous test cases (e.g. TC_SECC_CMN_VTB_CMVALIDATE_003, TC_EVCC_CMN_VTB_CMVALIDATE_015, F_SECC_CMN_TB_VTB_CmValidate_008, etc.) verify correct CM_VALIDATE.CNF behavior: presence, timing, field values, non-repetition beyond retry limits, and proper triggering of downstream actions (SLAC_MATCH.REQ, continuation of charging handshake).  \n\nIn short, CM_VALIDATE.CNF is the \u201cOK/Not_Required/Error\u201d confirmation message that closes out a SLAC-layer validation request (CM_VALIDATE.REQ), communicates the outcome to the peer, and drives the next transition in the EV\u2194EVSE communication and matching process.",
    "What is CM_SLAC_MATCH.REQ?": "CM_SLAC_MATCH.REQ is one of the core messages in the SLAC (Signal Level Attenuation Characterization) protocol used between a Plug-in Electric Vehicle (PEV) and Electric Vehicle Supply Equipment (EVSE).  Its purpose and key characteristics are:\n\n1. Role in the SLAC Matching Process  \n   \u2022 It is the request message that the EV sends to the EVSE to initiate (or re-initiate) the SLAC matching session.  \n   \u2022 Once received and validated by the EVSE, it will eventually trigger the EVSE to send back CM_SLAC_MATCH.CNF, confirming that both sides have agreed on the communication parameters (e.g. signal levels, network identifiers, keys).  \n   \u2022 The successful exchange of REQ and CNF messages establishes the power-line communication (PLC) link parameters and supports secure link association.\n\n2. When and How It Is Sent  \n   \u2022 The EV must send CM_SLAC_MATCH.REQ after its TT_EVSE_match_session timer expires (i.e. when it has waited long enough for an earlier confirmation or for initial conditions).  \n   \u2022 If the EV does not receive a valid CM_SLAC_MATCH.CNF within its retry limits (C_EV_match_retry), it will retransmit CM_SLAC_MATCH.REQ, up to that configured maximum number of times.  \n   \u2022 Receipt of a valid CM_SLAC_MATCH.REQ at the EVSE side stops the TT_MATCH_SEQUENCE timer, indicating the matching sequence has advanced.\n\n3. Principal Fields and Parameters  \n   \u2022 runID: a unique identifier for this matching \u201crun.\u201d  It must match in all subsequent messages for that session.  \n   \u2022 EV MAC / EVSE MAC: the media-access-control addresses of the EV and EVSE, used to address the PLC frames.  \n   \u2022 applicationType: identifies the type of application or test context (in some test cases set to invalid values such as 0xFF to exercise error handling).  \n   \u2022 Other SLAC-specific fields as defined in the MME structure (see Table A.7 of the SLAC specification), for example mvfLength, securityType, etc.\n\n4. Relationship to Other Messages and Timers  \n   \u2022 CM_VALIDATE.CNF is an alternative message that may precede CM_SLAC_MATCH.REQ in some flows, but CM_SLAC_MATCH.REQ is specifically for the matching phase.  \n   \u2022 After sending CM_SLAC_MATCH.REQ, the EVSE starts or restarts its TT_MATCH_RESPONSE timer, within which it must send CM_SLAC_MATCH.CNF.  \n   \u2022 The SLAC matching process is deemed failed if no valid CM_SLAC_MATCH.REQ arrives before TT_EVSE_MATCH_SESSION expires or if no CM_SLAC_MATCH.CNF arrives before TT_MATCH_RESPONSE expires.\n\n5. Usage in Conformance Testing  \n   \u2022 In test cases (e.g. TC_EVCC_CMN_VTB_CMSLACMATCH_xxx), the Test System uses CM_SLAC_MATCH.REQ to verify that the System Under Test (EVCC or SECC) correctly:  \n     \u2013 Constructs the message with the proper runID, MAC addresses and other parameters.  \n     \u2013 Retransmits it no more than C_EV_match_retry times.  \n     \u2013 Stops retransmission when a proper CM_SLAC_MATCH.CNF is received or when retry limits are reached.  \n\nIn summary, CM_SLAC_MATCH.REQ is the \u201crequest to match\u201d message in the SLAC frame-exchange sequence.  It is sent by the EV to the EVSE to establish or re-establish the PLC link parameters and to agree on attenuation, encryption keys (NMK/NID), and other network parameters needed before actual charging data exchange can occur.",
    "What is CM_SLAC_MATCH.CNF?": "CM_SLAC_MATCH.CNF is the \u201cmatch\u2010confirmation\u201d message in the SLAC (Signal Level Attenuation Characterization) procedure between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE).  In ISO\u200915118-3/V2G PLC link setup it plays the following roles and has these characteristics:\n\n1. Purpose  \n   \u2022 It is sent by the EVSE in direct response to the CM_SLAC_MATCH.REQ request from the EV.  \n   \u2022 It confirms that the two parties have successfully agreed on the SLAC-based link parameters and may proceed to establish the ad-hoc virtual local network (AVLN).  \n\n2. Contents  \n   \u2022 runID \u2013 the unique identifier matching the one the EV used in its CM_SLAC_MATCH.REQ.  \n   \u2022 EV MAC and EVSE MAC \u2013 the Media Access Control addresses of each node.  \n   \u2022 NID (Network Identifier) and NMK (Network Membership Key) \u2013 the agreed network parameters for security and addressing.  \n   \u2022 Other SLAC parameters (e.g. applicationType, securityType, mvfLength) as required by the MME template.  \n\n3. Timing Constraints  \n   \u2022 It shall not be sent until the TT_match_response timer has expired (i.e. the EVSE waits the prescribed interval before replying).  \n   \u2022 It must be received by the EV within the TP_match_response performance time.  \n   \u2022 Once received, the EV begins the TT_match_join interval, within which the logical data-link connection must be established.  \n\n4. Conformance  \n   \u2022 Its internal structure and field values must conform to the Message Management Entity (MME) definitions (tables A.2, A.4\u2013A.6 in the SLAC annex).  \n   \u2022 Invalid or out\u2010of\u2010range fields (per V2G3-A09-95) must be ignored by the receiver; correct handling is verified by tests (e.g. supplying bad applicationType, mvfLength, evMac, runID, etc.).  \n   \u2022 Post-reception actions are specified by V2G3-A09-101.  \n\n5. Role in Test Cases  \n   \u2022 Test suites for both EVCC and SECC inject CM_SLAC_MATCH.CNF messages (valid and invalid) to verify that the System Under Test (SUT)  \n     \u2013 waits for the proper timer,  \n     \u2013 limits CM_SLAC_MATCH.REQ retries (typically to two),  \n     \u2013 ignores malformed confirmations, and  \n     \u2013 on a good confirmation, triggers the GoodCase procedure to form the AVLN and proceed to data\u2010link establishment.  \n\nIn short, CM_SLAC_MATCH.CNF is the standardized confirmation that completes the SLAC matching handshake\u2014carrying run\u2010ID, MAC addresses, network key (NMK), network ID (NID) and related parameters\u2014allowing the EV and EVSE to move on to build their secure PLC link.",
    "What is CM_SET_KEY.REQ?": "CM_SET_KEY.REQ is a management\u2010level protocol message (an \u201cMME\u201d) used in the SLAC-based power\u2010line communication stack of EVSE/EV systems to provision or update cryptographic and network parameters in a low-layer communication module.  Its main characteristics are:  \n\n\u2022 Purpose  \n  \u2013 Request the setting or updating of key values (e.g. Network Identifier NID, Network Membership Key NMK) in the low-layer communication module.  \n  \u2013 Part of the procedure by which an EV or EVSE \u201cjoins\u201d or reconfigures a logical network.  \n\n\u2022 Originator and Recipient  \n  \u2013 Generated by a higher layer management entity (the MME) once SLAC parameters have been negotiated (e.g. after CM_SLAC_MATCH.CNF).  \n  \u2013 Unicast to the local low-layer communication node (the physical\u2010layer/PLC modem on the EV or EVSE).  \n\n\u2022 Semantics  \n  \u2013 Encodes a key type identifier plus the new key value(s).  \n  \u2013 Uses a fixed predefined representation for the NMK field.  \n  \u2013 Tells the low-layer module \u201chere are the NID/NMK you must adopt for all subsequent network traffic.\u201d  \n\n\u2022 Follow-on  \n  \u2013 The low\u2010layer module applies the new keys and replies with a CM_SET_KEY.CNF message to acknowledge success or report errors.  \n\n\u2022 Use-cases  \n  \u2013 Initial configuration of the EVSE communication modem when a vehicle plugs in.  \n  \u2013 Configuration of the EV\u2019s onboard PLC modem to match the EVSE\u2019s network parameters.  \n  \u2013 Re-keying/updating the logical network parameters during the SLAC matching or re-authentication process.  \n\nIn summary, CM_SET_KEY.REQ is the \u201cset\u2010key\u201d command in the SLAC management message set, allowing the system to securely distribute and activate network keys on the physical communication hardware.",
    "What is CM_SET_KEY.CNF?": "CM_SET_KEY.CNF is a \u201cconfirmation\u201d Management-Message-Entity (MME) in the SLAC-based control protocol, whose sole purpose is to tell the requester whether the low-layer communication module has successfully accepted and applied the network-keying parameters just sent to it.  In practice:\n\n 1. Purpose  \n    \u2022 It follows a CM_SET_KEY.REQ (the \u201crequest\u201d that carries the key-setting parameters) and indicates success or failure of the key installation.  \n    \u2022 It is the handshake step by which an EV or EVSE\u2019s MAC/PHY engine knows it has the correct cryptographic or network keys needed to join the logical network.\n\n 2. Protocol context  \n    \u2022 Used during the EV\u2013EVSE SLAC (Signal Level Attenuation Characterization) matching sequence.  \n    \u2022 Specifically comes after CM_SLAC_MATCH.CNF confirms a successful link-level match, and CM_SET_KEY.REQ is then used to push down the agreed parameters.  \n    \u2022 CM_SET_KEY.CNF completes that exchange.\n\n 3. Message semantics  \n    \u2022 Carries a result code (e.g. \u201cOK\u201d or an error) to signal whether the parameters were accepted.  \n    \u2022 No further payload is defined beyond that status indication.  \n\n 4. Implementation notes  \n    \u2022 If CM_SET_KEY.CNF returns a failure code, or if it never arrives, the standard leaves recovery or retry logic up to the implementer.  \n    \u2022 A positive CM_SET_KEY.CNF is the green light to proceed with higher-layer operations within the newly formed logical network.",
    "What is CM_AMP_MAP.REQ?": "CM_AMP_MAP.REQ is the \u201camplitude-map request\u201d primitive used in a low-layer communication protocol to negotiate or convey per-carrier transmission-power (amplitude) settings between two peer entities.  In essence, it is a message that one side sends whenever it wants its counterpart to (a) reduce power on specific carriers or (b) learn the peer\u2019s desired per-carrier power for its own amplitude-map calculations.  \n\nKey points about CM_AMP_MAP.REQ:  \n1. Optional Amplitude-Map Exchange  \n   \u00ad\u2013 CM_AMP_MAP.REQ is not mandatory on every link\u2014 it\u2019s used only when one side needs to adjust or synchronize carrier-by-carrier power settings.  \n2. Two Main Usages  \n   a. Power-Reduction Request:  \n      \u2022 Sent by a low-layer communication module to ask the peer to reduce its transmit power for certain carriers.  \n      \u2022 Indicates which carriers and by how much (relative to a \u221250\u2009dBm/Hz reference) via the AMDATA field.  \n   b. Host-to-Host Power-Vector Transfer:  \n      \u2022 Sent from one higher-layer host to another (relayed through the low-layer) to tell the destination what per-carrier powers it should use in its own amplitude-map.  \n3. Message Contents  \n   \u00ad\u2013 Header identifying it as CM_AMP_MAP.REQ  \n   \u00ad\u2013 An AMDATA field, a sequence of 4-bit entries, each encoding a carrier\u2019s amplitude adjustment in 2\u2009dB steps (e.g. a 4-bit value of 0b0011 means \u22126\u2009dB relative to the reference).  The 4 LSBs cover one unmasked carrier, the 4 MSBs another.  \n4. Handshake and Reliability  \n   a. Upon sending CM_AMP_MAP.REQ, the requester starts a timer TT_match_response.  \n   b. The peer must reply with CM_AMP_MAP.CNF before the timer expires.  \n   c. If no valid CM_AMP_MAP.CNF arrives, the requester retransmits CM_AMP_MAP.REQ (up to C_EV_match_retry times), each time restarting the TT_match_response timer.  \n   d. If, after all retries, no confirmation is received, the entire matching process is deemed FAILED.  \n   e. If the peer receives duplicate CM_AMP_MAP.REQ messages (because the original confirmation was lost), it simply re-sends CM_AMP_MAP.CNF to acknowledge each retry.  \n5. Reference Baseline  \n   \u00ad\u2013 All power values in CM_AMP_MAP (and AMDATA) are defined relative to \u221250\u2009dBm/Hz.  \n\nIn summary, CM_AMP_MAP.REQ is the request message that kicks off an optional, reliable exchange of per-carrier transmission-power settings (the amplitude map) between two nodes in a communication system.",
    "What is CM_AMP_MAP.CNF?": "CM_AMP_MAP.CNF is the standard confirmation message in the HomePlug Green PHY\u2010based amplitude\u2010map exchange between two PLC nodes (for example an EVSE and an EV\u2019s communication controller).  Every time a CM_AMP_MAP.REQ is received, the requester expects a CM_AMP_MAP.CNF in return; that CNF  \n  \u2022 Carries a field \u201cResType\u201d indicating the outcome of the request (0x00 = success, 0x01 = failure, 0x02\u20130xFF reserved)  \n  \u2022 Must be formatted in strict accordance with the MME definition in the HPGP (HomePlug Green PHY) specification (see Table A.9 for CM_AMP_MAP.CNF)  \n  \u2022 Shall be sent within the TT_match_response timer; if no valid CNF arrives before that timer expires, the requester retransmits CM_AMP_MAP.REQ  \n  \u2022 May be omitted or delayed (for example, in negative\u2010test cases such as TC_SECC_CMN_VTB_CmAmpMap_003, no CNF is sent until the timer expires)  \n\nIn short, CM_AMP_MAP.CNF is the \u201creply-back\u201d or acknowledgment packet that tells the originator of the CM_AMP_MAP.REQ whether its new amplitude map has been accepted, rejected or is in a reserved state.",
    "What is D-LINK_READY.indication?": "D-LINK_READY.indication is the data-link-layer primitive (or protocol message) by which the lower-layer communication module notifies the higher-layer entity (HLE) of any change in the status of the data link.  In practice it serves two purposes:  \n\n1.  Link-up notification (\u201clink established\u201d)  \n    \u2022 After the SLAC_MATCH exchange completes (or after no AMP-MAP exchange occurred within the TT_AMP_MAP_EXCHANGE timeout), the lower layers conclude that a point-to-point data link between EV and EVSE is ready.  \n    \u2022 They immediately send D-LINK_READY.indication(link established) to the HLE so that higher-level protocols can begin parameter exchange, authentication, charging control, etc.  \n    \u2022 Timing requirements such as V2G3-A09-120 (maximum delay between SLAC_MATCH and the indication) and V2G3-A09-117 (specific conditions under which the indication must be sent) apply.  \n\n2.  Link-down notification (\u201cno link\u201d)  \n    \u2022 If a previously established link is lost (e.g. the low-layer module leaves the logical network), the lower layers send D-LINK_READY.indication(no link) so that the HLE can abort or re-establish higher-level transactions.  \n    \u2022 Any change in link status\u2014whether success or failure\u2014triggers an immediate D-LINK_READY.indication.  \n\nThe indication carries a D-LINKSTATUS parameter (either \u201clink established\u201d or \u201cno link\u201d) and is always sent from the lower layers up to the HLE to keep the higher protocol layers informed of the real-time availability of the data link.",
    "What is D-LINK_TERMINATE.request?": "The D-LINK_TERMINATE.request is a standardized protocol primitive in the EV-to-EVSE (Vehicle-to-Grid) communication stack whose sole purpose is to tear down an existing data-link connection.  In practice it works like this:\n\n1. Originator  \n   \u2013 It is issued by the High-Level Entity (HLE) of either the EV or the EVSE when the charging session or matching/validation procedure needs to be cleanly ended.\n\n2. Target  \n   \u2013 The request is delivered down to the low-layer communication module (the \u201cdata-link\u201d and physical layers) on the same node.\n\n3. Effect  \n   \u2013 On receipt of D-LINK_TERMINATE.request the low-layer module must:  \n     \u2022 Leave (drop) the current logical network  \n     \u2022 Reset all link parameters to their defaults  \n     \u2022 Change its matching status to \u201cUnmatched\u201d\n\n4. Timing  \n   \u2013 The module has to complete the leave operation within the TP_match_leave timeout (typically on the order of 1 s).\n\n5. Context  \n   \u2013 This primitive appears in the V2G3-M09-17 test requirement of the ISO/IEC Vehicle-to-Grid (V2G) standards for Mode 3/4 charging and ensures that both EV and EVSE can reliably tear down their PLC (power-line communication) link at the end of a session or upon error.\n\nIn short, D-LINK_TERMINATE.request is the \u201cshut-down\u201d command sent by the upper layer to the low-layer communication stack, instructing it to drop the data link, reset its state and be ready for a future (re-)matching.",
    "What is D-LINK_ERROR.request?": "D-LINK_ERROR.request is a standardized data\u2010link-layer \u201cerror\u201d primitive used in the G3-PLC/SLAC-based V2G (vehicle-to-grid) communication stack between an EVSE\u2019s (or EV\u2019s) High-Level Entity (HLE) and its low-layer communication node.  In essence, the HLE issues D-LINK_ERROR.request whenever it detects a failure in the already established data-link, and the communication node must then:\n\n 1.  Terminate the existing data link in the lower layers.  \n 2.  Drive the control-pilot line into the prescribed \u201crestart\u201d duty-cycle state (state E).  \n 3.  Restart the MAC matching process (i.e. rendezvous/reassociation) to re-establish a healthy link.  \n 4.  Follow one of the options mandated by V2G3-M07-14 (error recovery paths) or, under V2G3-M07-16, drop out of the logical network and set the matching state to \u201cunmatched.\u201d  \n\nKey points:  \n\u2022  Origin: issued by the HLE layer of the EVSE (or EV) when it detects loss or corruption on the data link.  \n\u2022  Scope: data\u2010link control service access point (SAP) to layer 3 in the V2G3-M07-13/14/16 protocols.  \n\u2022  Purpose: signal a link failure, force lower-layer teardown, initiate control-pilot transition and a fresh matching sequence.  \n\u2022  Supported entity: EVSE (and symmetrically the EV\u2019s communication node).",
    "What is D-LINK_PAUSE.request?": "The D-LINK_PAUSE.request is a protocol primitive defined in the Vehicle-to-Grid (V2G) communication standard that allows one peer (EV or EVSE) to tell the data-link layer to \u201ctake a nap\u201d temporarily.  In practice it does two things:\n\n1.  It instructs the lower (physical + data-link) layers to suspend or significantly reduce their activity\u2014in other words, to enter a power-saving or low-power mode.  \n2.  It ensures that, while sleeping, the data-link remains logically \u201cMatched\u201d so that when both sides wake up they can resume communication without having to renegotiate or re-establish the link from scratch.\n\nKey behaviors and requirements (per V2G3-M07-20 and related clauses):  \n\u2022  On sending D-LINK_PAUSE.request, the sender freezes all outstanding data-link traffic.  \n\u2022  On receiving D-LINK_PAUSE.request the EVSE (and likewise the EV) shall switch its Control Pilot line to state X1 (\u201chalted\u201d) and may power down its low-layer communication module.  \n\u2022  Before entering the low-power state the EVSE must store its current logical\u2010network parameter set so that on wake-up the link can continue seamlessly.  \n\u2022  When both sides are ready to resume, a complementary D-LINK_READY.indication is issued to bring the link back to full operating mode.\n\nIn short, D-LINK_PAUSE.request is the standardized \u201cpause\u201d command in EV\u2194EVSE data-link protocols, used to conserve power during idle periods without losing the link\u2019s context."
}