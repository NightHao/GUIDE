{
    "What is CM_SLAC_PARM.REQ?": "Overview  \nCM_SLAC_PARM.REQ is the SLAC (Signal Level Attenuation Characterization) parameter\u2010request message that an Electric Vehicle (EV) broadcasts to Electric Vehicle Supply Equipment (EVSE) at the start of the SLAC parameter exchange phase.  It carries the settings the EV intends to use for the subsequent signal\u2010strength measurement sequence and initiates a new matching process between the EV and any \u201cUnmatched\u201d EVSEs.\n\nFunctional Description  \n\u2022  When the EV detects Control Pilot State\u00a0B (e.g. immediately after plug\u2011in or wake\u2011up), it must, within the TP_EV_SLAC_init window (typ.\u00a010\u00a0s), send CM_SLAC_PARM.REQ to all EVSEs in range (Ethernet broadcast).  \n\u2022  Any EVSE whose low\u2011layer communication module is in the \u201cUnmatched\u201d state and meets the SLAC preconditions ([V2G3\u2011A09\u201103])\u2014connected to an EV and in \u201cUnmatched\u201d\u2014shall, on receipt, respond with CM_SLAC_PARM.CNF.  \n\u2022  If no CM_SLAC_PARM.CNF is received within the EV\u2019s match\u2011response timer (TP_match_response, typ.\u00a0100\u00a0ms), the EV retransmits CM_SLAC_PARM.REQ.  Retransmissions continue at intervals governed by TT_match_response until the TT_matching_repetition timer (max\u00a010\u00a0s) expires or until a valid CM_SLAC_PARM.CNF is received.  \n\nMessage Structure and Fields  \nCM_SLAC_PARM.REQ is defined as an MME (Management Message Entry) of type \u201cBroadcast.\u201d  Its payload and field mapping (per Table\u00a0A.2) are:  \n  \u2022  Octet\u00a00\u00a0\u2013\u00a0APPLICATION_TYPE (1\u00a0octet)  \n     \u2013\u00a0Value\u00a00x00  \n     \u2013\u00a0Fixed indicator for \u201cPEV\u2013EVSE matching.\u201d  \n  \u2022  Octet\u00a01\u00a0\u2013\u00a0SECURITY_TYPE (1\u00a0octet)  \n     \u2013\u00a0Value\u00a00x00  \n     \u2013\u00a0Fixed indicator for \u201cNo Security.\u201d  \n  \u2022  Octets\u00a02\u20139\u00a0\u2013\u00a0RunID (8\u00a0octets)  \n     \u2013\u00a0Variable, randomly chosen by the EV for each new matching run and constant for all messages in that run.  \n\nTiming and Retry Behavior  \n  \u2022  TP_EV_SLAC_init (EV side): Max time from plug\u2011in (State\u00a0B detected) to first CM_SLAC_PARM.REQ (typ.\u00a010\u00a0s).  \n  \u2022  TP_match_response (EV side): Max wait time for CM_SLAC_PARM.CNF before retry (typ.\u00a0100\u00a0ms).  \n  \u2022  TT_matching_repetition: Max duration for repeated CM_SLAC_PARM.REQ attempts after errors (max\u00a010\u00a0s).  \n  \u2022  TT_EVSE_SLAC_init (EVSE side): Time window during which EVSE must accept CM_SLAC_PARM.REQ (20\u201350\u00a0s).  \n\nSequence Flow  \n1.  EV Host triggers the EV PLC node to start SLAC after detecting State\u00a0B or wake\u2011up.  \n2.  EV PLC node broadcasts CM_SLAC_PARM.REQ (APPLICATION_TYPE\u00a0=\u00a00x00, SECURITY_TYPE\u00a0=\u00a00x00, RunID\u00a0=\u00a0new random).  \n3.  EVSE PLC node (if \u201cUnmatched\u201d and ready) replies with CM_SLAC_PARM.CNF; otherwise remains silent.  \n4.  EV waits TP_match_response; if no reply, it resends CM_SLAC_PARM.REQ.  \n5.  Steps\u00a02\u20134 repeat until either CM_SLAC_PARM.CNF arrives or TT_matching_repetition expires.  \n6.  On receipt of CM_SLAC_PARM.CNF, EV and EVSE proceed to the next SLAC stage (signal\u2010strength measurement).  \n\nRelated Messages  \n  \u2022  CM_SLAC_PARM.CNF: Unicast confirmation from the EVSE containing matched RunID, M\u2010Sound targets, number of expected sounds, time\u2010out values, respType, and forwarding station address.  \n  \u2022  CM_START_ATTEN_CHAR.IND / CM_ATTEN_CHAR.RSP / CM_SLAC_MATCH.REQ: Subsequent SLAC messages that carry out the attenuation characterization and final matching steps.  \n\nSpecification References  \n  \u2022  ISO\u00a015118\u20113 Annex\u00a0A.9.1.1: Functional description of SLAC parameter exchange.  \n  \u2022  [V2G3\u2011A09\u201104]: MME content and message type requirements for parameter exchange messages.  \n  \u2022  Table\u00a0A.2 (Involved MMEs for parameter exchange): Defines CM_SLAC_PARM.REQ and CM_SLAC_PARM.CNF field mappings.",
    "What is Logical Network?": "Overview  \nA logical network is a virtual, Layer\u00a02 network configuration in Vehicle\u2011to\u2011Grid (V2G) communication that groups together low\u2011layer communication stations (e.g., EV and EVSE communication nodes) sharing the same network key. It enables encrypted data exchange among its members while allowing multiple, independent logical networks to coexist over the same physical medium for segmentation and security.\n\nDefinition  \n\u2022 As per ISO\u00a015118\u20113 (Clause\u00a03.16), a logical network is a \u201cset of low\u2011layer communication stations which use the same network key.\u201d  \n\u2022 Note\u00a01: Only members of the same logical network can exchange encrypted payload data and are visible to each other on higher layers. Different logical networks may exist simultaneously on the same physical media and are used for network segmentation.  \n\u2022 Note\u00a02: A logical network is defined for OSI Layer\u00a02 (the Data Link layer).\n\nKey Characteristics  \n\u2022 Network Key (NMK): All members use the same Network Membership Key (NMK).  \n\u2022 Visibility and Encryption: Encrypted payload exchange and node visibility are restricted to members of that logical network.  \n\u2022 Segmentation: Multiple logical networks can share the same physical medium without mutual visibility, supporting security and traffic isolation.  \n\nLayer Association  \n\u2022 Defined at OSI Layer\u00a02, the logical network operates below higher\u2011layer protocols but provides the Data Link services and security context required by Network, Transport, and Application layers for V2G communication.\n\nLogical Network Configuration  \n\u2022 NMK Generation (EVSE side)  \n  \u2013 [V2G3\u2011A09\u201192] When an EVSE switches to a private logical network, it shall set its local NMK to a random value to ensure uniqueness. Configuration of the NMK on the EVSE side may be done by sending a CM_SLAC_MATCH.CNF MME or any time before matching starts.  \n\u2022 NID Derivation  \n  \u2013 [V2G3\u2011A09\u201193] The Network Identifier (NID) of the logical network shall be derived from the NMK according to [HPGP], clause\u00a04.4.3.1, using a security level value of 0b00.\n\nJoining the Logical Network  \n\u2022 Both EV and EVSE use the CM_SLAC_MATCH MMEs defined in the [HPGP] messages to create and join the logical network, following the sequences in Figure\u00a0A.1. [V2G3\u2011A09\u201191]  \n\u2022 After matching decision, the EV sends CM_SLAC_MATCH.REQ to the selected EVSE. The EVSE responds with CM_SLAC_MATCH.CNF containing all parameters (such as NMK, NID, tone map, amplitude map) needed to join the logical network of the EVSE.\n\nLeaving the Logical Network  \n\u2022 [V2G3\u2011M09\u201119] In certain cases (e.g., error handling, D\u2011LINK_TERMINATE.request), the communication node shall leave the logical network within TP_match_leave. Upon leaving, all link parameters are reset to defaults and the state changes to \u201cUnmatched.\u201d  \n\u2022 [V2G3\u2011M09\u201118] When the low\u2011layer communication module leaves the logical network, it shall inform the High\u2011Layer Entity (HLE) via D\u2011LINK_READY.indication (no link).\n\nTiming and Constants  \nTable\u00a01 summarizes the timing constraint for leaving the logical network among other constants.\n\nTable 1 \u2014 Relevant Timing Value  \nParameter         \u2502 Description                        \u2502 Min \u2502 Typical \u2502 Max \u2502 Unit  \n\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500  \nTP_match_leave   \u2502 Maximum time to leave the logical \u2502     \u2502         \u2502 1   \u2502 s   \n                  \u2502 network                             \u2502     \u2502         \u2502     \u2502     \n\nRelated Figures and Tables  \n\u2022 Figure\u00a0A.7 \u2014 Sequence chart of joining the logical network: illustrates timing constraints and message flow when an EV joins an EVSE\u2019s logical network.  \n\u2022 Figure\u00a0A.1 \u2014 Sequence chart defining the CM_SLAC_MATCH MME exchanges for logical network creation.  \n\u2022 Table\u00a03 (ISO\u00a015118\u20113 Clause\u00a08) \u2014 Timing and constant values, including TP_match_leave, to be complied with by all low\u2011layer communication devices.",
    "What is the difference between MTC and PTC?": "Overview  \nThe Main Test Component (MTC) and Parallel Test Component (PTC) are two distinct roles within the ISO\u00a015118\u20115 physical/data\u2010link conformance test architecture.  The MTC serves as the primary orchestrator of a test session\u2014hosting the TTCN\u20113 test configuration, driving test execution, and producing verdicts\u2014whereas each PTC is a helper or observer component spawned by the MTC to monitor specific protocol behavior (e.g., IEC\u00a061851\u20111 PWM signaling) in parallel and report status back to the MTC.\n\nDefinition  \n\u2022 Main Test Component (MTC)  \n  \u2013 Term defined in clause\u00a03.12 as the single \u201cmain test component in a test component configuration responsible for creating and controlling parallel test components and computing and assigning the test verdict.\u201d  \n  \u2013 Realized by either an EVCC_Tester or SECC_Tester component type, depending on whether the System Under Test (SUT) is an EVCC or SECC (see V2G5\u2011009 and V2G5\u2011010).  \n\n\u2022 Parallel Test Component (PTC)  \n  \u2013 Term defined in clause\u00a03.13 as a \u201ctest component created by the main test component.\u201d  \n  \u2013 Often instantiated as the HAL_61851_Listener PTC, responsible for continuously observing IEC\u00a061851\u20111 signaling and Synchronizing PWM states with the MTC.\n\nRole and Responsibilities  \n\u2022 MTC  \n  \u2013 Hosts the TTCN\u20113 test configuration and represents the tester instance (EVCC_Tester or SECC_Tester).  \n  \u2013 Controls test case execution flow, lifeline, timers, variables, and verdict computation.  \n  \u2013 Manages data\u2010link processing, including detection and control of EIM authorization status and PLC signal power levels (e.g., CM_ATTEN_CHAR.IND handling).  \n  \u2013 Reduces or adjusts control pilot signal levels as required by the test case.  \n  \u2013 Maps ports to the abstract Test System Interface (TSI) for communication with the real test system.  \n\n\u2022 PTC  \n  \u2013 Spawned and controlled by the MTC to run alongside the main test logic.  \n  \u2013 Continuously monitors protocol\u2010specific parameters (positive voltage state, frequency, duty cycle, proximity resistor value) per IEC\u00a061851\u20111:2017, Annex\u00a0A.  \n  \u2013 Observes the status of EIM authorization and informs the MTC of success or failure.  \n  \u2013 Synchronizes the internal HAL_61851_Internal_Port PWM state with the MTC\u2019s HAL_61851_Internal_Port.  \n  \u2013 Provides targeted listener functionality without holding its own TTCN\u20113 configuration or verdict logic.\n\nComponents and Ports  \n\u2022 MTC Component Types  \n  \u2013 SECC_Tester (MTC) or EVCC_Tester (MTC), each assigned a SLAC_Port, HAL_61851_Port, and HAL_61851_Internal_Port (see Table\u00a04 component definitions).  \n\n\u2022 PTC Component Types  \n  \u2013 HAL_61851_Listener (PTC), which uses a HAL_61851_Port to interact with the SUT adapter and a HAL_61851_Internal_Port to communicate PWM status to the MTC.  \n\n\u2022 Port Mapping (Figure\u00a03 / clause\u00a07.3.2)  \n  \u2013 pt_SLAC_Port of TSI \u2194 pt_SLAC_Port of MTC  \n  \u2013 pt_HAL_61851_Port of TSI \u2194 pt_HAL_61851_Port of MTC  \n  \u2013 pt_HAL_61851_Listener_Port of TSI \u2194 pt_HAL_61851_Listener_Port of HAL_61851_Listener (PTC)  \n  \u2013 pt_HAL_61851_Internal_Port is an internal link between MTC and PTC and is not mapped to the TSI.\n\nConfiguration Requirements  \n\u2022 The test configuration always includes one MTC, one or more PTCs as needed (e.g., for PWM event handling), and an abstract Test System Interface (TSI) that ties component ports to real test system ports.  \n\u2022 The MTC\u2019s type (SECC_Tester vs. EVCC_Tester) and the TSI\u2019s type (System_SECC vs. System_EVCC) are both determined by the SUT type (SECC or EVCC).  \n\u2022 PTCs have no local timers or variables; they strictly observe and report protocol events under MTC control.\n\nKey Distinction  \nIn short, the MTC is the \u201cmaster\u201d controller of the test\u2014loading test scripts, scheduling actions, and deciding pass/fail\u2014while PTCs are specialized \u201cslave\u201d observers that run in parallel to monitor and measure specific parts of the protocol (for example, IEC\u00a061851\u20111 PWM duty cycles or EIM status) and feed that information back to the MTC for verdict determination.",
    "What is CM_SLAC_MATCH.REQ?": "Overview  \nCM_SLAC_MATCH.REQ is a unicast SLAC (Signal Level Attenuation Characterization) protocol request message sent by the Electric Vehicle (EV) to the Electric Vehicle Supply Equipment (EVSE) to initiate the final step of the SLAC matching process. This message conveys the EV\u2019s decision\u2014based on signal\u2011strength measurements and optional validation\u2014that it has identified the correct EVSE and requests the EVSE to confirm the match and provide the network parameters needed to join its private HomePlug Green PHY network.\n\n1. Purpose and Process Context  \n\u00a0\u00a0\u2022\u00a0SLAC Matching Process  \n\u00a0\u00a0\u00a0\u00a0\u2013 After the EV and EVSE exchange attenuation\u2011measurement messages (CM_SLAC_PARM, CM_START_ATTEN_CHAR, CM_ATTEN_CHAR, CM_ATTEN_CHAR.RSP) and\u2014if used\u2014validation messages (CM_VALIDATE.REQ/CNF), the EV must formally request the match.  \n\u00a0\u00a0\u00a0\u00a0\u2013 CM_SLAC_MATCH.REQ tells the EVSE \u201cI have determined which EVSE I\u2019m directly connected to; please complete the matching procedure.\u201d  \n\u00a0\u00a0\u2022\u00a0Trigger Conditions  \n\u00a0\u00a0\u00a0\u00a0\u2013 Sent by the EV after it has issued CM_ATTEN_CHAR.RSP (and, if applicable, after receiving CM_VALIDATE.CNF).  \n\u00a0\u00a0\u00a0\u00a0\u2013 The EV must send CM_SLAC_MATCH.REQ within the performance timer TP_EV_match_session after CM_ATTEN_CHAR.RSP (max 500\u00a0ms).  \n\u00a0\u00a0\u00a0\u00a0\u2013 From the EVSE side, the timer TT_EVSE_match_session (max 10\u00a0s) starts when its attenuation\u2011measurement timer (TT_EVSE_match_MNBC) expires; the EVSE shall consider matching failed if no CM_VALIDATE.REQ or CM_SLAC_MATCH.REQ arrives before TT_EVSE_match_session expires.\n\n2. Sequence and Timing  \n\u00a0\u00a0\u2022\u00a0Stopping the Match Sequence Timer  \n\u00a0\u00a0\u00a0\u00a0\u2013 The EVSE\u2019s TT_match_sequence timer (max 400\u00a0ms) stops on reception of a valid CM_SLAC_MATCH.REQ message.  \n\u00a0\u00a0\u2022\u00a0EVSE Response  \n\u00a0\u00a0\u00a0\u00a0\u2013 Upon receipt of a valid CM_SLAC_MATCH.REQ, the EVSE shall reply with CM_SLAC_MATCH.CNF within TP_match_response (typ. 100\u00a0ms, max 200\u00a0ms).  \n\u00a0\u00a0\u00a0\u00a0\u2013 If the EVSE receives a retransmitted CM_SLAC_MATCH.REQ from the same EV (indicating the EV did not receive CM_SLAC_MATCH.CNF), the EVSE shall respond again.  \n\n3. Message Structure and Parameters (Table A.7)  \nCM_SLAC_MATCH.REQ is defined in the HomePlug Green PHY MME (MAC Management Entity) as follows:  \n\u00a0\u00a0Field                | Octet No. | Size (bytes) | Value / Description  \n\u00a0\u00a0---------------------|-----------|--------------|---------------------  \n\u00a0\u00a0ApplicationType      | 0         | 1            | 0x00 (fixed \u201cPEV\u2011EVSE matching\u201d)  \n\u00a0\u00a0SecurityType         | 1         | 1            | 0x00 (no security)  \n\u00a0\u00a0MVFLength            | 2\u20133       | 2            | 0x3E (fixed matching value)  \n\u00a0\u00a0PEV ID               | 4\u201320      | 17           | \u2013 (vendor\u2011specific or zero)  \n\u00a0\u00a0PEV MAC              | 21\u201326     | 6            | MAC address of the EV Host  \n\u00a0\u00a0EVSE ID              | 26\u201342     | 17           | \u2013 (vendor\u2011specific or zero)  \n\u00a0\u00a0EVSE MAC             | 44\u201349     | 6            | MAC address of the EVSE Host  \n\u00a0\u00a0RunID                | 50\u201357     | 8            | Variable; must match the RunID used in the CM_SLAC_PARM.REQ phase  \n\u00a0\u00a0RSVD                 | 58\u201365     | 8            | Reserved (0x00)  \n\n4. Retry and Error Handling  \n\u00a0\u00a0\u2022\u00a0EV Retransmission  \n\u00a0\u00a0\u00a0\u00a0\u2013 The EV may retransmit CM_SLAC_MATCH.REQ up to C_EV_match_retry times (max 2) if no confirmation is received.  \n\u00a0\u00a0\u2022\u00a0Invalid Content  \n\u00a0\u00a0\u00a0\u00a0\u2013 If the EVSE receives a CM_SLAC_MATCH.REQ whose content deviates from the MME definition in Table\u00a0A.7, it shall ignore that message.  \n\n5. Confirmation and Next Steps  \n\u00a0\u00a0\u2022\u00a0CM_SLAC_MATCH.CNF  \n\u00a0\u00a0\u00a0\u00a0\u2013 Upon valid reception, the EVSE returns CM_SLAC_MATCH.CNF containing the matching Network Identifier (NID) and Network Membership Key (NMK).  \n\u00a0\u00a0\u2022\u00a0Joining the Logical Network  \n\u00a0\u00a0\u00a0\u00a0\u2013 After receiving CM_SLAC_MATCH.CNF, both EV and EVSE set keys (via CM_SET_KEY) and complete optional amplitude\u2011map exchange before indicating \u201cD\u2011LINK_READY\u201d to higher layers.  \n\n6. Test Cases and Validation  \n\u00a0\u00a0\u2022\u00a0Test Scenarios  \n\u00a0\u00a0\u00a0\u00a0\u2013 Various conformance test cases (e.g., TC_EVCC_CMN_VTB_CMSLACMATCH_001 \u2026 _012, and SECC variants) involve sending CM_SLAC_MATCH.REQ under normal or invalid parameter conditions to verify correct handling, retry limits, and timer conformance.  \n\u00a0\u00a0\u00a0\u00a0\u2013 GoodCase procedures count CM_SLAC_MATCH.REQ repetitions and validate inclusion of fields such as ApplicationType, EV MAC, EVSE MAC, and RunID.",
    "What is TSS?": "Overview  \nThe Test Suite Structure (TSS) is the framework defined in ISO\u00a015118\u20115 (Part\u00a05: Physical and data link layer conformance tests) clause\u00a07.2 that systematically organizes, names, and modularizes all components required for conformance testing of an Electric Vehicle Communication Controller (EVCC) or Supply Equipment Communication Controller (SECC). It prescribes:  \n- Hierarchical grouping of test functions, pre\u2011conditions, post\u2011conditions, and test behaviors into modules.  \n- Naming conventions and identifiers for systems under test, domains, and contexts.  \n- The layout and content of supporting annexes containing configurations, test cases, utility functions, templates, and data structures.\n\nStructure of the Test Suite Structure  \n1. Hierarchical Levels  \n   \u2022 Level\u00a01: Test groups or modules (e.g., AC, DC, Common) corresponding to ISO\u00a015118 use\u2011case subgroups.  \n   \u2022 Level\u00a02: Individual test cases, each composed of:  \n     \u2013 Pre\u2011conditions (functions defining initial state)  \n     \u2013 Test behavior (stimulus and expected reactions)  \n     \u2013 Post\u2011conditions (functions verifying final state)  \n   \u2022 Level\u00a03 (Lowest abstract level): Utility functions encapsulating reusable behaviors, timeouts, and common operations (defined in Annex\u00a0D/E).\n\n2. Module Organization  \n   \u2022 Functions and test behaviors are encapsulated into separate modules.  \n   \u2022 Test cases reference these modules to assemble the full testing logic.  \n   \u2022 Templates (Annex\u00a0F) provide TTCN\u20113 match patterns for expected SUT reactions.\n\nIdentifiers within the TSS  \nTable\u00a01 shows the template for test suite identifiers, used to name modules, test cases, and profiles:\n\nTable\u00a01 \u2014 Identifiers within the Test Suite Structure (TSS)  \nIdentifiers   Values            Description  \n<sut>         EVCC, SECC        System under Test  \n<dom>         AC, DC, IN, CMN   Domain (AC, DC, Inductive*, Common)  \n<ctx>         {fullname}        Context (e.g., standardized message or signal name)  \n\n*Note: Inductive (IN) is introduced for future use and not relevant to Part\u00a05.\n\nSupporting Annexes  \nThe TSS relies on a set of annexes, each containing specific elements of the test suite:\n\nTable\u00a02 \u2014 Test Suite Structure \u2014 Annexes Description  \nAnnex                Description  \nA (Configuration)    Constant definitions, timers, PICS and PIXIT definitions  \nB (Control Part)     Execution order of modeled test cases (\u201ctest groups\u201d) for EVCC or SECC  \nC (Test Cases)       TTCN\u20113 test case files for EVCC and SECC  \nD\u2013E (Functions)      Pre\u2011conditions, post\u2011conditions, test behaviors, and library utility functions  \nF (Templates)        TTCN\u20113 template files for matching SUT reactions  \nG (Data Structures)  Data structures needed for testing SLAC  \n\nRelated Concepts  \n\u2022 PICS (Protocol Implementation Conformance Statement): Specifies implemented and omitted protocol features.  \n\u2022 PIXIT (Protocol Implementation Extra Information for Testing): Provides supplementary implementation details for testing.  \n\u2022 Test Profiles (clause\u00a07.3): Combine a test configuration, PICS/PIXIT, components, ports, and a sequence of test cases (organized per the TSS) to verify conformance for a given use case.\n\nFigure 2 \u2014 General Overview of the Test Suite Structure (TSS)  \nThis figure (clause\u00a07.2, Figure\u00a02) illustrates the hierarchical breakdown: test groups at the top, test cases at the middle level, and function modules (pre\u2011/post\u2011conditions, test behaviors) at the bottom. Each test case is formed by enveloping a test behavior module with its corresponding pre\u2011 and post\u2011condition modules. The TSS subdivisions align with ISO\u00a015118 use\u2011case domains to facilitate clear organization and identifier assignment.",
    "What is CM_SLAC_MATCH.CNF?": "Overview  \nCM_SLAC_MATCH.CNF is the unicast confirmation message sent by the Electric Vehicle Supply Equipment (EVSE) to the Electric Vehicle (EV) at the end of the SLAC (Signal Level Attenuation Characterization) matching process. It completes the matching exchange initiated by CM_SLAC_MATCH.REQ and carries the network parameters (NID, NMK) and identifiers required for the EV to join the EVSE\u2019s logical PLC network.\n\n1. Protocol Context  \n\u00a0\u00a0\u2013 CM_SLAC_MATCH.CNF follows CM_SLAC_MATCH.REQ in the SLAC matching sequence (see Figures A.1/A.2 in Annex\u00a0A).  \n\u00a0\u00a0\u2013 It is part of the \u201cLogical network parameter exchange\u201d phase (Clause\u00a0A.9.4).  \n\u00a0\u00a0\u2013 The EVSE transmits CM_SLAC_MATCH.CNF only after the TT_match_response timer has expired.  \n\u00a0\u00a0\u2013 Upon receipt, the EV uses its content to configure the low\u2011layer communication module (via CM_SET_KEY.REQ per V2G3\u2011A09\u2011101).  \n\n2. Message Flow and Timing  \n\u00a0\u00a0\u2013 Trigger\u00a0: EV sends CM_SLAC_MATCH.REQ (unicast) after validation and attenuation characterization (Clause\u00a0A.9.5).  \n\u00a0\u00a0\u2013 Response window\u00a0: EVSE must send CM_SLAC_MATCH.CNF within the maximum duration defined by TT_match_response (max\u00a0200\u00a0ms).  \n\u00a0\u00a0\u2013 Link\u2011establishment window\u00a0: After receiving CM_SLAC_MATCH.CNF, the EV must establish the PLC link within TT_match_join (max\u00a012\u00a0s), else consider matching FAILED (Clause\u00a0A.9.5.3.2).\n\n3. Message Structure and Fields (MME Definition \u2013 Table\u00a0A.7 continued)  \nCM_SLAC_MATCH.CNF is defined as an MME entry with the following octet\u2011aligned fields (total 90\u00a0octets):  \n\u00a0\u00a01. Application_Type (Octet\u00a00, 1\u00a0octet)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Fixed value 0x00 indicating \u201cPEV\u2011EVSE matching.\u201d  \n\u00a0\u00a02. Security_Type (Octet\u00a01, 1\u00a0octet)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Fixed value 0x00 indicating \u201cNo Security.\u201d  \n\u00a0\u00a03. MVFLength (Octets\u00a02\u20133, 2\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Fixed value 0x0056.  \n\u00a0\u00a04. PEV ID (Octets\u00a04\u201320, 17\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Reserved field (0x00).  \n\u00a0\u00a05. PEV MAC (Octets\u00a021\u201326, 6\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 MAC address of the EV Host.  \n\u00a0\u00a06. EVSE ID (Octets\u00a027\u201343, 17\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Reserved field (0x00).  \n\u00a0\u00a07. EVSE MAC (Octets\u00a044\u201349, 6\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 MAC address of the EVSE Host.  \n\u00a0\u00a08. RunID (Octets\u00a050\u201357, 8\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Must match the RunID sent in CM_SLAC_PARM.REQ.  \n\u00a0\u00a09. RSVD (Octet\u00a058, 1\u00a0octet)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Reserved (0x00).  \n\u00a0\u00a010. NID (Octets\u00a066\u201372, 7\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Network Identifier derived from the NMK by the EVSE (per HPGP\u00a04.4.3.1).  \n\u00a0\u00a011. RSVD (Octet\u00a073, 1\u00a0octet)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Reserved (0x00).  \n\u00a0\u00a012. NMK (Octets\u00a074\u201389, 16\u00a0octets)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Private Network Membership Key for the EVSE\u2019s logical network.  \n\n4. Content Requirements and Validation  \n\u00a0\u00a0\u2013 All fields must conform exactly to the MME parameter definitions in Table\u00a0A.7 (Clause\u00a0A.9.4.2).  \n\u00a0\u00a0\u2013 Per V2G3\u2011A09\u201195 (Clause\u00a0A.9.1.3.2), the EV shall ignore any CM_SLAC_MATCH.CNF whose content deviates from these definitions.  \n\u00a0\u00a0\u2013 Invalid applicationType, securityType, MVFLength, RunID, MAC addresses, NID or NMK values render the message non\u2011compliant and are to be dropped.\n\n5. Post\u2011Reception Actions  \n\u00a0\u00a0\u2013 Upon receiving a valid CM_SLAC_MATCH.CNF, the EV sends CM_SET_KEY.REQ to configure its low\u2011layer PLC module with the NMK (V2G3\u2011A09\u2011101).  \n\u00a0\u00a0\u2013 The EV then attempts to join the EVSE\u2019s network within TT_match_join. Failure to detect the link before this timer expires causes the EV to declare the matching process FAILED (Clause\u00a0A.9.5.3.2).  \n\n6. Test and Conformance  \n\u00a0\u00a0\u2013 Test cases expect no CM_SLAC_MATCH.CNF until TT_match_response expires.  \n\u00a0\u00a0\u2013 GoodCase procedures verify that CM_SLAC_MATCH.CNF contains valid runID, EV MAC, EVSE MAC, NID and NMK.  \n\u00a0\u00a0\u2013 Negative tests check that the EV correctly ignores CM_SLAC_MATCH.CNF with invalid fields (applicationType, securityType, mvfLength, RunID, evMac, evID).",
    "What is CM_SET_KEY.REQ?": "Overview  \nCM_SET_KEY.REQ is a Management Message Entity (MME) protocol message used by the low\u2011layer communication module in Vehicle\u2011to\u2011Grid (V2G) systems\u2014both in Electric Vehicles (EV) and Electric Vehicle Supply Equipment (EVSE)\u2014to set or update critical network parameters. Specifically, it conveys the Network Identifier (NID) and Network Membership Key (NMK) to the local low\u2011layer communication component, enabling the device to join or reconfigure itself for a logical network.  \n\nProtocol Message Purpose  \n\u2022 Request the setting of network parameters (NID and NMK) in the communication module.  \n\u2022 Configure or update key values used to secure and manage membership in a logical network.  \n\u2022 Unicast to the local low\u2011layer communication node (physical/data\u2011link layer component).  \n\nUsage in the SLAC Matching Process  \n\u2022 After a SLAC matching confirmation (CM_SLAC_MATCH.CNF) is exchanged, the EV or EVSE shall configure its low\u2011layer communication module by sending CM_SET_KEY.REQ with the agreed NID and NMK.  \n\u2022 On the EVSE side (A.9.5.3.3), the EVSE must send CM_SET_KEY.REQ at the latest immediately after transmitting CM_SLAC_MATCH.CNF. This ensures the module is set to the correct network before link establishment.  \n\u2022 The EV may also use CM_SET_KEY.REQ MME to configure its module with values received in CM_SLAC_MATCH.CNF.  \n\nMME Parameters Definition (Table A.8 excerpt)  \nThe CM_SET_KEY.REQ message consists of the following fixed\u2011length fields (octet numbering starts at 0). All multi\u2011octet values are big\u2011endian unless otherwise noted.\n\n Field Name           Octet no.   Length (octets)   Value/Description  \n Key Type             0           1                 0x01  (Fixed; indicates \u201cNMK\u201d)  \n My Nonce             1\u20134         4                 0x00000000  (Fixed; encrypted payload not used)  \n Your Nonce           5\u20138         4                 0x00000000  (Fixed; encrypted payload not used)  \n PID                  9           1                 0x04  (Fixed; indicates \u201cHLE protocol\u201d)  \n PRN                  10\u201311       2                 0x0000  (Fixed; encrypted payload not used)  \n PMN                  12          1                 0x00  (Fixed; encrypted payload not used)  \n CCo Capability       13          1                 Variable; CCo capability per station role  \n NID                  14\u201320       7                 Variable; 54 LSBs contain the NID, 2 MSBs = 0b00  \n NewEKS               21          1                 0x01  (Fixed; indicates \u201cNMK\u201d)  \n NewKey               22\u201337       16                Variable; the 16\u2011octet NMK value  \n\nConfiguration Requirements  \n\u2022 The low\u2011layer communication module must support CM_SET_KEY.REQ as defined in Table A.8.  \n\u2022 Prior to entering the SLAC matching process, modules shall be configured according to A.4.5.  \n\u2022 After CM_SLAC_MATCH.CNF is sent, the configuring side must start its TT_match_join timer; link establishment must occur before this timer expires, or the matching process is deemed to have failed.  \n\nKey Entities  \n\u2022 NMK (Network Membership Key): A 16\u2011octet security key used to authenticate and secure communication within the logical network.  \n\u2022 NID (Network Identifier): A 54\u2011bit identifier that distinguishes one logical network from another.  \n\u2022 MME (Management Message Entity): The type of protocol message used for control exchanges in the SLAC process.  \n\nIn summary, CM_SET_KEY.REQ is the standardized, unicast MME message for installing or updating the NMK and NID in a V2G low\u2011layer communication module, ensuring secure and proper network membership for subsequent data exchange.",
    "What is CM_ATTEN_CHAR.IND?": "Overview  \nCM_ATTEN_CHAR.IND is an indication\u2011type management message (MME) used in the SLAC (Signal Level Attenuation Characterization) protocol between an Electric Vehicle Supply Equipment (EVSE) and an Electric Vehicle (EV). During the SLAC\u2011based matching procedure, the EV transmits a series of M\u2011SOUNDS to all potential EVSEs. Each EVSE measures the signal attenuation over groups of frequencies, computes an attenuation profile, and returns this information to the EV in a CM_ATTEN_CHAR.IND message. The EV uses the attenuation data in CM_ATTEN_CHAR.IND to calculate an overall Average_Attenuation, determine its EV_Discovery_Status (e.g. EVSE_FOUND, EVSE_POTENTIALLY_FOUND, or EVSE_NOT_FOUND), and then acknowledges each CM_ATTEN_CHAR.IND by sending a CM_ATTEN_CHAR.RSP.\n\n1. Function and Purpose  \n  \u2022\u00a0Signal\u2011Strength Reporting  \n    \u2013\u00a0Sent by each EVSE in response to the EV\u2019s CM_START_ATTEN_CHAR.IND and subsequent CM_MNBC_SOUND.IND messages.  \n    \u2013\u00a0Conveys the result of attenuation measurements, enabling the EV to rank and select the correct EVSE connection.  \n  \u2022\u00a0Matching Decision  \n    \u2013\u00a0The EV derives an Average_Attenuation from the groups in CM_ATTEN_CHAR.IND and, based on thresholds C_EV_match_signalattn_direct and C_EV_match_signalattn_indirect, sets its EV_Discovery_Status per Table\u00a0A.3 of the standard.  \n  \u2022\u00a0Protocol Handshake  \n    \u2013\u00a0Each CM_ATTEN_CHAR.IND must be individually confirmed by the EV with a CM_ATTEN_CHAR.RSP message.\n\n2. Message Structure and Fields  \n  CM_ATTEN_CHAR.IND is an MME payload that includes, at minimum, the following fields (as defined in Table\u00a0A.4 of the MME definitions):  \n  \u2022\u00a0APPLICATION_TYPE (fixed value 0x00 for PEV\u2011EVSE matching)  \n  \u2022\u00a0SECURITY_TYPE (fixed value 0x00 for \u201cNo Security\u201d)  \n  \u2022\u00a0SOURCE_ADDRESS (MAC address of the EV host)  \n  \u2022\u00a0NUM_SOUNDS (number of M\u2011SOUNDS received and used to compute the profile)  \n     \u2013 If NUM_SOUNDS = 0, the ATTEN_PROFILE is meaningless and the EV shall ignore the entire message.  \n  \u2022\u00a0ATTEN_PROFILE (groups of attenuation values measured over different frequency bands)  \n\n3. Role in the SLAC Matching Process  \n  1. After parameter exchange, the EV starts the SLAC matching sequence by sending C_EV_start_atten_char_inds instances of CM_START_ATTEN_CHAR.IND, followed by C_EV_match_MNBC CM_MNBC_SOUND.IND messages.  \n  2. Each EVSE collects the M\u2011SOUNDS, calculates its attenuation profile (arithmetic mean of the CM_ATTEN_PROFILE.IND sequences corrected by AttnRx\u2011EVSE), and then\u2014within the performance timer TP_EVSE_avg_atten_calc\u2014sends CM_ATTEN_CHAR.IND.  \n  3. The EV waits for CM_ATTEN_CHAR.IND messages from all recognized EVSEs for up to TT_EV_atten_results. It may stop early if all expected messages arrive, or continue listening until the timer expires to include late\u2011arriving EVSEs.  \n  4. Upon receipt of each CM_ATTEN_CHAR.IND, the EV sends a CM_ATTEN_CHAR.RSP within TP_match_sequence, then computes Average_Attenuation and proceeds with either CM_SLAC_MATCH.REQ or CM_VALIDATE.REQ for the selected candidate(s).\n\n4. Timing and Retransmissions  \n  \u2022\u00a0TT_EV_atten_results (max 1\u00a0200\u00a0ms): time the EV waits for CM_ATTEN_CHAR.IND messages, starting with the first CM_START_ATTEN_CHAR.IND.  \n  \u2022\u00a0TP_EVSE_avg_atten_calc (typical 100\u00a0ms): performance timer for the EVSE to calculate and send CM_ATTEN_CHAR.IND after receiving all M\u2011SOUNDS or TT_EVSE_match_MNBC expires.  \n  \u2022\u00a0TT_match_response (max 100\u00a0ms): time the EVSE waits for a CM_ATTEN_CHAR.RSP before retransmitting CM_ATTEN_CHAR.IND. After C_EV_match_retry attempts, if no response is received, the matching process at the EVSE side is considered FAILED.  \n  \u2022\u00a0TP_match_sequence (max 100\u00a0ms): time the EV has to respond with CM_ATTEN_CHAR.RSP after receiving CM_ATTEN_CHAR.IND.\n\n5. Error Handling and Message Validation  \n  \u2022\u00a0Invalid or Non\u2011Conformant Content  \n    \u2013\u00a0If CM_ATTEN_CHAR.IND deviates from the MME definition in Table\u00a0A.4 (V2G3\u2011A09\u201135), the EV shall ignore it.  \n  \u2022\u00a0NUM_SOUNDS = 0  \n    \u2013\u00a0EV shall ignore the message (V2G3\u2011A09\u201136).  \n  \u2022\u00a0Originating EVSE Without Prior CM_SLAC_PARM.CNF  \n    \u2013\u00a0CM_ATTEN_CHAR.IND shall be processed rather than ignored (V2G3\u2011A09\u201133).  \n\n6. Related Standards and Requirements  \n  \u2022\u00a0V2G3\u2011A09\u201122: Defines how EV_Discovery_Status is derived from the Average_Attenuation in CM_ATTEN_CHAR.IND (per Table\u00a0A.3).  \n  \u2022\u00a0V2G3\u2011A09\u201135/\u201136: Specify conditions for ignoring messages with invalid content or zero NUM_SOUNDS.  \n  \u2022\u00a0V2G3\u2011A09\u201137: Requires the EV to send CM_ATTEN_CHAR.RSP within TP_match_sequence upon reception of CM_ATTEN_CHAR.IND.  \n\n7. Test\u2011Case References  \n  Several test cases in the EVCC and SECC attenuation characterization suites verify the behavior around CM_ATTEN_CHAR.IND. They typically:  \n  \u2022\u00a0Trigger on reception of CM_ATTEN_CHAR.IND.  \n  \u2022\u00a0Check correct ATTEN_PROFILE and NUM_SOUNDS handling.  \n  \u2022\u00a0Verify timing (no CM_ATTEN_CHAR.IND sent until TP_EVSE_avg_atten_calc expires).  \n  \u2022\u00a0Count and validate repetitions of CM_ATTEN_CHAR.IND under retransmission conditions.  \n\nFigure and Table References  \n  \u2022\u00a0Figure\u00a0A.4 (Sequence chart of signal strength measurement) shows the exchange of CM_START_ATTEN_CHAR.IND, CM_MNBC_SOUND.IND, CM_ATTEN_CHAR.IND, and CM_ATTEN_CHAR.RSP.  \n  \u2022\u00a0Table\u00a0A.1 and Table\u00a0A.4 provide timing constants and MME definitions that govern CM_ATTEN_CHAR.IND\u2019s structure and performance requirements.",
    "What is EIM?": "Overview  \nExternal Identification Means (EIM), also referred to as Electricity Information Management, is a mechanism defined in ISO\u00a015118\u20111 for identifying, authorizing, and exchanging contractual or vehicle-related information between an electric vehicle (EV) and charging infrastructure (EVSE). EIM allows a user to prove their contract entitlement or vehicle identity by any external means (e.g., RFID card, app, or other identification device) before or during the charging process.\n\nDefinition and Scope  \n\u2022 EIM is an authentication profile used for identifying and authorizing electric vehicles during charging, often implemented as part of the Plug & Charge (PnC) or standalone identification workflows.  \n\u2022 In the ISO\u00a015118 series, \u201cExternal Identification Mean\u201d is the term used for any external means that enable the user to identify their contract or the car.  \n\u2022 EIM is implemented on AC and DC EVSEs, on the EV\u2019s Electric Vehicle Communication Controller (EVCC), and on the Supply Equipment Communication Controller (SECC). It encompasses the processes, data exchange, and status control needed to grant or deny charging.\n\nKey Functions and Processes  \n1. Identification  \n  \u2013 The customer uses EIM (e.g., tapping an RFID card) to present their contract or vehicle credentials.  \n  \u2013 EIM prepares the system for authorization and may occur before or after plug\u2011in, depending on the EVSE\u2019s configuration (see Connection Coordination Sequences).\n\n2. Authorization  \n  \u2013 Upon successful EIM, the EVSE transitions the control pilot to states E or F (0% duty cycle) for a defined time (T_step_EF), then back to X1 or X2 (nominal) per requirement V2G3\u2011M06\u201108.  \n  \u2013 Authorization OK indicates that payment or contract approval is confirmed, allowing the charging session to proceed.\n\n3. Data Exchange  \n  \u2013 EIM exchanges information such as ContractID or other identification data over the high\u2011level communication channel (HLC\u2011C) or via basic IEC\u00a061851\u20111 signaling when operating in Basic Charging (BC) mode.  \n  \u2013 It works in conjunction with PnC, the high\u2011level ISO\u00a015118 \u201cPlug and Charge\u201d process, to manage both identification and subsequent charging control.\n\nImplementation in EVSEs  \n\u2022 AC EVSE supporting EIM appears in multiple connection coordination sequences, as summarized in Table\u00a01:  \n  \u2013 Seq\u00a01 (Figure\u00a03): Matching not started, 5% control pilot after plug\u2011in \u2192 branches b) EIM with BC, c) EIM w/o BC  \n  \u2013 Seq\u00a02 (Figure\u00a04): Matching not started, start with X1 \u2192 branches b), c)  \n  \u2013 Seq\u00a03 (Figure\u00a05) & Seq\u00a04 (Figure\u00a06): Matching already started \u2192 branches b), c)  \n  \u2013 Seq\u00a05 (Figure\u00a07): EIM done before plug\u2011in \u2192 branches b), c)  \n\u2022 DC EVSE supporting EIM is shown in Seq\u00a06 (Figure\u00a08): EIM can occur before or after plug\u2011in, with or without PnC.  \n\u2022 In each sequence, EIM\u2019s completion triggers specific control pilot state transitions and the optional start of the SLAC matching process.\n\nConnection Coordination Sequences  \n\u2013 After EIM is done and no matching is running, the EVSE shall signal CP state E/F for T_step_EF, then CP state X1 or X2 (nom.) per V2G3\u2011M06\u201108.  \n\u2013 If matching is already started when EIM completes, the EVSE applies either X1 or 5% X2 pilot duty cycle (depending on sequence), then continues to Basic Charging or High\u2011Level Communication (HLC\u2011C).  \n\u2013 Branches b) and c) in these sequences correspond to EIM w. BC (charging controlled by IEC\u00a061851\u20111) and EIM w/o BC (charging controlled by HLC\u2011C), respectively.\n\nRelated Standards and Requirements  \n\u2022 ISO\u00a015118\u20111: Defines \u201cExternal Identification Mean\u201d and general use cases for EIM.  \n\u2022 ISO\u00a015118\u20113: Specifies physical and data link layer requirements for EIM status control, including MTC functions and PTC observations.  \n\u2022 V2G3\u2011M06\u201104: Requires the use of EIM as a means of authorization in EVSEs.  \n\u2022 V2G3\u2011M06\u201108: Details control pilot signaling after positive EIM.  \n\u2022 V2G5\u2011033 / V2G5\u2011034 / V2G5\u2011035: Define service functions for initiating and processing EIM status information during SECC testing.\n\nConfiguration Summary (Table\u00a01: EIM and/or PnC in EVSEs)  \n\n| EVSE Type | Figure | Description                         | PnC | EIM with BC | EIM w/o BC | IEC\u00a061851\u20111 charging |\n|-----------|--------|-------------------------------------|-----|-------------|------------|----------------------|\n| AC EVSE   | Fig\u00a03  | Seq\u00a01: Matching not started (5\u00a0%)   | a)  | b)          | c)         | d)                   |\n|           | Fig\u00a04  | Seq\u00a02: Matching not started (X1)    | a)  | b)          | c)         | d)                   |\n|           | Fig\u00a05  | Seq\u00a03: Matching started (5\u00a0%)       | a)  | b)          | c)         | \u2013                    |\n|           | Fig\u00a06  | Seq\u00a04: Matching started (X1)        | a)  | b)          | c)         | \u2013                    |\n|           | Fig\u00a07  | Seq\u00a05: EIM before plug\u2011in            | \u2013   | b)          | c)         | d)                   |\n| DC EVSE   | Fig\u00a08  | Seq\u00a06                                            | a)  | \u2013           | c)         | \u2013                    |\n\nTesting and Test Components  \n\u2022 SECC testing uses EIM for authorization verification; EIM status is monitored by the Parallel Test Component (PTC) and controlled via the Main Test Component (MTC).  \n\u2022 SECC PICS/PIXIT configurations reference EIM profiles for conformance testing.  \n\u2022 The EVCC may also use EIM in Plug and Charge or charging sessions, subject to ISO\u00a015118\u20112 network/application layer requirements.\n\nIn summary, EIM (External Identification Means or Electricity Information Management) is the standardized method for external user identification and authorization in electric vehicle charging, enabling contract validation and secure data exchange before or during charging under both Basic Charging and High\u2011Level Communication modes.",
    "What is CM_START_ATTEN_CHAR.IND?": "Overview  \nCM_START_ATTEN_CHAR.IND is a broadcast message (MME) defined in the SLAC (Signal\u2011Level Attenuation Characterization) protocol of ISO\u00a015118\u20113.  It is sent by the Electric Vehicle (EV) immediately after the SLAC parameter exchange to initiate the attenuation\u2011characterization (signal\u2011strength measurement) phase of the EV\u2013EVSE matching process.\n\n1. Functional Role in Signal Strength Measurement  \n  \u2022 After the EV and EVSE have exchanged SLAC parameters, the EV sends CM_START_ATTEN_CHAR.IND repeatedly\u2014exactly C_EV_start_atten_char_inds times (typically 3)\u2014to signal the start of the attenuation\u2011characterization procedure (A.9.2.1).  \n  \u2022 Immediately following each CM_START_ATTEN_CHAR.IND, the EV transmits a defined number of M\u2011SOUNDS (C_EV_match_MNBC).  Each EVSE measures the received sound attenuation across groups of OFDM carriers and, upon completion or timeout, returns its results via CM_ATTEN_CHAR.IND.  \n  \u2022 Receipt of the first CM_ATTEN_CHAR.IND from an EVSE stops the EV\u2019s match\u2011sequence timer (TT_match_sequence) and allows the EV to process the attenuation data.\n\n2. MME Structure and Field Definitions  \n  CM_START_ATTEN_CHAR.IND is carried as an Ethernet broadcast frame.  Table\u00a0A.4 (Excerpt) defines its content:\n\n    Field                   Octet No.   Size (octets)   Value / Parameter               Definition  \n    \u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014  \n    APPLICATION_TYPE           0              1           0x00                            \u201cPEV\u2011EVSE Matching\u201d  \n    SECURITY_TYPE              1              1           0x00                            \u201cNo Security\u201d  \n    NUM_SOUNDS                 2              1           C_EV_match_MNBC                  Number of M\u2011Sounds to follow  \n    TIME_OUT                   3              1           TT_EVSE_match_MNBC               Max. time window for M\u2011Sounds (typ. 600\u00a0ms)  \n    RESP_TYPE                  4              1           0x01                            \u201cOther Green PHY station\u201d  \n    FORWARDING_STA          5\u201310             6           EV\u00a0Host MAC address              Destination for attenuation results  \n    RunID                  11\u201318             8           variable                         Matches RunID from CM_SLAC_PARM.REQ  \n\n3. Timing and Sequence Requirements  \n  \u2022 Count of Messages (C_EV_start_atten_char_inds): typical value =\u00a03 (Table\u00a0A.1).  \n  \u2022 Batch\u2011message Interval (TP_EV_batch_msg_interval): 20\u00a0ms\u00a0\u2264\u00a0interval\u00a0\u2264\u00a050\u00a0ms, the wait time between successive CM_START_ATTEN_CHAR.IND or CM_MNBC_SOUND.IND transmissions.  \n  \u2022 TT_EVSE_match_MNBC: EVSE\u2019s timeout (typ.\u00a0600\u00a0ms) defining how long it waits for the incoming M\u2011SOUNDS before calculating its attenuation profile.  \n  \u2022 TT_match_sequence: EV\u2019s timer (max.\u00a0400\u00a0ms) within which it must receive at least one CM_ATTEN_CHAR.IND to consider the start\u2011attenuation phase successful (reception stops this timer).  \n  \u2022 After sending its last CM_START_ATTEN_CHAR.IND, the EV must wait TP_EV_batch_msg_interval before beginning any new batch.\n\n4. Related Messages and Processes  \n  \u2022 M\u2011SOUNDS: short PLC signals sent by the EV immediately after each CM_START_ATTEN_CHAR.IND.  \n  \u2022 CM_ATTEN_CHAR.IND: unicast messages sent by EVSEs containing their measured attenuation profiles; each is confirmed by the EV with CM_ATTEN_CHAR.RSP.  \n  \u2022 SLAC Matching Sequence: CM_START_ATTEN_CHAR.IND triggers the SLAC attenuation phase following the CM_SLAC_PARM exchange.\n\n5. Protocol and Conformance Requirements  \n  \u2022 V2G3\u2011A09\u201126: Specifies timing constraints for CM_START_ATTEN_CHAR.IND transmissions and subsequent processing.  \n  \u2022 V2G3\u2011A06\u201105: States that the EV\u2019s low\u2011layer communication module shall not respond to CM_START_ATTEN_CHAR.IND messages (they are purely broadcast triggers).  \n  \u2022 Content must strictly conform to the MME definitions in Table\u00a0A.4 to be considered valid by the EVSE.\n\n6. Usage in Test Cases  \n  Many SLAC\u2011related test cases (e.g., TC_EVCC_AC_VTB_ATTENUATIONCHARACTERIZATION_001, TC_SECC_CMN_VTB_ATTENUATIONCHARACTERIZATION_00x) employ CM_START_ATTEN_CHAR.IND to initiate and validate the attenuation\u2011characterization procedure, verifying correct timing, repetition count, field contents, and interaction with TT_match_sequence and TP_EV_batch_msg_interval.",
    "What is ATS?": "Overview  \nThe Abstract Test Suite (ATS) is a standardized, implementation\u2011independent collection of high\u2011level test cases and procedures defined to verify that a System Under Test (SUT) meets specified requirements and conforms to a given protocol standard (notably ISO\u00a015118\u20113). The ATS abstracts away from any particular execution environment or coding language, focusing instead on the functional and conformance criteria the SUT must satisfy.\n\n1. Purpose and Scope  \n\u00a0\u00a0\u2022 The ATS is used to test the capabilities and behavior of the SUT against static (capability) and dynamic (behavior) conformance requirements defined in ISO\u00a015118\u20113.  \n\u00a0\u00a0\u2022 It increases confidence in interworking by detecting deviations from the protocol, though it cannot guarantee absolute conformance.  \n\u00a0\u00a0\u2022 The ATS does not assess performance, robustness, reliability, or power flow; it concentrates on protocol messages and state transitions under black\u2011box conditions.  \n\u00a0\u00a0\u2022 Execution of the ATS is mandated for conformance testing under standards such as V2G5\u2011038.\n\n2. Key Components  \n\u00a0\u00a02.1 Test Cases  \n\u00a0\u00a0\u00a0\u00a0\u2013 Discrete scenarios or conditions under which the SUT is exercised to verify specific requirements.  \n\u00a0\u00a0\u00a0\u00a0\u2013 Defined abstractly (e.g. in TTCN\u20113 Core Language) for layers 1 and 2; higher layers covered in ISO\u00a015118\u20114.  \n\n\u00a0\u00a02.2 Protocol Implementation Conformance Statement (PICS)  \n\u00a0\u00a0\u00a0\u00a0\u2013 A document listing the SUT\u2019s implemented capabilities and options (and omitted features).  \n\u00a0\u00a0\u00a0\u00a0\u2013 Ensures tests are only applied against relevant requirements.  \n\u00a0\u00a0\u00a0\u00a0\u2013 Summarized in Tables\u00a06,\u00a07,\u00a08 for various test configurations (e.g. SECC vs. EVCC, AC vs. DC, PnC vs. EIM).  \n\n\u00a0\u00a02.3 Protocol Implementation eXtra Information for Testing (PIXIT)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Provides additional SUT\u2011specific parameters or behaviors needed to make certain requirements testable (e.g. timing values, wake\u2011up durations).  \n\u00a0\u00a0\u00a0\u00a0\u2013 Summarized in Tables\u00a09,\u00a010,\u00a011 for different configurations.\n\n3. Test Architecture and Execution  \n\u00a0\u00a0\u2022 A test architecture defines the structural relationships among Test Management, SUT Adaptor, Platform Adaptor, Executable Test Suite, and coding/decoding systems.  \n\u00a0\u00a0\u2022 A Test Framework (TFW) provides the runtime environment and interfaces (Test Control Interface, Runtime Interface) for managing and executing test cases.  \n\u00a0\u00a0\u2022 Interpretation is the process of understanding and mapping abstract test cases to concrete test steps; Execution is carrying out those steps against the SUT.\n\n4. Coverage of ISO\u00a015118\u20113 Requirements  \n\u00a0\u00a04.1 Exclusions (Table\u00a027)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Requirements out of scope or not testable in black\u2011box configurations.  \n\n\u00a0\u00a04.2 Implicit Coverage (Table\u00a028)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Requirements indirectly exercised by SUT adapters or codecs without dedicated test cases.  \n\n\u00a0\u00a04.3 Direct Mapping (Table\u00a029)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Matrix indicating for each requirement whether it is Covered (X), Indirectly covered (I), Partially covered (P), Not testable (N), Not applicable (\u2013), or Out of scope (O) for SECC/EVCC, EIM/PnC, AC/DC profiles.  \n\u00a0\u00a0\u00a0\u00a0\u2013 Test case identifiers or comments provided for traceability.  \n\n\u00a0\u00a04.4 Simplified Representation (Table\u00a030)  \n\u00a0\u00a0\u00a0\u00a0\u2013 Groups of requirements consolidated by common sets of test case IDs for readability.\n\n5. Related Standards and References  \n\u00a0\u00a0\u2022 ISO\u00a015118\u20113: Defines the physical and data\u2011link layer protocol and static/dynamic conformance requirements for EV\u2011to\u2011grid communication over PLC.  \n\u00a0\u00a0\u2022 ISO\u00a015118\u20114: Covers network\u2011layer and above conformance tests.  \n\u00a0\u00a0\u2022 V2G5\u2011038: Specifies execution of the ATS for vehicle\u2011to\u2011grid conformance testing.\n\nKey Terms  \n\u00a0\u00a0\u2022 ATS \u2013 Abstract Test Suite  \n\u00a0\u00a0\u2022 SUT \u2013 System Under Test (EVCC or SECC in context)  \n\u00a0\u00a0\u2022 PICS \u2013 Protocol Implementation Conformance Statement  \n\u00a0\u00a0\u2022 PIXIT \u2013 Protocol Implementation eXtra Information for Testing  \n\u00a0\u00a0\u2022 TE \u2013 Test Execution  \n\u00a0\u00a0\u2022 TFW \u2013 Test Framework  \n\u00a0\u00a0\u2022 TTCN\u20113 \u2013 Testing and Test Control Notation version\u00a03",
    "What is CM_VALIDATE.CNF?": "Overview  \nCM_VALIDATE.CNF is a link\u2011layer confirmation message defined in ISO\u00a015118\u20113 (the SLAC\u2011based matching and validation protocol) that an Electric Vehicle Supply Equipment (EVSE) sends in response to a CM_VALIDATE.REQ from an Electric Vehicle (EV). It carries the outcome of a two\u2011step validation process used to confirm that the EV is physically connected to the correct EVSE before establishing a data link.\n\n1. Definition and Purpose  \n - CM_VALIDATE.CNF concludes each CM_VALIDATE.REQ/CM_VALIDATE.CNF exchange.  \n - It is used during the \u201cValidation of matching decision\u201d when signal\u2011strength measurements alone are insufficient to identify a single EVSE.  \n - Through two request\u2013response exchanges (\u201cstep\u00a01\u201d and \u201cstep\u00a02\u201d), the EVSE indicates its readiness (or lack thereof) for further validation and, in step\u00a02, reports the number of control\u2011pilot toggles (BCB\u2011toggles) observed.\n\n2. Two\u2011Step Request\u2013Response Sequence  \n  2.1 Step\u00a01 Exchange  \n   \u2022 EV \u2192 EVSE: CM_VALIDATE.REQ with Timer = 0x00, Result = \u201cready\u201d (0x01)  \n   \u2022 EVSE \u2192 EV: CM_VALIDATE.CNF (step\u00a01) within TP_match_response  \n     \u2013 Indicates whether the EVSE can perform validation (\u201cready\u201d), is busy (\u201cnot ready\u201d), does not require validation (\u201cnot required\u201d), or does not support validation (\u201cfailure\u201d).  \n\n  2.2 Step\u00a02 Exchange  \n   \u2022 EV \u2192 EVSE: CM_VALIDATE.REQ (broadcast) with a nonzero Timer value (duration for toggle sequence), Result = \u201cready\u201d  \n   \u2022 EVSE \u2192 EV: CM_VALIDATE.CNF (step\u00a02) within TP_match_response  \n     \u2013 Contains the number of BCB\u2011toggles counted during the time window given by the request\u2019s Timer.  \n     \u2013 Result = \u201csuccess\u201d if toggles counted correctly, or \u201cfailure\u201d if an error occurred.\n\n3. Message Structure (MME Definitions)  \n Table A.5 \u2014 Step\u00a01 CM_VALIDATE.CNF (Unicast)  \n  \u2022 SignalType (Octet\u00a00, 1\u00a0octet): 0x00 (fixed)  \n  \u2022 ToggleNum   (Octet\u00a01, 1\u00a0octet): 0x00 (fixed for step\u00a01)  \n  \u2022 Result      (Octet\u00a02, 1\u00a0octet):  \n       \u2013 0x00 = Not Ready  \n       \u2013 0x01 = Ready  \n       \u2013 0x03 = Failure  \n       \u2013 0x04 = Not Required  \n       (0x02=Success is defined but must not be used in step\u00a01)  \n\n Table A.6 \u2014 Step\u00a02 CM_VALIDATE.CNF (Unicast)  \n  \u2022 SignalType (0x00)  \n  \u2022 ToggleNum   (variable): number of BCB\u2011edges detected during TT_EVSE_vald_toggle  \n  \u2022 Result      (variable):  \n       \u2013 0x00 = Not Ready  \n       \u2013 0x01 = Ready  \n       \u2013 0x02 = Success  \n       \u2013 0x03 = Failure  \n       \u2013 0x04 = Not Required  \n\n4. Result Codes and Their Meaning  \n  \u2022 Not Ready (0x00): EVSE is busy; EV may retry step\u00a01.  \n  \u2022 Ready (0x01): EVSE is prepared for validation; EV proceeds to step\u00a02.  \n  \u2022 Success (0x02): (step\u00a02 only) Toggle count is valid.  \n  \u2022 Failure (0x03): Validation not supported or error occurred.  \n  \u2022 Not Required (0x04): EVSE advises skipping validation; EV may accept or force validation.\n\n5. Timers and Retries  \n  \u2022 TP_match_response: maximum time for EVSE to send any CM_VALIDATE.CNF after a CM_VALIDATE.REQ.  \n  \u2022 TT_match_sequence: started by EVSE when sending step\u00a01 CNF; on expiry, EVSE re\u2011sends step\u00a01 CNF up to C_EV_match_retry times, restarting the timer each retry.  \n  \u2022 TP_EV_vald_toggle: duration of BCB\u2011toggle sequence on EV side (also used by EVSE as TT_EVSE_vald_toggle in step\u00a02).  \n  \u2022 TT_match_response (on EV side): EV waits for step\u00a02 CM_VALIDATE.CNF, retrying the request or moving on to another EVSE if it expires.  \n\n6. Processing Rules and Interaction  \n  \u2022 Upon receiving a valid CM_VALIDATE.CNF, the EV stops its TT_match_response timer.  \n  \u2022 If the result of step\u00a01 is \u201cready,\u201d the EV must send step\u00a02 within TT_match_sequence.  \n  \u2022 If the result of step\u00a01 is \u201cnot required,\u201d the EV may skip step\u00a02 or send it to force validation.  \n  \u2022 If any CM_VALIDATE.CNF is invalid (deviates from MME definition), it is ignored.  \n  \u2022 If the EVSE receives a new CM_VALIDATE.REQ with Timer=0x00 after having sent step\u00a01 CM_VALIDATE.CNF, it must resend its step\u00a01 CM_VALIDATE.CNF.  \n  \u2022 Depending on the result codes, the EV either stops validation and continues matching (SLAC_MATCH.REQ), retries with the same EVSE, or moves to the next candidate EVSE.\n\n7. Sequence Diagram  \n Figure A.5 (\u201cSequence chart of validation process of matching decision\u201d) illustrates how CM_VALIDATE.REQ and CM_VALIDATE.CNF messages, timers, and toggle sequences interact during both step\u00a01 and step\u00a02 of the validation process.\n\n8. Related Requirements  \n  \u2022 V2G3\u2011A09\u201161: CM_VALIDATE.CNF must be sent within TP_match_response.  \n  \u2022 V2G3\u2011A09\u201165\u2026A09\u201190: Define conditions for result field values, timer behaviors (TT_match_sequence, TT_EVSE_vald_toggle), retry counts, and error handling.  \n\nIn summary, CM_VALIDATE.CNF is the SLAC\u2011management confirmation from EVSE to EV that reports readiness and outcome of a two\u2011part validation\u2014first confirming EVSE availability, then verifying physical connection via control\u2011pilot toggles\u2014ensuring that the EV establishes its data link with the correct EVSE.",
    "What is CM_AMP_MAP.CNF?": "Overview  \nCM_AMP_MAP.CNF is the unicast confirmation message used in the HomePlug Green\u00a0PHY (HPGP) amplitude map exchange procedure. It is sent by a low\u2011layer communication module (either EV or EVSE side) in response to a received CM_AMP_MAP.REQ. The CM_AMP_MAP.CNF indicates whether the requested amplitude map update (i.e. per\u2011carrier transmission\u2011power limitation) has been accepted or rejected.\n\n1. Functional Description  \n   \u2022 Amplitude map exchange is an optional SLAC (Signal\u2011Level Attenuation Characterization) function (Clause\u00a0A.9.6.1) whereby one low\u2011layer communication module requests the counterpart to reduce transmission power for certain carriers.  \n   \u2022 The requesting side issues CM_AMP_MAP.REQ; the recipient must reply with CM_AMP_MAP.CNF to confirm the action.  \n   \u2022 If a CM_AMP_MAP.CNF contains invalid content (i.e. deviates from its MME definition in Table\u00a0A.9), it shall be ignored (V2G3\u2011A09\u2011114).  \n   \u2022 If the requested node receives a retransmitted CM_AMP_MAP.REQ (e.g. because no valid CM_AMP_MAP.CNF was received), it shall respond again with CM_AMP_MAP.CNF (V2G3\u2011A09\u2011116).  \n\n2. Message Structure (MME Definition \u2013 Table\u00a0A.9)  \n   CM_AMP_MAP.CNF is defined as follows:  \n     \u2022 Unicast MME name: CM_AMP_MAP.CNF  \n     \u2022 Field: ResType  \n     \u2022 Octet no.: 0  \n     \u2022 Field size: 1\u00a0Octet  \n     \u2022 Value: variable  \n     \u2022 Definition: result code  \n         \u2013 0x00 = success  \n         \u2013 0x01 = failure  \n         \u2013 0x02\u00a0\u2013\u00a00xFF = reserved  \n\n3. Timing and Retransmission Rules  \n   \u2022 After sending CM_AMP_MAP.REQ, the requester starts the TT_amp_map_exchange performance timer (see TP_amp_map_exchange in Table\u00a0A.1).  \n   \u2022 The requested node shall send CM_AMP_MAP.CNF within TT_match_response (V2G3\u2011A09\u2011115).  \n   \u2022 If no valid CM_AMP_MAP.CNF is received within max(TT_match_response), the requester shall retransmit CM_AMP_MAP.REQ (V2G3\u2011A09\u2011112), restarting TT_match_response each time, up to C_EV_match_retry times.  \n   \u2022 If after all retries no valid CM_AMP_MAP.CNF is received, the matching process is considered FAILED.  \n\n4. Standards References  \n   \u2022 HPGP standard: CM_AMP_MAP.CNF is defined as part of the HomePlug Green\u00a0PHY management message entries (MMEs) for amplitude map exchange.  \n   \u2022 V2G3\u2011A09\u2011110: specifies that CM_AMP_MAP.CNF is used to confirm an amplitude map exchange.  \n   \u2022 ISO\u00a015118\u20113 Annex\u00a0A.9.6.2 and Table\u00a0A.9 list the exact content and structure of CM_AMP_MAP.CNF.  \n   \u2022 Figure\u00a0A.8 (Sequence chart of amplitude map exchange) shows the request/confirm exchange flow.  \n\n5. Role in Test Cases  \n   \u2022 Test cases TC_SECC_CMN_VTB_CmAmpMap_003 and others verify correct CM_AMP_MAP.CNF behavior. For example, in TC_SECC_CMN_VTB_CmAmpMap_003 the SUT must not send CM_AMP_MAP.CNF until TT_match_response expires.  \n   \u2022 Some test cases inject an invalid \u2018result\u2019 (e.g. 0xFF) in CM_AMP_MAP.CNF to trigger specific retry or ignore behavior.  \n   \u2022 Test steps check that:  \n     \u2013 CM_AMP_MAP.CNF is sent only in response to valid CM_AMP_MAP.REQ.  \n     \u2013 CM_AMP_MAP.CNF\u2019s ResType field matches expected codes.  \n     \u2013 CM_AMP_MAP.CNF is not sent if the request is invalid, or is delayed until protocols timers expire.",
    "What is D-LINK_ERROR.request?": "Overview  \nD-LINK_ERROR.request is a data\u2011link layer protocol primitive defined in ISO\u00a015118\u20113 (Part\u00a03: Physical and data link layer requirements). It is sent by the High\u2011Level Entity (HLE) to the EVSE\u2019s communication node to indicate the detection of a communication error and to instruct lower layers to terminate the existing data link and restart the matching process via a control pilot transition.\n\n1. Definition and Purpose  \n  \u2022 Protocol primitive: D-LINK_ERROR.request  \n  \u2022 Entity to support: EVSE  \n  \u2022 Originator: High\u2011Level Entity (HLE)  \n  \u2022 Trigger: Loss of communication after a data link was established or explicit error notification from HLE  \n  \u2022 Action:  \n    \u2013 Terminate the current data link  \n    \u2013 Initiate a restart of the matching process by driving the control pilot into state\u00a0E (and F)  \n    \u2013 Invoke D-LINK_READY.indication(no link) to notify higher layers of the link loss  \n\n2. Related Primitives  \n  \u2022 D-LINK_READY.indication  \n    \u2013 Informs higher layers of data\u2011link status (\u201clink established\u201d or \u201cno link\u201d) whenever the link changes.  \n  \u2022 D-LINK_TERMINATE.request  \n    \u2013 Requests lower layers to terminate the data link (without re\u2011matching).  \n  \u2022 D-LINK_PAUSE.request  \n    \u2013 Requests lower layers to enter a power\u2011saving mode while keeping the link in \u201cMatched\u201d state.  \n\n3. Context: Loss of Communication (Clause\u00a07.5)  \n  \u2022 A loss of communication after a data link was established (i.e. after D-LINK_READY.indication(link established)) is handled by higher layers issuing D-LINK_ERROR.request.  \n  \u2022 Upon receipt, the communication node must reset its state machine to \u201cUnmatched\u201d and prepare for a new matching cycle once the control pilot returns to X1 or X2.  \n\n4. EVSE\u2011Side Behavior (Clause\u00a07.5.1)  \n  4.1. Error Handling with 5\u00a0% Control Pilot Duty Cycle (Clause\u00a07.5.1.1)  \n    \u2022 [V2G3-M07-04] If in X1 and receiving D-LINK_ERROR.request, transition: X1 \u2192 E/F \u2192 X1 or X2  \n    \u2022 [V2G3-M07-05] If in X2 and receiving D-LINK_ERROR.request, transition: X2 \u2192 X1 \u2192 E/F \u2192 X1 or X2  \n\n  4.2. Error Handling with Nominal Control Pilot Duty Cycle (Clause\u00a07.5.1.2)  \n    Upon D-LINK_ERROR.request, the EVSE communication node shall choose one of two options:  \n      \u2022 Option\u00a0A (duty\u2011cycle independent behavior)  \n        \u2013 Apply the same transitions as in the 5\u00a0% case ([V2G3-M07-11] referencing Clause\u00a07.5.1.1)  \n      \u2022 Option\u00a0B (no interruption of charging)  \n        \u2013 Stay in X2, leave the logical network within TP_match_leave, and set matching state to \u201cUnmatched\u201d ([V2G3-M07-12])  \n\n5. EV\u2011Side Behavior (Clause\u00a07.5.2)  \n  5.1. With 5\u00a0% Duty Cycle (Clause\u00a07.5.2.1)  \n    \u2022 [V2G3-M07-13] On D-LINK_ERROR.request, change to Bx state, leave the logical network, set matching state to \u201cUnmatched\u201d within TP_match_leave, and await a new matching trigger (X1 or X2).  \n\n  5.2. With Nominal Duty Cycle (Clause\u00a07.5.2.2)  \n    Upon D-LINK_ERROR.request, the EV\u2019s communication node shall choose one of two options:  \n      \u2022 Option\u00a0A (duty\u2011cycle independent)  \n        \u2013 Apply the same behavior as in the 5\u00a0% case ([V2G3-M07-15] referencing Clause\u00a07.5.2.1)  \n      \u2022 Option\u00a0B (no charging interruption)  \n        \u2013 Keep current state, leave the logical network, change matching state to \u201cUnmatched\u201d ([V2G3-M07-16])  \n\n6. Table: D-LINK_ERROR.request Primitive  \n\n  Table\u00a06 \u2014 D-LINK_ERROR.request primitive  \n  +----------------------+----------------+  \n  | Primitive            | D-LINK_ERROR.request  |  \n  +----------------------+----------------+  \n  | Entity to support    | EVSE           |  \n  +----------------------+----------------+  \n\n7. Timing Considerations  \n  \u2022 TP_match_leave: maximum time to leave the logical network (typ. 1\u00a0s)  \n  \u2022 T_step_EF: minimum time to remain in E/F state before returning to X1/X2 (typ. 4\u00a0s)  \n  (See Table\u00a03 \u2014 Timing and constant values for full parameters.)  \n\n8. State Machine Impact  \n  \u2022 Any receipt of D-LINK_ERROR.request resets the internal matching state to \u201cUnmatched.\u201d  \n  \u2022 Control pilot transitions through E/F enforce physical link re\u2011establishment.  \n  \u2022 After the prescribed timing, a new matching process may begin upon detecting CP state X1 or X2.  \n\nIn summary, D-LINK_ERROR.request is the standardized message by which higher layers command the EVSE (or EV) to react to a detected data\u2011link error. It forces a controlled teardown of the physical link, resets the matching state, and triggers the procedures required to re-establish a reliable communication channel.",
    "What is CM_SLAC_PARM.CNF?": "Overview  \nCM_SLAC_PARM.CNF is the unicast confirmation message sent by an unmatched Electric Vehicle Supply Equipment\u2019s (EVSE\u2019s) low\u2011layer communication module in the SLAC (Signal Level Attenuation Characterization) parameter\u2011exchange phase. It is the direct response to the broadcast CM_SLAC_PARM.REQ from the Electric Vehicle (EV) and conveys the parameters that the EVSE will use for the subsequent signal strength measurement and matching process.\n\n1. Functional Description  \n   \u2022 Context: Part of the \u201cMatching EV \u2013 EVSE\u201d process during signal strength measurement. (A.9.1.1)  \n   \u2022 Trigger: Whenever an EV broadcasts CM_SLAC_PARM.REQ, any EVSE in the \u201cUnmatched\u201d state that receives it must reply with CM_SLAC_PARM.CNF. (Text\u00a01, Text\u00a02)  \n   \u2022 Conditions for response ([V2G3\u2011A09\u201103] in A.9.1.1.1):  \n     \u2013 EVSE must detect a valid control pilot connection to an EV.  \n     \u2013 EVSE must be in the \u201cUnmatched\u201d state.  \n     \u2013 EVSE must receive the CM_SLAC_PARM.REQ broadcast.  \n\n2. Message Content (MMEs)  \n   CM_SLAC_PARM.CNF carries the following mandatory fields, as defined in Table\u00a0A.2 (A.9.1.2):  \n   \u2013 M\u2011SOUND_TARGET (6\u00a0octets): 0xFFFFFFFFFFFF \u2013 Indicates that M\u2011Sounds will be sent as an Ethernet broadcast.  \n   \u2013 NUM_SOUNDS (1\u00a0octet): C_EV_match_MNBC \u2013 Number of M\u2011Sounds the EV expects during the SLAC process.  \n   \u2013 Time_Out (1\u00a0octet): 0x06 \u2013 Duration (TT_EVSE_match_MNBC) for which EVSE listens for incoming M\u2011Sounds after CM_START_ATTEN_CHAR.IND.  \n   \u2013 RESP_TYPE (1\u00a0octet): 0x01 \u2013 Fixed value indicating \u201cOther GP station.\u201d  \n   \u2013 FORWARDING_STA (6\u00a0octets): EV Host MAC address \u2013 Destination for SLAC results.  \n   \u2013 APPLICATION_TYPE (1\u00a0octet at octet\u00a015): 0x00 \u2013 Fixed value indicating \u201cPEV\u2011EVSE matching.\u201d  \n   \u2013 SECURITY_TYPE (1\u00a0octet at octet\u00a016): 0x00 \u2013 Fixed value indicating \u201cNo Security.\u201d  \n   \u2013 RunID (8\u00a0octets at octets\u00a017\u201324): Same identifier used by the EV in the CM_SLAC_PARM.REQ to associate this CNF with the correct matching run.  \n\n3. Error Handling and Timing Constraints  \n   \u2022 Ignoring Invalid Content ([V2G3\u2011A09\u201109], A.9.1.3.2): If the EV receives a CM_SLAC_PARM.CNF whose fields deviate from the definitions in Table\u00a0A.2, it must ignore that message. (Text\u00a05)  \n   \u2022 Retransmission on Timeout ([V2G3\u2011A09\u201110], A.9.1.3.2): If no valid CM_SLAC_PARM.CNF arrives within TT_match_response after sending CM_SLAC_PARM.REQ, the EV retransmits the request. This repeats up to C_EV_match_retry times; upon exceeding retries, the matching process is considered FAILED. (Text\u00a04)  \n\n4. Sequence Example (Error\u2011Handling Scenario)  \n   Figure\u00a0A.9 (A.9.8.1) illustrates an example where:  \n   1. EV\u2019s low\u2011layer module sends CM_SLAC_PARM.REQ immediately after plug\u2011in.  \n   2. EVSE\u2019s low\u2011layer module is asleep and cannot answer.  \n   3. EV retries CM_SLAC_PARM.REQ at intervals governed by TT_match_response and TT_matching_rate.  \n   4. Once the EVSE module boots and is ready, it sends CM_SLAC_PARM.CNF, allowing the matching to proceed. (Text\u00a06)  \n\n5. Related Requirements and Tables  \n   \u2013 [V2G3\u2011A09\u201104] (A.9.1.2): Defines that the MMEs for CM_SLAC_PARM.CNF shall be sent as Ethernet unicast messages with the content specified in Table\u00a0A.2. (Text\u00a03)  \n   \u2013 Table\u00a0A.2 (\u201cInvolved MMEs for parameters exchange\u201d): Provides octet positions, field sizes, fixed values, and definitions for each field in CM_SLAC_PARM.CNF.  \n   \u2013 Timers referenced: TT_match_response, TP_EV_SLAC_init, TT_matching_rate, C_EV_match_retry (see A.9.1.3.2 and A.9.8.1 for timing values and behavior).  \n\nIn summary, CM_SLAC_PARM.CNF is the standardized, unicast reply from an \u201cUnmatched\u201d EVSE to the EV\u2019s parameter\u2011exchange request, carrying all necessary fields to establish the SLAC matching parameters under the timing and retry rules of ISO\u00a015118\u20113 Annex\u00a0A.",
    "What is D-LINK_TERMINATE.request?": "Overview  \nThe D-LINK_TERMINATE.request is a protocol primitive defined in ISO\u00a015118\u20113 (V2G3) that allows a higher\u2011layer entity (HLE) to instruct the low\u2011layer communication module\u2014on either the Electric Vehicle (EV) or the Electric Vehicle Supply Equipment (EVSE)\u2014to tear down the existing data\u2011link connection. It is part of the Data Link Control Service Access Point (Clause\u00a012) and the Matching EV\u2013EVSE process (Clause\u00a09).\n\nDefinition and Purpose  \n\u2022 The D-LINK_TERMINATE.request requests the lower layers to terminate the data link.  \n\u2022 It is issued by the HLE when it requires an immediate disconnection, avoiding the several\u2011seconds delay that the low\u2011layer controller (CCo) would otherwise need to detect that the peer has left the network.  \n\u2022 Upon receipt, the communication node must leave the logical network, reset link\u2011specific parameters, and revert to the default \u201cUnmatched\u201d state.\n\nEntities to Support  \n\u2022 EV (Electric Vehicle)  \n\u2022 EVSE (Electric Vehicle Supply Equipment)\n\nBehavior and Requirements  \n1. Reception of D-LINK_TERMINATE.request from HLE shall cause the low\u2011layer communication module to:  \n   \u2013 Leave the logical network within the time specified by TP_match_leave.  \n   \u2013 Reset the Network Membership Key (NMK) and all parameters related to the terminated link to their default values.  \n   \u2013 Change its matching status to \u201cUnmatched.\u201d  \n   \u2013 Follow the \u201cLeaving an AVLN\u201d procedure defined in the HomePlug Green PHY (HPGP) specification.  \n2. This operation ensures a rapid teardown; without it, the logical network controller may need several seconds to infer the peer\u2019s departure.\n\nTiming Parameter  \n\u2022 TP_match_leave: Maximum time to leave the logical network after a terminate request.  \n  \u2013 From Table\u00a03 (Timing and constant values): Max = 1\u00a0s\n\nRelated Primitives  \n\u2022 D-LINK_READY.indication  \n  \u2013 Sent by the low\u2011layer module whenever the link status changes.  \n  \u2013 Values: \u201cno link\u201d or \u201clink established.\u201d  \n  \u2013 After a D-LINK_TERMINATE.request, a D-LINK_READY.indication(no link) notifies the HLE of the disconnection.  \n\u2022 D-LINK_ERROR.request  \n  \u2013 Requests link termination and a restart of the matching process via Control Pilot state\u00a0E.  \n\u2022 D-LINK_PAUSE.request  \n  \u2013 Requests the lower layers to enter a power\u2011saving mode; link remains in the \u201cMatched\u201d state.\n\nReference Tables and Figures  \n\u2022 Table\u00a05 \u2014 D-LINK_TERMINATE.request primitive (V2G3\u2011M12\u201101)  \n  \u2013 Primitive: D-LINK_TERMINATE.request  \n  \u2013 Entity to support: EV, EVSE  \n\u2022 Figure\u00a011 \u2014 Matching state machine (Clause\u00a09.1)  \n  \u2013 Any request from HLE (including D-LINK_TERMINATE.request) or loss of Control Pilot forces a reset to \u201cUnmatched.\u201d  \n\u2022 V2G3\u2011M09\u201117 (Requirement for leave timing)  \n  \u2013 \u201cWith receiving a D-LINK_TERMINATE.request from HLE, the communication node shall leave the logical network within TP_match_leave. All parameters related to the current link shall be set to the default value and shall change to the status \u2018Unmatched\u2019.\u201d",
    "What is D-LINK_READY.indication?": "Overview  \nD-LINK_READY.indication is a protocol primitive used by the low\u2011layer communication module (e.g. the PLC MAC/PHY) to notify the Higher\u2011Layer Entity (HLE) of any change in the status of the data link. It serves two roles:  \n \u2022 Indicating that a data link has been successfully established (\u201clink established\u201d)  \n \u2022 Indicating that no data link is available or that an existing link has been lost (\u201cno link\u201d)  \n\nPrimitive Definition  \n\u2022 Name: D\u2011LINK_READY.indication  \n\u2022 Supported by: EV, EVSE  \n\u2022 Parameter:  \n  \u2013 D\u2011LINKSTATUS: status of the communication link, with two possible values  \n    \u2022 link established  \n    \u2022 no link  \n\nFunction and Usage  \n\n1. Indication on Link Establishment  \n  \u2022 Wake\u2011up (V2G3\u2011M07\u201121): As soon as the lower layers detect a data link after waking from sleep mode, they send D\u2011LINK_READY.indication(link established) to the HLE.  \n  \u2022 Matching completion (Clause\u00a09.1 Overview): Any transition out of the \u201cMatching\u201d state\u2014whether successful or failed\u2014triggers D\u2011LINK_READY.indication to signal the outcome of the data\u2011link setup.  \n  \u2022 Logical network join (V2G3\u2011M09\u201116): When the EV successfully joins the EVSE\u2019s logical network (\u201cMatched\u201d), the communication node issues D\u2011LINK_READY.indication(link established) so the HLE can begin its binding process.  \n  \u2022 AMP MAP exchange timeout (V2G3\u2011A09\u2011117): If neither side initiates a CM_AMP_MAP.REQ within the TT_amp_map_exchange timeout, a D\u2011LINK_READY.indication(link established) is sent, indicating that no further amplitude map exchange will occur and the link is ready.  \n\n2. Indication on Link Loss  \n  \u2022 Loss of communication (V2G3\u2011M07\u201103): If a data link was previously established (and indicated), any later loss of that link causes D\u2011LINK_READY.indication(no link) to be sent to the HLE.  \n  \u2022 Leaving the logical network (V2G3\u2011M09\u201118): When the low\u2011layer communication module exits the logical network, it sends D\u2011LINK_READY.indication(no link).  \n\n3. Timing and Performance Requirement  \n  \u2022 SLAC matching timing (V2G3\u2011A09\u2011120): The interval between completing SLAC_MATCH and issuing D\u2011LINK_READY.indication(link established) must not exceed the timer TP_link_ready_notification.  \n\n4. Behavior Notes  \n  \u2022 The D\u2011LINK_READY.indication is sent on every change in link status, independent of Control Pilot duty\u2011cycle states.  \n  \u2022 Higher layers handle link losses by issuing D\u2011LINK_ERROR.request if recovery or a restart of matching is required.  \n\nRelated Primitives  \n\u2022 D\u2011LINK_TERMINATE.request: requests the lower layers to terminate the data link.  \n\u2022 D\u2011LINK_ERROR.request: requests termination of the link and restart of the matching process via a Control Pilot transition to state E.  \n\u2022 D\u2011LINK_PAUSE.request: requests the lower layers to enter a power\u2011saving mode while retaining the \u201cMatched\u201d status.  \n\nTable 4 \u2014 D\u2011LINK_READY.indication Primitive  \n  Primitive: D\u2011LINK_READY.indication  \n  Entity to support: EV, EVSE  \n  Parameter name: D\u2011LINKSTATUS  \n  Description: Status of communication link:  \n    \u2013 no link  \n    \u2013 link established",
    "What is the difference between Data SAP and Data link control SAP?": "Overview  \nThe Data Link layer in ISO\u00a015118\u20113 exposes two distinct Service Access Points (SAPs) to higher\u2010level entities:  \n\u2022\u00a0Data SAP \u2013 for transporting V2G payloads  \n\u2022\u00a0Data Link Control SAP \u2013 for managing and monitoring the underlying link  \n\nThese two SAPs serve different roles and present different interfaces (primitives and parameters) to the upper layers.\n\n1. Data SAP  \nDefinition  \n\u2022 From clause\u00a03.10 (Terms and definitions): \u201cservice access point that defines the interface between layer\u00a02 and layer\u00a03 for exchange of V2G\u2010related payload.\u201d  \n\u2022 In the convergence architecture, the Data SAP is the same as the ETH\u00a0SAP (Ethernet\u2010II class Service Access Point), provided by the HomePlug Green PHY convergence layer.  \n\nKey Characteristics  \n\u2022 Carries actual ISO\u00a015118 (or IPv6) data packets from the Data Link layer up into Network (layer\u00a03) and above.  \n\u2022 Implements an Ethernet\u2010II\u2013style interface (IEEE\u00a0802.3 with or without LLC/SNAP extensions, VLAN tagging, etc.) toward upper\u2010layer protocols.  \n\u2022 May be referred to simply as \u201cthe interface between the communication technology and layer\u00a03 (e.g., IPv6).\u201d (12.1 Overview)  \n\u2022 No link\u2010management primitives are defined here\u2014this SAP is purely for user\u2010data exchange.  \n\n2. Data Link Control SAP  \nDefinition  \n\u2022 From clause\u00a03.9 (Terms and definitions): \u201cservice access point which defines the interface between the connection coordination module and the low\u2010layer communication technology for managing link status.\u201d  \n\u2022 Located between the connection coordination entity and higher layers, providing control and status information about the data link.  \n\nKey Characteristics  \n\u2022 Conveys link\u2010status events (link up/down) and error conditions to higher layers.  \n\u2022 Provides control functionality to start, stop, pause, or abort the link.  \n\u2022 Defines a set of standard primitives, including:  \n  \u2013 D\u2011LINK_READY.indication (Table\u00a04): informs higher layers about changes in link status (\u201cno link\u201d vs. \u201clink established\u201d).  \n  \u2013 D\u2011LINK_TERMINATE.request (Table\u00a05): requests the lower layers to terminate the data link.  \n  \u2013 D\u2011LINK_ERROR.request (Table\u00a06): requests link termination and restart of the matching process via a control\u2010pilot transition.  \n  \u2013 D\u2011LINK_PAUSE.request (Table\u00a07): requests entry into a power\u2010saving mode while maintaining the \u201cmatched\u201d state.  \n\u2022 Ensures that any loss of communication, detected after a link was established, causes a D\u2011LINK_READY.indication(no link) to higher layers. (7.5 Loss of communication)  \n\n3. Summary of Differences  \n\n| Feature                      | Data SAP                                         | Data Link Control SAP                                    |\n|------------------------------|--------------------------------------------------|-----------------------------------------------------------|\n| Purpose                      | Exchange of V2G payload (user data)              | Link management: status, error reporting, control         |\n| Associated entity            | Convergence layer / ETH\u00a0SAP                      | Connection coordination entity                            |\n| Upper\u2010layer interface        | Network (layer\u00a03) and above (IPv6, ISO\u00a015118\u20112)  | Higher layers requiring link\u2010status and control feedback  |\n| Primitives                   | None defined at the Data SAP itself               | D\u2011LINK_READY.indication, D\u2011LINK_TERMINATE.request, D\u2011LINK_ERROR.request, D\u2011LINK_PAUSE.request |\n| Functionality                | Frame forwarding (Ethernet\u2010style)                 | Link enable/disable, pause, error handling, status events |\n| Location in stack            | Between Data Link and Network layers              | Between Connection Coordination and higher layers         |\n\nIn essence, the Data SAP is the \u201cdata pipe\u201d for ISO\u00a015118 messages, whereas the Data Link Control SAP is the \u201ccontrol channel\u201d that supervises and reports on the health and state of that pipe.",
    "What is CM_ATTEN_CHAR.RSP?": "Overview  \nCM_ATTEN_CHAR.RSP is a protocol message sent by the Electric Vehicle (EV) in the SLAC\u2011based matching process to acknowledge each attenuation\u2010characterization indication (CM_ATTEN_CHAR.IND) received from an Electric Vehicle Supply Equipment (EVSE). Its purpose is to confirm that the EV has received and processed the reported signal\u2010attenuation measurements before proceeding with the SLAC matching procedure.\n\nProtocol Context and Functional Description  \n\u2022 SLAC Matching Process (A.9.2.1)  \n  \u2013 After the EV and EVSE complete the SLAC parameter exchange, the EV triggers signal\u2010strength measurements (CM_START_ATTEN_CHAR.IND and M\u2011SOUNDS).  \n  \u2013 Each EVSE calculates attenuation for different frequency groups and responds with a CM_ATTEN_CHAR.IND containing an ATTEN_PROFILE.  \n  \u2013 The EV must confirm receipt of each CM_ATTEN_CHAR.IND by sending a corresponding CM_ATTEN_CHAR.RSP.  \n\n\u2022 Subsequent Decision Flow (A.9.2.1)  \n  \u2013 Based on the aggregate attenuation values reported, the EV sets its EV_Discovering_Status (EVSE_FOUND, EVSE_POTENTIALLY_FOUND, or EVSE_NOT_FOUND) and continues the protocol accordingly (see A.7.3/A.7.4).  \n\nMessage Structure and Content Validation  \n\u2022 MME Definition  \n  \u2013 The content of CM_ATTEN_CHAR.RSP messages must conform to the Management Message Entity (MME) structure defined in Table\u00a0A.4 of the standard.  \n  \u2013 Fields include (but are not limited to) application type, securityType, sourceAddress, runID, sourceID, respID, and result.  \n\n\u2022 Invalid Content Handling (A.9.1.3.2)  \n  \u2013 If the EVSE receives a CM_ATTEN_CHAR.RSP with any content deviating from the MME definition, it must ignore that message.  \n\nTiming Requirements  \n\u2022 TP_match_sequence  \n  \u2013 CM_ATTEN_CHAR.RSP must be sent within the overall matching sequence timing (TP_match_sequence) defined by the SLAC protocol.  \n\n\u2022 TT_match_response (V2G3\u2011A09\u201137)  \n  \u2013 The EVSE starts a TT_match_response timer upon sending CM_ATTEN_CHAR.IND.  \n  \u2013 If no valid CM_ATTEN_CHAR.RSP arrives before TT_match_response expires, the EVSE shall retransmit CM_ATTEN_CHAR.IND and reset the timer.  \n  \u2013 After a predefined number of retransmissions (C_EV_match_retry), the matching process is declared FAILED.  \n\nTest and Conformance Scenarios  \nSeveral test cases exercise CM_ATTEN_CHAR.RSP behavior under invalid or boundary conditions, for example:  \n\u2022 Delayed Response  \n  \u2013 Verifying that no CM_ATTEN_CHAR.RSP is sent before a specified timer expires.  \n\n\u2022 Invalid Field Values  \n  \u2013 Sending CM_ATTEN_CHAR.RSP with out\u2010of\u2010range or malformed application types, securityType, sourceAddress, runID, sourceID, respID, or result, and checking that the EVSE ignores them.  \n\n\u2022 Correct Attenuation Confirmation  \n  \u2013 Ensuring the EV sends CM_ATTEN_CHAR.RSP with correct runID and attenuation results to allow the EVSE to proceed.  \n\nRelevant Standards and References  \n\u2022 SLAC Protocol (Signal Level Attenuation Characterization, [HPGP])  \n\u2022 ISO\u00a015118\u20113 V2G\u2011SLAC Matching Sequence  \n\u2022 V2G3\u2011A09\u201137: Specifies retransmission behavior for CM_ATTEN_CHAR.IND when no RSP is received  \n\u2022 Table\u00a0A.4 (MME Definitions for CM_ATTEN_CHAR.RSP)  \n\nFigures and tables referenced above (e.g., Table\u00a0A.3 for EV_Discovering_Status thresholds, Table\u00a0A.4 for MME structure) reside in Annex\u00a0A of the standard.",
    "What is CM_VALIDATE.REQ?": "Overview  \nCM_VALIDATE.REQ is a protocol message defined in the ISO\u00a015118 vehicle\u2011to\u2011grid communication standard, used by an Electric Vehicle (EV) to initiate or continue the validation process with Electric Vehicle Supply Equipment (EVSE). It forms the \u201crequest\u201d half of a two\u2011step request\u2011response exchange (CM_VALIDATE.REQ/CM_VALIDATE.CNF) that confirms the EV\u2013EVSE matching decision via control\u2011pilot toggling.\n\nPurpose in the Matching/Validation Process  \n\u2022 After the EV performs SLAC\u2011based signal\u2011strength measurement and determines a potential EVSE (EVSE_FOUND or EVSE_POTENTIALLY_FOUND), it may invoke CM_VALIDATE.REQ to:  \n  \u2013 Step\u00a01: Check the EVSE\u2019s readiness to perform a toggle\u2011based validation.  \n  \u2013 Step\u00a02: Trigger and bound the B\u2011C\u2011B (BCB) toggle sequence on the control pilot line, enabling the EVSE to count toggles and confirm the physical connection.  \n\u2022 The EVSE implementation must receive a valid CM_VALIDATE.REQ to start each validation phase and respond with CM_VALIDATE.CNF.  \n\nRequest\u2011Response Exchanges  \nStep\u00a01 (Request\u2011Response 1)  \n\u2022 CM_VALIDATE.REQ (Unicast)  \n  \u2013 SignalType = 0x00 (fixed)  \n  \u2013 Timer = 0x00 (fixed for first exchange)  \n  \u2013 Result = 0x01 (\u201cready\u201d \u2013 fixed in step\u00a01)  \n\u2022 EVSE reply: CM_VALIDATE.CNF (Unicast)  \n  \u2013 ToggleNum = 0x00 (fixed)  \n  \u2013 Result \u2208 {0x00=Not\u00a0Ready, 0x01=Ready, 0x04=Not\u00a0Required, 0x03=Failure}  \n\nStep\u00a02 (Request\u2011Response 2)  \n\u2022 CM_VALIDATE.REQ (Broadcast)  \n  \u2013 SignalType = 0x00 (fixed)  \n  \u2013 Timer = variable (defines TT_EVSE_vald_toggle duration)  \n  \u2013 Result = 0x01 (\u201cready\u201d \u2013 fixed in step\u00a02)  \n\u2022 EVSE reply: CM_VALIDATE.CNF (Unicast)  \n  \u2013 ToggleNum = number of BC\u2011edges detected  \n  \u2013 Result \u2208 {0x02=Success, 0x03=Failure, etc.}  \n\nMessage Format and MME Definitions  \nThe bit\u2011level fields of CM_VALIDATE.REQ are specified in the MME parameter tables:  \n\u2022 Table\u00a0A.5 (First exchange, unicast)  \n  \u2013 Octet\u00a00: SignalType (1\u00a0Octet)  \n  \u2013 Octet\u00a01: Timer (1\u00a0Octet)  \n  \u2013 Octet\u00a02: Result (1\u00a0Octet)  \n\u2022 Table\u00a0A.6 (Second exchange, broadcast)  \n  \u2013 Same field layout, with Timer now variable and Result fixed to \u201cready.\u201d  \n\nResult Codes and States  \n\u2022 Not\u00a0Ready (0x00) \u2013 EVSE busy; EV may retry step\u00a01.  \n\u2022 Ready (0x01) \u2013 EVSE will perform or continue validation.  \n\u2022 Success (0x02) \u2013 Toggle process completed successfully (step\u00a02 CNF only).  \n\u2022 Failure (0x03) \u2013 Validation unsupported or error.  \n\u2022 Not\u00a0Required (0x04) \u2013 EVSE advises skipping validation.  \n\nTiming and Retry Requirements  \n\u2022 EV (step\u00a01): starts TT_match_response, retries up to C_EV_match_retry if no CM_VALIDATE.CNF.  \n\u2022 EVSE (step\u00a01): starts TT_match_sequence, resends CM_VALIDATE.CNF on new CM_VALIDATE.REQ with Timer=0x00.  \n\u2022 EV (step\u00a02): must send within TP_match_sequence, then start TP_EV_vald_toggle and perform C_EV_vald_nb_toggles toggles.  \n\u2022 EVSE (step\u00a02): on receiving step\u00a02 CM_VALIDATE.REQ, starts TT_EVSE_vald_toggle to count toggles, then replies within TP_match_response.  \n\u2022 If timers expire or invalid content is detected, the validation and matching process is considered failed and may proceed to the next EVSE candidate.  \n\nSequence Chart Reference  \nFigure\u00a0A.5 in Annex\u00a0A.9.3.1 illustrates the two\u2011step CM_VALIDATE.REQ \u2192 CM_VALIDATE.CNF exchanges, including timer start/stop points and transition conditions.  \n\nTesting and Use in Test Cases  \nCM_VALIDATE.REQ is exercised in multiple EVCC and SECC conformance test cases (e.g., TC_EVCC_CMN_VTB_CMVALIDATE_003 through _020, TC_SECC_CMN_VTB_CMVALIDATE_001 through _013), where the Test System sends CM_VALIDATE.REQ messages as part of GoodCase procedures, monitors repetitions, timing, and checks SUT responses for compliance with the ISO\u00a015118 validation protocol.",
    "What is SLAC?": "Overview  \nSLAC (Signal Level Attenuation Characterization) is the low\u2011layer, Power\u2011Line\u2011Communication (PLC) based protocol and process defined in ISO\u00a015118\u20113 and HomePlug\u00a0Green\u00a0PHY for measuring, characterizing, and reporting signal attenuation between a Plug\u2011in Electric Vehicle (PEV) and Electric Vehicle Supply Equipment (EVSE). Its primary purpose is to enable the EV to discover which EVSE it is directly connected to by exchanging dedicated management messages over the PLC link and matching on measured signal levels.\n\n1. Definition  \n\u00a0\u00a0\u2022 SLAC stands for Signal Level Attenuation Characterization.  \n\u00a0\u00a0\u2022 In ISO\u00a015118\u20113, SLAC is specified as the protocol to measure the signal strength of PLC\u2011based communications between HomePlug\u00a0Green\u00a0PHY stations (Text\u00a02).  \n\u00a0\u00a0\u2022 It is implemented in the low\u2011layer communication module of both the EV and the EVSE (Entity Chunks).\n\n2. Functional Description  \n\u00a0\u00a0\u2022 The EV initiates the SLAC process to decide which EVSE is directly connected:  \n\u00a0\u00a0\u00a0\u00a0\u2013 It sends a \u201cstart attenuation characterization\u201d indication (CM_START_ATTEN_CHAR.IND) and then transmits a series of M\u2011Sounds over the PLC link (Related\u00a0Information\u00a040).  \n\u00a0\u00a0\u00a0\u00a0\u2013 Each EVSE that hears these M\u2011Sounds measures the signal attenuation on its receive path and reports back to the EV using CM_ATTEN_CHAR.IND messages (Text\u00a03, Related\u00a0Information\u00a040).  \n\u00a0\u00a0\u00a0\u00a0\u2013 Upon receiving each CM_ATTEN_CHAR.IND, the EV replies with a CM_ATTEN_CHAR.RSP to acknowledge (Related\u00a0Information\u00a040).  \n\u00a0\u00a0\u2022 The EV computes an average attenuation per carrier group (Average_Attenuation) to classify the EVSE as \u201cEVSE_FOUND,\u201d \u201cEVSE_POTENTIALLY_FOUND,\u201d or \u201cEVSE_NOT_FOUND\u201d (Related\u00a0Information\u00a050\u201352).\n\n3. Protocol Messages and MMEs  \n\u00a0\u00a0\u2022 SLAC uses a set of Management Message Entries (MMEs) defined in Figure\u00a0A.1 of ISO\u00a015118\u20113; their parameters appear in Table\u00a0A.4 (Related\u00a0Information\u00a06,\u00a064\u201365).  \n\u00a0\u00a0\u2022 Key MMEs include:  \n\u00a0\u00a0\u00a0\u00a0\u2013 CM_START_ATTEN_CHAR.IND (broadcast) to start attenuation characterization.  \n\u00a0\u00a0\u00a0\u00a0\u2013 CM_MNBC_SOUND.IND (broadcast) carrying the M\u2011Sounds.  \n\u00a0\u00a0\u00a0\u00a0\u2013 CM_ATTEN_CHAR.IND (unicast) conveying per\u2011group attenuation measurements.  \n\u00a0\u00a0\u00a0\u00a0\u2013 CM_ATTEN_CHAR.RSP (unicast) acknowledging each attenuation indication.  \n\u00a0\u00a0\u2022 Ethernet destination MAC may be set to broadcast or unicast as defined in Table\u00a0A.4 (Related\u00a0Information\u00a07,\u00a058).\n\n4. Measurement and Matching Process  \n\u00a0\u00a0\u2022 A reference power spectral density (PSD) of \u201350\u00a0dBm/Hz is used for SLAC measurements (Figure\u00a0A.11, Related\u00a0Information\u00a077).  \n\u00a0\u00a0\u2022 Each EVSE corrects its raw measured attenuation by adding back its own receive\u2011path insertion loss (AttnRxEVSE) before reporting a final per\u2011carrier\u2011group attenuation (Figure\u00a0A.11, Related\u00a0Information\u00a074).  \n\u00a0\u00a0\u2022 The EV then computes an arithmetic or weighted mean of all carrier\u2011group attenuations (Related\u00a0Information\u00a045) to decide which EVSE is directly coupled.\n\n5. Compliance Requirements  \n\u00a0\u00a0\u2022 [V2G3\u2011A09\u201123] mandates that the low\u2011layer communication module use the MMEs and parameter definitions in Figure\u00a0A.1 and Table\u00a0A.4 (Text\u00a06).  \n\u00a0\u00a0\u2022 [V2G3\u2011A09\u201124] requires that the Ethernet Destination MAC field be set to broadcast or unicast as defined in Table\u00a0A.4 (Text\u00a07).  \n\u00a0\u00a0\u2022 The SLAC measurement method shall comply with the HomePlug\u00a0Green\u00a0PHY (HPGP) specification (Text\u00a04, Related\u00a0Information\u00a041).\n\n6. Role in EV\u2013EVSE Matching  \n\u00a0\u00a0\u2022 SLAC is the underpinning mechanism by which an EV determines which EVSE socket\u2011outlet it is physically connected to.  \n\u00a0\u00a0\u2022 By measuring and comparing signal attenuation across frequency groups, SLAC enables robust PEV\u2013EVSE matching before higher\u2011level charging protocols commence (Text\u00a03).\n\nFigures and Tables  \n\u00a0\u00a0\u2022 Figure A.1 \u2013 Sequence chart of SLAC message exchange (MMEs)  \n\u00a0\u00a0\u2022 Figure A.11 \u2013 HomePlug Green\u00a0PHY transmission path example with SLAC\u2011relevant attenuations and calculations  \n\u00a0\u00a0\u2022 Table A.1 \u2013 Timing and constant values for low\u2011layer communication modules  \n\u00a0\u00a0\u2022 Table A.4 \u2013 MME parameter definitions for SLAC  \n\nIn summary, SLAC is the standardized PLC\u2011based protocol in ISO\u00a015118\u20113 and HomePlug\u00a0Green\u00a0PHY that measures, characterizes, and reports signal attenuation to facilitate reliable discovery and matching between PEVs and EVSEs. It operates entirely within the low\u2011layer communication module and uses dedicated MMEs to exchange attenuation data and matching decisions.",
    "What is the difference between basic signaling and high-level communication?": "Overview  \nHigh-level communication and basic signalling are two layers of the communication system defined in the V2G3 standards for electric vehicle charging. Basic signalling provides the foundational exchange of EV and EVSE status via the control pilot interface, while high-level communication (HLC) adds a protocol-based bidirectional data link for advanced features and vehicle\u2011to\u2011grid (V2G) operations.\n\nBasic Signalling  \n\u2022 Definition (Clause 6.2.1)  \n  \u2013 Governed by IEC\u201161851\u20111 (\u201c[IEC\u20111]\u201d), Annex A for timings.  \n  \u2013 Uses the control pilot line to convey:  \n    \u2022 EV-related information via pilot voltage levels/states.  \n    \u2022 EVSE-related information via the duty cycle of the pilot signal.  \n  \u2013 Mandatory for all charging processes, regardless of HLC presence (\u201cbidirectional signalling according to [IEC\u20111]\u201d).  \n\u2022 Purpose  \n  \u2013 Establishes and manages basic charge enable/disable and current\u2011limit signaling.  \n\nHigh\u2011Level Communication (HLC)  \n\u2022 Definition (Clause 6.2.2, [V2G3\u2011M06\u201102])  \n  \u2013 Operates in addition to basic signalling to enable true bidirectional data exchange and additional services.  \n  \u2013 Follows the ISO 15118\u20112 protocol (\u201c[ISO\u20112]\u201d) for message structure and timing.  \n\u2022 Sequence and Phases  \n  1. Data link setup  \n  2. V2G setup  \n  3. V2G charging loop  \n\u2022 Grid Information Handling  \n  \u2013 During the V2G charging loop ([V2G3\u2011M06\u201103]), PWM duty cycle on the pilot must remain constant.  \n  \u2013 Any dynamic grid limitations are communicated via HLC messages.  \n\u2022 Fallback Behavior  \n  \u2013 If HLC fails and basic charging is used as backup, the pilot duty cycle may change to reflect grid updates per IEC\u20111.  \n\nKey Differences  \n1. Protocol vs. Signal\u2011Level  \n   \u2022 Basic signalling: purely electrical signalling over the control pilot (IEC\u20111).  \n   \u2022 HLC: packet-based data communication over power line communication (ISO\u20112).  \n2. Functionality  \n   \u2022 Basic signalling: conveys only charging enablement and current\u2011limit information.  \n   \u2022 HLC: supports authentication, metering data exchange, dynamic grid constraints, and full V2G control.  \n3. Timing and Duty Cycle  \n   \u2022 Basic signalling: duty cycle can change to reflect grid conditions whenever HLC is not in use.  \n   \u2022 HLC: duty cycle remains fixed during V2G charging loop; dynamic updates are sent in HLC messages.  \n4. Feature Set  \n   \u2022 Basic signalling: minimal, unidirectional/electrical only.  \n   \u2022 HLC: bidirectional, rich data exchange, advanced features (e.g., smart charging, vehicle return to grid).",
    "What is CM_SET_KEY.CNF?": "Overview  \nCM_SET_KEY.CNF is a Management Message Entity (MME) protocol message used by the low\u2011layer communication module in an electric\u2011vehicle\u2011to\u2011grid (V2G) context to confirm that network parameters have been set. It follows a CM_SET_KEY.REQ request and returns a positive or negative response indicating whether the new logical\u2011network parameters have been successfully applied.\n\n1. Purpose and Context  \n   \u2022 After the Signal Level Attenuation Characterization (SLAC) process completes and a CM_SLAC_MATCH.CNF is received, the Electric Vehicle (EV) or Electric Vehicle Supply Equipment (EVSE) configures its low\u2011layer communication module for the identified logical network.  \n   \u2022 The configuration exchange uses two MMEs:  \n     \u2013 CM_SET_KEY.REQ: carries the new network parameter values (e.g., NMK, NID, CCo\u00a0Capability) to the local communication node.  \n     \u2013 CM_SET_KEY.CNF: confirms whether the parameters sent in CM_SET_KEY.REQ have been applied.  \n   \u2022 This exchange reduces the broadcast domain to the matching EV\u2013EVSE pair and readies them for nominal data exchange.\n\n2. Message Flow  \n   a. EVSE Side  \n      \u2013 The EVSE may send a CM_SLAC_MATCH.CNF at any time before\u2014or after\u2014configuring its low\u2011layer module.  \n      \u2013 It then processes any CM_SET_KEY.REQ from the EV and issues a CM_SET_KEY.CNF.  \n   b. EV Side  \n      \u2013 Upon receiving CM_SLAC_MATCH.CNF, the EV sends CM_SET_KEY.REQ with the network parameters (per\u00a0[V2G3\u2011A09\u2011101]).  \n      \u2013 The EV awaits CM_SET_KEY.CNF to confirm successful configuration.  \n      \u2013 If no CM_SET_KEY.CNF arrives within the maximum join time (TT_match_join), the EV considers the matching process failed ([V2G3\u2011A09\u2011102]).\n\n3. Handling Negative or Missing CM_SET_KEY.CNF  \n   \u2022 The standard does not mandate a specific error\u2011recovery procedure. Implementers decide how to react to:  \n     \u2013 A negative (failure) response in CM_SET_KEY.CNF.  \n     \u2013 A missing CM_SET_KEY.CNF (timeout or loss).  \n   \u2022 Possible actions include retrying configuration, aborting the logical\u2011network join, or reporting an error to higher layers.\n\n4. Related Primitives and Messages  \n   \u2013 CM_SLAC_MATCH.CNF: indicates successful SLAC\u2011based matching of EV and EVSE.  \n   \u2013 CM_SET_KEY.REQ: unicast request to set network parameters (fields defined in Table\u00a0A.8).  \n   \u2013 CM_SET_KEY.CNF: unicast confirmation of parameter setting.  \n\n5. Configuration Parameters (per Table\u00a0A.8 for CM_SET_KEY.REQ)  \n   Field          | Octet No. | Size (octets) | Value / Definition  \n   -------------- | --------- | ------------- | --------------------------------  \n   Key Type       | 0         | 1             | 0x01 (\u201cNMK\u201d)  \n   My Nonce       | 1\u20134       | 4             | 0x00000000 (fixed, no encryption)  \n   Your Nonce     | 5\u20138       | 4             | 0x00000000 (fixed)  \n   PID            | 9         | 1             | 0x04 (\u201cHLE protocol\u201d)  \n   PRN            | 10\u201311     | 2             | 0x0000  \n   PMN            | 12        | 1             | 0x00  \n   CCo Capability | 13        | 1             | variable, per station role  \n   NID            | 14\u201320     | 7             | 54\u00a0LSBs contain the NID; 2\u00a0MSBs=0b00  \n   NewEKS         | 21        | 1             | 0x01 (\u201cNMK\u201d)  \n   NewKey         | 22\u201337     | 16            | the NMK value  \n\n   (CM_SET_KEY.CNF carries the corresponding status code confirming these settings.)\n\n6. Sequence Reference  \n   \u2022 Figure A.7 (\u201cSequence chart of joining the logical network\u201d) shows where CM_SET_KEY.REQ and CM_SET_KEY.CNF fit into the overall join\u2011network timing and error\u2011handling flow.",
    "What is CM_ATTEN_PROFILE.IND?": "Overview  \nCM_ATTEN_PROFILE.IND is a low\u2011layer communication message defined in the SLAC\u2011based signal strength measurement and matching procedure of ISO\u00a015118\u20113 (HomePlug\u00a0Green\u00a0PHY on the control\u2011pilot line).  It carries the per\u2011frequency\u2011group attenuation measurements that an EVSE makes in response to individual M\u2011SOUND sequences sent by an EV.  These raw attenuation profiles are then used to compute the aggregated attenuation report (in a subsequent CM_ATTEN_CHAR.IND) that the EV consumes to select the directly connected EVSE.\n\nFunctional Context and Message Flow  \n\u2022\u00a0Matching EV\u2013EVSE process (Clause\u00a0A.9.2.1)  \n\u2003\u2013 After parameter exchange, the EV sends CM_START_ATTEN_CHAR.IND messages and then emits a defined number of M\u2011SOUNDS (C_EV_match_MNBC).  \n\u2003\u2013 For each M\u2011SOUND, every potential EVSE node performs a SLAC measurement and responds with one CM_ATTEN_PROFILE.IND containing its instantaneous ATTEN_PROFILE.  \n\u2003\u2013 Once all M\u2011SOUNDS have been processed\u2014or a timeout (TT_EVSE_match_MNBC) expires\u2014the EVSE calculates an average attenuation profile and issues a single CM_ATTEN_CHAR.IND to the EV (each such message is acknowledged by a CM_ATTEN_CHAR.RSP).\n\nMessage Contents  \n\u2022\u00a0ATTEN_PROFILE  \n\u2003\u2013 An array (per carrier\u2011group) of measured attenuation values, expressed in dB, observed at the EVSE\u2019s Green\u00a0PHY modem input during a single M\u2011SOUND.  \n\u2022\u00a0NUM_SOUNDS (implied)  \n\u2003\u2013 The count of M\u2011SOUNDS represented.  If the corresponding CM_ATTEN_CHAR.IND ultimately carries NUM_SOUNDS\u00a0=\u00a00, then the ATTEN_PROFILE has no significance and all related messages (including CM_ATTEN_PROFILE.IND instances) must be ignored.\n\nAttenuation Correction and Averaging  \n\u2022\u00a0Correction for EVSE Receive\u2011Path Loss (AttnRx\u2011EVSE)  \n\u2003\u2013 Each CM_ATTEN_PROFILE.IND report is based on the raw PSD measured at the EVSE modem input.  Because the EVSE does not know its internal receive\u2011path insertion loss, it must correct every measured value by adding back AttnRx\u2011EVSE (e.g. ~3\u00a0dB in the example of Figure\u00a0A.11) before packaging the ATTEN_PROFILE.  This correction is mandated by Clause\u00a0A.9.4.1 (\u201cCalibration and correction\u201d).  \n\u2022\u00a0Averaging Method  \n\u2003\u2013 The ATTEN_PROFILE field in the final CM_ATTEN_CHAR.IND is computed as the arithmetic mean of all ATTEN_PROFILE arrays carried in the preceding CM_ATTEN_PROFILE.IND messages (one per M\u2011SOUND), after each has been corrected for AttnRx\u2011EVSE.  A weighted average is permitted if\u2014and only if\u2014the sum of all weights equals one.\n\nUsage in EVSE Matching Decision  \n\u2022\u00a0Once the EV receives the CM_ATTEN_CHAR.IND (which contains the averaged ATTEN_PROFILE), it calculates an overall Average_Attenuation (per Table\u00a0A.3) and sets its EV_Discovering_Status to one of:  \n\u2003\u2013 EVSE_FOUND (direct link)  \n\u2003\u2013 EVSE_POTENTIALLY_FOUND (ambiguous)  \n\u2003\u2013 EVSE_NOT_FOUND (no direct link)  \n\u2022\u00a0The raw CM_ATTEN_PROFILE.IND messages supply the input data from which the CM_ATTEN_CHAR.IND report is built, but they are not consumed directly by the EV.\n\nTiming Considerations  \n\u2022\u00a0TT_EVSE_avg_atten_calc (typical 100\u00a0ms)  \n\u2003\u2013 Defines the maximum time an EVSE has to calculate and send out CM_ATTEN_CHAR.IND after the last M\u2011SOUND or after TT_EVSE_match_MNBC expires. CM_ATTEN_PROFILE.IND messages must arrive before this timer expires.  \n\u2022\u00a0C_EV_match_MNBC (typical 10)  \n\u2003\u2013 Specifies how many M\u2011SOUND bursts the EV transmits to gather attenuation profiles.  The EV may choose to require fewer or more M\u2011SOUNDS for its quality\u2011of\u2011service decision.\n\nTest\u2011Case References  \n\u2022\u00a0TC_SECC_CMN_VTB_CmValidate_007 (Table\u00a072)  \n\u2022\u00a0TC_SECC_CMN_VTB_CmValidate_010 (Table\u00a075)  \n\u2022\u00a0TC_SECC_CMN_VTB_CmValidate_004 (Table\u00a069)",
    "What is HPGP?": "Overview  \nHPGP (HomePlug Green PHY) is a low\u2011power, cost\u2011effective power\u2011line communication (PLC) standard designed for energy\u2011efficient networking over existing electrical wiring. Optimized for smart\u2011grid and electric\u2011vehicle applications, HPGP defines both the MAC and PHY layers, specifies network management services and primitives, and supports mechanisms for signal\u2011level characterization and coexistence with other PLC technologies.\n\nProtocol Architecture and Layers  \n\u2022 Physical Layer (PHY)  \n  \u2013 Uses OFDM\u2011based PLC signaling in the 1.8\u00a0MHz\u201330\u00a0MHz band with notched carriers to avoid interference  \n  \u2013 Defines coupling circuits (inductors, damping resistors, coupling capacitors) for injection onto control pilot or earth lines  \n  \u2013 Specifies Power Spectral Density (PSD) requirements and voltage limits at measurement points (VCP_EVSE, VCP_EV)  \n\u2022 Data Link Layer (MAC)  \n  \u2013 Provides node\u2011to\u2011node framing, error detection/correction, and service access points (Control SAP, ETH SAP)  \n  \u2013 Manages Application Virtual Local Networks (AVLNs) under a Central Coordinator Manager  \n  \u2013 Implements Message Management Entities (MMEs) such as CM_SLAC_MATCH, CM_AMP_MAP.REQ/CNF  \n\nKey Features  \n\u2022 Low\u2011Power Operation  \n  \u2013 Prescaler and power\u2011adjustment primitives limit transmission power to meet regulatory and coexistence constraints  \n\u2022 Signal Level Attenuation Characterization (SLAC)  \n  \u2013 Protocol procedures to measure and manage path attenuation for matching EVSE and EV modems  \n\u2022 Coexistence Mechanism (ISP)  \n  \u2013 Implements the IEEE\u2011defined Intersystem Protocol (ISP) to allow non\u2011interoperable PLC technologies to share the power line  \n\u2022 Service Primitives and Control Interfaces  \n  \u2013 Defines APCM_SET_CCO.REQ, ATTEN_PROFILE fields, and other primitives for network configuration and attenuation mapping  \n\nStandardization and Versioning  \n\u2022 HomePlug Green PHY Specification, Release Version\u00a01.1.1  \n  \u2013 Normative reference for HPGP signal coupling, carrier usage, and component values  \n  \u2013 Includes annexes covering control\u2011pilot injection, EMC/ESD protection, and test\u2011case definitions (e.g., TTCN\u20113 representations)  \n\u2022 Referenced by ISO\u00a015118  \n  \u2013 Mandated for EVSE\u2013EV communication in AC\u2011charging modes under the vehicle\u2011to\u2011grid interface standard (ISO\u00a015118\u20113)  \n\u2022 Aligned with IEC\u00a061851\u20111 (\u201cIEC\u20111\u201d)  \n  \u2013 Uses control pilot duty cycles/states and coupling component definitions from Annex\u00a0A of IEC\u20111  \n\nPrimary Applications  \n\u2022 Electric Vehicle Supply Equipment (EVSE) \u2194 Electric Vehicle (EV) Communication  \n  \u2013 Injects HPGP signals in parallel onto the control pilot line (and Protective Earth) to carry bidirectional data without disrupting the 1\u00a0kHz pilot waveform  \n\u2022 Smart Grid and Energy Management  \n  \u2013 Enables home\u2011automation devices, meters, and grid nodes to exchange data over existing wiring  \n\u2022 Home Networking (low\u2011data\u2011rate scenarios)  \n  \u2013 Provides a lightweight complement to higher\u2011speed HomePlug AV for energy\u2011focused use cases  \n\nProtocol Primitives and Messages  \n\u2022 CM_AMP_MAP.REQ / CM_AMP_MAP.CNF  \n  \u2013 Exchange amplitude\u2011map data to adjust carrier power levels  \n\u2022 CM_SLAC_MATCH\u00a0MMEs  \n  \u2013 Carry SLAC matching messages used during the network\u2010formation process between EVSE and EV  \n\u2022 APCM_SET_CCO.REQ  \n  \u2013 Configures or changes the Central Coordinator Operator (CCo) mode  \n\u2022 ATTEN_PROFILE  \n  \u2013 Field format defining carrier\u2011by\u2011carrier attenuation profiles  \n\nCoexistence and Interoperability  \n\u2022 ISP (Intersystem Protocol)  \n  \u2013 As defined by IEEE, ensures HPGP coexists on the same wiring with other PLC standards (e.g., HomePlug AV)  \n\u2022 Notched Carriers  \n  \u2013 Specific frequency bands are selectively silenced (\u201cnotched\u201d) to avoid conflict with amateur radio or other services  \n\u2022 Eth SAP Coverage  \n  \u2013 HPGP fully covers the Ethernet II\u2011class Service Access Point, bridging HomePlug networks to standard Ethernet interfaces  \n\nThrough its focused design\u2014combining controlled low\u2011frequency coupling, carefully partitioned capacitive loads, tight PSD limits, and robust protocol layers\u2014HPGP delivers an energy\u2011optimized PLC solution for the next generation of electric\u2011vehicle charging and smart\u2011grid deployments.",
    "What is CCo?": "Overview  \nThe CCo, or Central Coordinator (also referred to as Central Communication Controller), is the primary control entity in a HomePlug Green\u00a0PHY logical network as defined in ISO\u00a015118\u20113. It manages and coordinates network operations between an Electric Vehicle (EV) and Electric Vehicle Supply Equipment (EVSE).\n\n1. Symbol and Abbreviation  \n\u2022\u00a0CCo: Central Coordinator  \n\n2. Definition and Role  \n\u2022\u00a0A device or system responsible for managing and coordinating a HomePlug Green\u00a0PHY logical network (ISO\u00a015118\u20113, Clause\u00a03.2).  \n\u2022\u00a0Also termed the Central Communication Controller, it oversees network membership and link status.  \n\n3. Functional Description  \n\u2022\u00a0Network Management  \n\u2003\u2013\u00a0Detects when a link is established or ends, thereby controlling the TT_MATCH_JOIN timer.  \n\u2003\u2013\u00a0Monitors the network for EV departures.  \n\u2022\u00a0Control Interface  \n\u2003\u2013\u00a0Responds to higher\u2011layer requests to terminate links, reflecting its role as the network manager.  \n\u2022\u00a0Message Handling  \n\u2003\u2013\u00a0Likely uses Management Message Entries (MMEs) to coordinate node join/leave procedures and parameter exchanges.  \n\n4. Configuration Requirements  \n\u2022\u00a0On the EV side (Requirement V2G3\u2011A06\u201102):  \n\u2003\u2013\u00a0The low\u2011layer communication module shall be configured never to assume the CCo role.  \n\u2022\u00a0On the EVSE side (Requirement V2G3\u2011A06\u201103):  \n\u2003\u2013\u00a0The low\u2011layer communication module shall be configured to always act as the CCo.  \n\u2022\u00a0These configurations must be completed prior to entering the SLAC matching process.  \n\n5. Related Primitives  \n\u2022\u00a0APCM_SET_CCo.REQ (Control SAP Service, HomePlug Green\u00a0PHY):  \n\u2003\u2013\u00a0Primitive used to set the low\u2011layer module into CCo mode on the EVSE side.  \n\n6. References  \n\u2022\u00a0ISO\u00a015118\u20113, Clause\u00a03.2 \u2013 Definition of Central Coordinator.  \n\u2022\u00a0ISO\u00a015118\u20113, A.6.5.2 \u2013 Functional description and V2G3\u2011A06\u201102/A06\u201103 configuration requirements.  \n\u2022\u00a0ISO\u00a015118\u20113, Symbols and Abbreviated Terms \u2013 \u201cCCo Central Coordinator.\u201d",
    "What is CM_MNBC_SOUND.IND?": "Overview  \nCM_MNBC_SOUND.IND is a low\u2011layer protocol message used in the SLAC (Signal Level Attenuation Characterization) process of ISO\u00a015118\u20113. It represents the \u201cM\u2011SOUND\u201d broadcasts sent by the Electric Vehicle (EV) during the signal strength measurement phase of PEV\u2011EVSE matching.  \n\n1. Message Definition  \n   \u2022 APPLICATION_TYPE  \n     \u2013 Indicates the application context. For CM_MNBC_SOUND.IND, this is fixed to 0x00 (\u201cPEV\u2011EVSE Matching\u201d).  \n   \u2022 SECURITY_TYPE  \n     \u2013 Indicates the security level. For CM_MNBC_SOUND.IND, this is fixed to 0x00 (\u201cNo Security\u201d).  \n   \u2022 RUNID  \n     \u2013 A unique identifier chosen by the EV in CM_SLAC_PARM.REQ. CM_MNBC_SOUND.IND messages must carry the same RunID.  \n   \u2022 cnt (Counter)  \n     \u2013 A decrementing field initialized to C_EV_match_MNBC. With each transmission of CM_MNBC_SOUND.IND, cnt is decremented by one.  \n\n2. Operational Sequence in SLAC Process  \n   \u2013 After the parameter exchange, the EV initiates signal strength measurement by sending CM_START_ATTEN_CHAR.IND messages C_EV_start_atten_char_inds times.  \n   \u2013 Once CM_START_ATTEN_CHAR.IND transmissions complete, the EV waits TP_EV_batch_msg_interval (20\u00a0ms\u00a0\u2264\u00a0interval\u00a0\u2264\u00a050\u00a0ms) and begins sending CM_MNBC_SOUND.IND messages.  \n   \u2013 The EV transmits CM_MNBC_SOUND.IND exactly C_EV_match_MNBC times (typical value: 10). Each message carries the current cnt, which is decremented after transmission.  \n\n3. Timing and Quantity Parameters  \n   \u2013 C_EV_match_MNBC (Number of M\u2011SOUNDs): typical value = 10.  \n   \u2013 TP_EV_batch_msg_interval (Inter\u2011message delay): min = 20\u00a0ms, max = 50\u00a0ms.  \n   \u2013 Requirements V2G3\u2011A09\u201128 and V2G3\u2011A09\u201129 specify the use and timing constraints of the CM_MNBC_SOUND.IND sequence.  \n   \u2013 V2G3\u2011A06\u201105 mandates that the EV\u2019s low\u2011layer communication module must not generate any response to incoming CM_MNBC_SOUND.IND messages.  \n\n4. Role in Attenuation Characterization Test Cases  \n   \u2013 In attenuation characterization test cases (e.g., TC_EVCC_AC_VTB_ATTENUATIONCHARACTERIZATION_001), CM_MNBC_SOUND.IND messages serve as the M\u2011SOUND signals used by EVSEs to compute signal attenuation.  \n   \u2013 EVSEs measure the received M\u2011SOUNDs and reply with CM_ATTEN_CHAR.IND messages containing attenuation profiles.  \n   \u2013 The EV processes those CM_ATTEN_CHAR.IND responses to determine EVSE proximity and select the correct charging station.  \n\n5. Standards Context  \n   \u2013 CM_MNBC_SOUND.IND is defined in Annex\u00a0A of ISO\u00a015118\u20113 (\u201cPhysical and Data Link Layer Requirements\u201d).  \n   \u2013 It forms part of the SLAC\u2011defined sequence (A.9.2 Signal Strength Measurement), aligning with the HomePlug Green PHY message set.  \n   \u2013 Compliance with CM_MNBC_SOUND.IND behavior is required for any EV or EVSE implementing PEV\u2011EVSE matching via SLAC.",
    "What is the system architecture of Vehicle-to-Grid communication?": "Overview  \nVehicle-to-Grid (V2G) communication is architected as a layered system aligned with the ISO/IEC OSI reference model.  It separates the low\u2011level physical and data link concerns from higher\u2011level network, transport, session, presentation and application functionality.  This modular design is defined across three parts of the ISO\u00a015118 series and uses a standardized service primitive interface to ensure interoperability between the layers.\n\nSystem Architecture  \n\n1. ISO\u00a015118\u20113: Physical and Data Link Layers  \n   \u2022 Covers OSI Layer\u00a01 (Physical) and Layer\u00a02 (Data Link).  \n   \u2022 Specifies the electrical and signaling requirements (e.g. Power Line Communication, PLC), MAC addressing, framing, error detection/correction, and timing for AC and DC charging use\u2011cases.  \n   \u2022 Defines how raw bitstreams and data frames are exchanged between Electric Vehicles (EVs) and Electric Vehicle Supply Equipment (EVSE).\n\n2. V2G Standardized Service Primitive Interface  \n   \u2022 Sits between ISO\u00a015118\u20113 and ISO\u00a015118\u20112.  \n   \u2022 Provides a well\u2011defined boundary through which higher\u2011layer protocols request and control low\u2011layer services (e.g. connection setup, data requests, acknowledgements).  \n   \u2022 Ensures hardware\u2011independent interaction so that different physical or MAC implementations can support the same network/application protocols.\n\n3. ISO\u00a015118\u20112: Network through Application Layers  \n   \u2022 Covers OSI Layers\u00a03 (Network),\u00a04 (Transport),\u00a05 (Session),\u00a06 (Presentation),\u00a07 (Application).  \n   \u2022 Specifies IP\u2011level packet handling, reliable/unreliable transport (e.g. TCP/UDP), session management (charging session establishment/termination), data encoding (e.g. XML/EXI), security, authentication, and the application messages for contract negotiation, charging schedules, pricing, and bidirectional energy flow.\n\n4. ISO\u00a015118\u20111: General Information and Use\u2011Case Definitions  \n   \u2022 Provides the overall scope, use\u2011case scenarios, terminology, and goals for V2G communication.  \n   \u2022 Does not map to specific OSI layers but underpins both ISO\u00a015118\u20112 and ISO\u00a015118\u20113 by describing the functional requirements and business context.\n\nFigure 1: Alignment with the OSI Reference Model  \n\u2022 The bottom box (ISO\u00a015118\u20113) contains OSI Layers\u00a01\u00a0(Physical) and\u00a02\u00a0(Data Link).  \n\u2022 A horizontal band (\u201cV2G standardized service primitive interface\u201d) marks the handover to higher layers.  \n\u2022 The top box (\u201cVehicle\u2011to\u2011Grid communication\u201d) contains ISO\u00a015118\u20111 (concepts/use\u2011cases) and ISO\u00a015118\u20112 (Layers\u00a03\u20137).  \n\u2022 The diagram emphasizes separation of concerns, modularity, and interoperability across different vendors\u2019 EVs and EVSEs.\n\nKey Points  \n\u2013 Layers\u00a01 &\u00a02 (ISO\u00a015118\u20113) ensure reliable low\u2011layer connectivity via PLC and MAC sublayer.  \n\u2013 The service primitive interface decouples low\u2011layer implementation from higher\u2011layer protocol logic.  \n\u2013 Layers\u00a03\u20137 (ISO\u00a015118\u20112) manage networking, session control, data encoding, security, and application\u2011level exchanges.  \n\u2013 ISO\u00a015118\u20111 provides high\u2011level guidance on use\u2011cases (e.g. AC/DC charging, plug\u2011and\u2011charge).  \n\u2013 Unless otherwise stated, requirements in ISO\u00a015118\u20113 apply equally to AC and DC V2G scenarios.",
    "What is D-LINK_PAUSE.request?": "Overview  \nThe D\u2011LINK_PAUSE.request is a layer\u20112 service primitive defined in ISO\u00a015118\u20113 (clause 12.3, Table\u00a07) that instructs the lower communication layers (the PLC physical and data\u2011link sublayers) to enter a power\u2011saving (sleep) mode while retaining the logical \u201cMatched\u201d state of the link.\n\nPrimitive Definition  \n\u00a0\u00a0Primitive:\u00a0D\u2011LINK_PAUSE.request  \n\u00a0\u00a0Entity to support:\u00a0EV, EVSE  \n\u00a0\u00a0Function:  \n\u00a0\u00a0\u00a0\u00a0\u2022 Requests lower layers to pause data\u2011link communication and transition into sleep/power\u2011saving mode  \n\u00a0\u00a0\u00a0\u00a0\u2022 Keeps the link state at \u201cMatched\u201d during the sleep phase  \n\nSpecification References  \n\u00a0\u00a0\u2022 [V2G3\u2011M12\u201101] (clause\u00a012.3 \u201cData link control SAP to layer\u00a03\u201d): Table\u00a07 \u2014 D\u2011LINK_PAUSE.request primitive  \n\u00a0\u00a0\u2022 [V2G3\u2011M07\u201119] (7.6.1 \u201cEntering the sleep mode\u201d): EV behavior on receipt of D\u2011LINK_PAUSE.request  \n\u00a0\u00a0\u2022 [V2G3\u2011M07\u201120] (7.6.1 \u201cEntering the sleep mode\u201d): EVSE behavior on receipt of D\u2011LINK_PAUSE.request  \n\nOperational Behavior  \n\n1. General Effects  \n\u00a0\u00a0\u2013 Triggers a transition of the low\u2011layer communication stack into a sleep or low\u2011power mode.  \n\u00a0\u00a0\u2013 The link remains logically \u201cMatched,\u201d so no new matching process is required upon wake\u2011up.  \n\u00a0\u00a0\u2013 The current logical network parameter set must be stored before sleeping to allow seamless resumption.\n\n2. EV\u2011Side Behavior ([V2G3\u2011M07\u201119])  \n\u00a0\u00a0On receiving D\u2011LINK_PAUSE.request, the EV shall:  \n\u00a0\u00a0\u00a0\u00a0a. Change its control\u2011pilot state to Bx.  \n\u00a0\u00a0\u00a0\u00a0b. Optionally unpower its low\u2011layer communication module.  \n\u00a0\u00a0\u00a0\u00a0c. Store the logical network parameter set for resuming the data link after sleep.\n\n3. EVSE\u2011Side Behavior ([V2G3\u2011M07\u201120])  \n\u00a0\u00a0On receiving D\u2011LINK_PAUSE.request, the EVSE shall:  \n\u00a0\u00a0\u00a0\u00a0a. Switch its control\u2011pilot state to X1.  \n\u00a0\u00a0\u00a0\u00a0b. May power down its low\u2011layer communication module.  \n\u00a0\u00a0\u00a0\u00a0c. Store the logical network parameter set for resuming the data link after sleep.\n\nState Management  \n\u00a0\u00a0\u2022 During sleep, the communication link state remains \u201cMatched.\u201d  \n\u00a0\u00a0\u2022 The stored network parameters are used to reconfigure the PLC node immediately upon wake\u2011up.  \n\u00a0\u00a0\u2022 Wake\u2011up mechanisms (e.g., control\u2011pilot toggles or protocol triggers) restore the oscillator, control\u2011pilot duty cycle, and communication module within the maximum allowed resume time (T_conn_resume) without repeating the matching process.\n\nRelated Primitives  \n\u00a0\u00a0\u2022 D\u2011LINK_READY.indication  \n\u00a0\u00a0\u00a0\u00a0\u2013 Sent by lower layers to higher layers whenever link status changes (no link \u2194 link established).  \n\u00a0\u00a0\u2022 D\u2011LINK_TERMINATE.request  \n\u00a0\u00a0\u00a0\u00a0\u2013 Requests lower layers to tear down the data link immediately.  \n\u00a0\u00a0\u2022 D\u2011LINK_ERROR.request  \n\u00a0\u00a0\u00a0\u00a0\u2013 Requests lower layers to terminate the link and restart matching via control\u2011pilot transition to state\u00a0E.\n\nRelevant Figures/Tables  \n\u00a0\u00a0\u2022 Table\u00a07 \u2014 D\u2011LINK_PAUSE.request primitive ([V2G3\u2011M12\u201101])  \n\u00a0\u00a0\u2022 Section\u00a07.6.1 \u201cEntering the sleep mode\u201d in ISO\u00a015118\u20113  \n\nBy using D\u2011LINK_PAUSE.request, the high\u2011level communication layer gracefully pauses the PLC data link to save energy, yet preserves all matching and configuration state so that communication can resume quickly and reliably.",
    "What is CM_AMP_MAP.REQ?": "Overview  \nCM_AMP_MAP.REQ is a unicast management message entry (MME) defined in ISO\u00a015118\u20113 (HomePlug Green PHY on the control pilot line) to initiate an amplitude\u2011map exchange between two PLC (Power Line Communication) nodes\u2014typically the EV\u2019s low\u2011layer communication module and the EVSE\u2019s.  Its purpose is to request per\u2010carrier transmission\u2011power adjustments (or to convey desired adjustments to a remote host for its own amplitude\u2010map calculation), ensuring compliance with regulatory or coexistence requirements.\n\n1. Functional Description  \n  \u2022 Optional amplitude\u2011map exchange function: an EV or EVSE may invoke CM_AMP_MAP.REQ to ask the counterpart PLC module to reduce transmit power on specified subcarriers (i.e. \u201cnotch\u201d certain tones).  \n  \u2022 Dual roles depending on source/destination:  \n    \u2013 Host \u2192 local PLC module: causes the local module to immediately modify its transmission power per carrier.  \n    \u2013 Host \u2192 remote host (via its PLC module): conveys the requested per\u2011carrier power values for inclusion in the remote host\u2019s amplitude\u2011map calculation. In this role, the message does not directly change the local PLC module\u2019s transmit power\u2014it serves purely as information exchange.  \n  \u2022 Confirmation required: every CM_AMP_MAP.REQ must be acknowledged by the counterpart node with a CM_AMP_MAP.CNF message.\n\n2. Message Format (Table A.9 \u2014 CM_AMP_MAP.REQ Unicast)  \n  Field       | Octet no. | Size      | Value   | Definition  \n  ----------- | --------- | --------- | ------- | ------------------------------------------------  \n  AMLEN       | 0\u20131       | 2\u00a0octets  | 0x003A  | Fixed length indicator (number of carriers used)  \n  AMDATA[0]   | 2         | 4\u00a0bits    | variable| Amplitude Map Data: attenuation for carrier\u00a01 (4\u00a0LSBs)  \n  AMDATA[1]   | 2         | 4\u00a0bits    | variable| Amplitude Map Data: attenuation for carrier\u00a02 (4\u00a0MSBs)  \n  \u2026           | \u2026         | 4\u00a0bits    | variable| Further AMDATA entries for additional carriers  \n\n3. AMDATA Field: Reference and Resolution  \n  \u2022 Reference value: \u221250\u00a0dBm/Hz serves as the baseline for all CM_AMP_MAP amplitudes.  \n  \u2022 Resolution: 2\u00a0dB per AMDATA unit. An AMDATA value N corresponds to an attenuation of N\u00a0\u00d7\u00a02\u00a0dB relative to \u221250\u00a0dBm/Hz.  \n  \u2022 Example: AMDATA = 0b0011 (decimal\u00a03) \u21d2 3\u00a0\u00d7\u00a02\u00a0dB = 6\u00a0dB attenuation \u21d2 transmit power = \u221256\u00a0dBm/Hz.\n\n4. Exchange Procedure and Timers  \n  \u2022 TP_amp_map_exchange: performance timer (max 100\u00a0ms) starting when the logical network is established; CM_AMP_MAP.REQ must be sent within this interval to trigger an exchange.  \n  \u2022 TP_match_response / TT_match_response: the counterpart must reply with CM_AMP_MAP.CNF within this timeout (typ. 100\u00a0ms).  \n  \u2022 Retransmission policy: if no valid CM_AMP_MAP.CNF is received within TT_match_response, the sender retransmits CM_AMP_MAP.REQ (up to C_EV_match_retry times) and restarts the response timer on each retry. If still no valid response, the matching process is considered FAILED.  \n  \u2022 Duplicate requests: if the requested node receives a repeated CM_AMP_MAP.REQ (because its earlier CM_AMP_MAP.CNF was lost), it shall resend CM_AMP_MAP.CNF.  \n  \u2022 Invalid content: any CM_AMP_MAP.REQ or CM_AMP_MAP.CNF with fields deviating from Table\u00a0A.9 definitions shall be ignored.  \n  \u2022 No exchange case: if neither side initiates CM_AMP_MAP.REQ within TT_amp_map_exchange (max 200\u00a0ms), both assume no amplitude\u2011map exchange is needed and proceed to send D\u2011LINK_READY.indication to higher layers using the default amplitude map.\n\n5. Typical Example of CM_AMP_MAP.REQ Use  \n  \u2013 Scenario: EVSE wants to limit carriers\u00a02 and\u00a03 to \u221278\u00a0dBm/Hz; other carriers remain at the default (no attenuation).  \n  \u2013 Calculation:  \n    \u2022 Difference from reference (\u221250\u00a0dBm/Hz) = \u221228\u00a0dB \u21d2 28\u00a0dB/2\u00a0dB per step = 14 decimal (0xE) in AMDATA.  \n  \u2013 Payload (for 6 carriers): {0,\u00a014,\u00a014,\u00a00,\u00a00,\u00a00}  \n    \u2022 AMDATA[0] = 0x0 \u21d2 carrier\u00a01 unchanged  \n    \u2022 AMDATA[1] = 0xE \u21d2 carrier\u00a02 attenuated by 28\u00a0dB \u21d2 \u221278\u00a0dBm/Hz  \n    \u2022 AMDATA[2] = 0xE \u21d2 carrier\u00a03 likewise  \n    \u2022 Remaining entries = 0x0 \u21d2 no attenuation  \n  \u2013 Exchange:  \n    1. EVSE PLC node transmits CM_AMP_MAP.REQ to the EV Host\u2019s MAC address with that payload.  \n    2. EV Host compares requested values against its default PSD at the socket (e.g. {\u221275, \u221275, \u221277, \u221277, \u221275, \u221275}).  \n    3. Since carriers\u00a02 and\u00a03 exceeded the requested limit, the EV Host applies 3\u00a0dB and 1\u00a0dB further reductions, respectively, and programs its local PLC module accordingly by sending a second CM_AMP_MAP.REQ to the module.  \n    4. EV Host replies to the EVSE with CM_AMP_MAP.CNF indicating success (ResType = 0x00).  \n\nBy using CM_AMP_MAP.REQ together with CM_AMP_MAP.CNF, an EV and EVSE can dynamically negotiate and enforce per\u2010carrier transmit\u2011power limits, aiding regulatory compliance and coexistence in the 2\u201330\u00a0MHz PLC band."
}