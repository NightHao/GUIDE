================================= Entity Chunks for CM_SLAC_PARM.REQ =================================
Entity: CM_SLAC_PARM.REQ
Description: TT_EVSE_SLAC_INIT is the time between detecting state B and receiving CM_SLAC_PARM.REQ The EV uses the CM_SLAC_PARM.REQ message to communicate parameters for the signal strength measurement
The electric vehicle is required to send the CM_SLAC_PARM.REQ message as part of its communication protocol
The EV sends the CM_SLAC_PARM.REQ message as part of the SLAC parameter exchange phase The CM_SLAC_PARM.REQ message is used to set parameters for the signal strength measurement process The CM_SLAC_PARM.REQ message requests SLAC parameters, and the CM_SLAC_PARM.CNF message confirms these parameters
The CM_SLAC_PARM.CNF message is expected not to be sent until certain conditions are met after sending CM_SLAC_PARM.REQ
CM_SLAC_PARM.CNF is used to confirm the parameters requested in CM_SLAC_PARM.REQ
CM_SLAC_PARM.REQ messages are followed by CM_SLAC_PARM.CNF messages to confirm the requested parameters
Both are protocol messages used in the SLAC process for PEV-EVSE matching, with specific parameters for communication
The CM_SLAC_PARM.REQ message is related to the CM_SLAC_PARM.CNF message, which should not be sent until a specific condition is met
The CM_SLAC_PARM.REQ message is followed by a CM_SLAC_PARM.CNF message to confirm the parameters
CM_SLAC_PARM.REQ messages are followed by CM_SLAC_PARM.CNF messages as part of the parameter request and confirmation process
CM_SLAC_PARM.REQ is the request message that expects a CM_SLAC_PARM.CNF response
The CM_SLAC_PARM.REQ message is repeated until the CM_SLAC_PARM.CNF message is sent after the timer expires APPLICATION_TYPE is a field within the CM_SLAC_PARM.REQ protocol message indicating the type of application SECURITY_TYPE is a field within the CM_SLAC_PARM.REQ protocol message indicating the security level RunID is a field that should match the value sent in the CM_SLAC_PARM.REQ message
RunID is a field within the CM_SLAC_PARM.REQ protocol message used as an identifier for a matching run The CM_SLAC_PARM.REQ message must be sent within the TP_EV_SLAC_init time window The TT_match_response process is initiated by the transmission of the CM_SLAC_PARM.REQ protocol The EVSE is required to respond to valid CM_SLAC_PARM.REQ messages as long as the TT_EVSE_SLAC_init timer has not expired
The CM_SLAC_PARM.REQ protocol message is part of the communication process involving the EVSE
The EVSE receives CM_SLAC_PARM.REQ messages as part of its communication protocol with electric vehicles The requirement V2G3-A09-13 specifies the condition involving the CM_SLAC_PARM.REQ protocol message The content of CM_SLAC_PARM.REQ messages is defined by the MME The CM_SLAC_PARM.REQ message is part of the SLAC protocol for setting communication parameters
CM_SLAC_PARM.REQ is a protocol message request used within the SLAC process to initiate a new matching process
The CM_SLAC_PARM.REQ message is a request for parameters necessary for the SLAC process The EVCC sends the CM_SLAC_PARM.REQ message to initiate communication with the EVSE The low-layer communication module is involved in processing the CM_SLAC_PARM.REQ message The test case involves sending a CM_SLAC_PARM.REQ message as part of its procedure The test case requires sending a CM_SLAC_PARM.REQ message with valid parameters The test case involves sending a CM_SLAC_PARM.REQ message The test case involves sending the CM_SLAC_PARM.REQ message with valid parameters The test case involves sending a CM_SLAC_PARM.REQ message with specific parameters The test case involves sending a CM_SLAC_PARM.REQ message with specific parameters The test case involves sending a CM_SLAC_PARM.REQ message with specific parameters The test case involves sending CM_SLAC_PARM.REQ messages as part of its procedure The test case involves sending a CM_SLAC_PARM.REQ message The test case checks for the absence of CM_SLAC_PARM.REQ messages The test case involves sending a CM_SLAC_PARM.REQ message as part of its procedure The procedure includes sending a CM_SLAC_PARM.REQ message The test case requires the sending of a CM_SLAC_PARM.REQ message with valid parameters The test case involves counting the repetitions of the CM_SLAC_PARM.REQ message The test case involves the repetition and validation of CM_SLAC_PARM.REQ messages The test case involves sending CM_SLAC_PARM.REQ messages as part of the procedure The test case involves sending and checking repetitions of CM_SLAC_PARM.REQ messages The test case involves sending CM_SLAC_PARM.REQ messages as part of the testing process The test case involves the repetition and validation of CM_SLAC_PARM.REQ messages The test case expects the reception of a CM_SLAC_PARM.REQ message with valid parameters The SUT is responsible for limiting the repetition of CM_SLAC_PARM.REQ messages The TT_Matching_Repetition timer controls the repetition of CM_SLAC_PARM.REQ messages The test case involves checking the CM_SLAC_PARM.REQ message for valid parameters The test case checks for the sending of a CM_SLAC_PARM.REQ message with valid parameters The test case checks for the sending of a CM_SLAC_PARM.REQ message with valid parameters The test case checks for the sending of a CM_SLAC_PARM.REQ message The test case checks for the sending of a CM_SLAC_PARM.REQ message SLAC_Port is involved in the communication process where CM_SLAC_PARM.REQ messages are used CM_SLAC_PARM.REQ is a request message that is confirmed by CM_SLAC_PARM_CNF The CM_SLAC_PARM.REQ message initiates a new matching process, starting the TT_EVSE_match_session The new matching process involves the receipt and handling of CM_SLAC_PARM.REQ messages The requirement V2G3-A06-05 specifies that the EV's low-layer communication module should not respond to CM_SLAC_PARM.REQ A protocol message that is expected to be sent by the System Under Test (SUT) with a valid runID and additional parameters
A protocol message used in the SLAC process for parameter request in electric vehicle communication
A protocol message used to initiate a new SLAC process with a new runID and valid parameters
A protocol message used in the test case to request parameters, which is repeated and checked for valid runID and parameters
A protocol message that includes a valid runID and additional parameters, used in the context of electric vehicle communication testing
A message protocol used by the EVCC to initiate communication with the EVSE
A protocol message used in SLAC (Signal Level Attenuation Characterization) communication to request parameter settings
A protocol message sent by the EV during the SLAC parameter exchange phase to request parameter configuration
A message protocol used to send a request with a valid runID and additional parameters in the context of vehicle-to-grid communication
A request message used in the communication protocol to initiate parameter exchange with a valid runID and additional parameters
A specific message protocol used by an EV to broadcast parameters for signal strength measurement
A protocol message or request that triggers the start condition of the TT_match_response process
A protocol request message related to SLAC parameters on the EVSE side
A protocol request used in the context of EVSE communication, specifically related to the SLAC (Signal Level Attenuation Characterization) process
A protocol message used in the SLAC process for PEV-EVSE matching, broadcasted with specific parameters
A protocol message used in the communication process to request specific parameters related to the SLAC (Signal Level Attenuation Characterization) in electric vehicle systems
A specific MME related to parameter requests in communication protocols
A request message sent by the Test System containing a valid runID and additional parameters for communication in a vehicle-to-grid system
CM_SLAC_PARM.REQ is a protocol message used in the context of vehicle-to-grid communication, specifically for parameter requests
A protocol message request for SLAC parameters, initiating a new matching process in the SLAC communication
A message protocol used to request SLAC parameters with a valid runID and additional parameters
A protocol message used in the SLAC (Signal Level Attenuation Characterization) process for communication between electric vehicles and EVSE
A protocol message used in the test case to request parameters, which is repeated and counted during the test
A message protocol used in the test case and test system to send a request with a valid runID and additional parameters.
A protocol message used in the test case to request parameters related to the SLAC (Signal Level Attenuation Characterization) process.
A protocol message type used in the Signal Level Attenuation Characterization (SLAC) process, indicating a request for related parameters.
A protocol message used in the testing process and test case to request parameters related to the CM_SLAC_PARM configuration.
A protocol message used in the SLAC process for communication between PEV and EVSE, specifically requesting necessary parameter settings.
A message type in the SLAC protocol indicating a request for parameters.
CM_SLAC_PARM.REQ is a protocol message used in the SLAC process to request parameters and initiate a new matching process.
A protocol message that includes a valid runID and additional parameters must be sent and is expected to be received during the test case to verify and initiate communication. In the SLAC parameter exchange phase, the EV shall send a CM_SLAC_PARM.REQ and wait for the maximum value of TT_match_response for CM_SLAC_PARM.CNFs from potential EVSEs.
--------------------------------------------------------------------------------
Entity: APPLICATION_TYPE
Description: A field within the MME that indicates the type of application, such as "PEV-EVSE matching"
APPLICATION_TYPE is a field indicating the type of application, with a fixed value of 0x00 representing "PEV-EVSE Matching"
A field in the protocol message indicating the type of application, such as 'PEV-EVSE Matching', with a fixed value.
--------------------------------------------------------------------------------
Entity: CM_SLAC_PARM.CNF
Description: A protocol message used to confirm parameters related to the CM_SLAC_PARM configuration, including handling of invalid 'respType'
A message protocol that is expected not to be sent by the System Under Test (SUT) until a specific timer has expired
A protocol message used to confirm parameters related to the SLAC process, which is not sent until a specific timer expires
A protocol message confirming receipt of the CM_SLAC_PARM.REQ message, including the current runID, EV MAC, and additional parameters
A protocol message used in the SLAC process, unicast with specific parameters for M-Sound transmission
A confirmation message protocol that should not be sent by the system under test until a specific timer has expired
A protocol message confirming the parameters requested in CM_SLAC_PARM.REQ, which includes an invalid 'applicationType' in this test case
A protocol message used to confirm the parameters set in the CM_SLAC_PARM configuration after a request is made
A protocol message used in the communication process between an electric vehicle and the grid, which must be checked for validity
A message protocol expected not to be sent by the System Under Test (SUT) until the TT_match_response timer has expired
A confirmation message in the communication protocol used between electric vehicles and charging infrastructure
A protocol message that should not be sent by the system under test until a specific timer has expired
A confirmation message protocol that should not be sent by the SUT until the TT_match_response timer has expired
A protocol message used to confirm the parameters requested by CM_SLAC_PARM.REQ, including handling of invalid 'timeout' values
A protocol message used to confirm the parameters requested by CM_SLAC_PARM.REQ in the SLAC process of electric vehicle communication
A protocol message used to confirm parameters related to the SLAC process, including handling of invalid security types
A confirmation message expected from the System Under Test (SUT) containing the current runID, EV MAC, and additional parameters
A protocol message used in the parameter exchange sequence between electric vehicle supply equipment (EVSE) and other components
A protocol message type that is expected to be sent by an EVSE as part of the communication process in a vehicle-to-grid system
A message protocol used to confirm SLAC parameters with the current runID, EV MAC, and additional parameters
A protocol message that confirms the parameters, which is not sent during the test until a specific condition is met
A protocol message used in the communication process between an electric vehicle (EV) and the charging infrastructure to confirm parameter settings
A protocol message used in the communication between an EVSE and an EV for parameter exchange confirmation
A message protocol used to confirm receipt of a request with the current runID, EV MAC, and additional parameters in vehicle-to-grid communication
A message protocol used in the test case to confirm parameters with the current runID, EV MAC, and additional valid parameters
The EVSE sends a protocol message in response to the CM_SLAC_PARM.REQ, confirming readiness for communication during the SLAC parameter exchange phase.
A protocol message confirming the initiation of a new SLAC process and its related parameters, sent in response to a CM_SLAC_PARM.REQ message.
A message type used in the SLAC process and protocol for confirming SLAC parameters.
A confirmation message in the communication protocol that confirms receipt of parameters, including runID and EV MAC.
A message protocol that sends parameters including runID and EV MAC to the system under test, initiates the attenuation characterization process, and serves as a confirmation message. The EV shall wait for the maximum value of TT_match_response for CM_SLAC_PARM.CNFs from potential EVSEs.
--------------------------------------------------------------------------------
Entity: CM_SLAC_PARM_CNF
Description: A term representing a specific confirmation message in the SLAC protocol, identified by the hexadecimal code '6065'H
A protocol message or confirmation used in the SLAC process, identified by a specific hexadecimal code
A protocol message confirming SLAC parameters, which is ignored in this context
A protocol message type with a specific hexadecimal value '6065'H, part of the MMTYPE union
CM_SLAC_PARM_CNF is a protocol message used in the communication system, but it is ignored in this context
A protocol confirmation for SLAC parameters in electric vehicle communication
A confirmation message in the SLAC protocol, used to confirm receipt and processing of parameter requests, represents a term sent in response to such requests.
A protocol message used in SLAC communication to confirm parameter settings.
A specific message type in the SLAC protocol used for parameter confirmation, indicating its role in communication systems.
A term used in the SLAC protocol to confirm specific parameters through a confirmation message.
CM_SLAC_PARM_CNF, identified by the hexadecimal code '6065'H, is a confirmation message in the SLAC protocol that acknowledges the receipt and processing of parameter requests and confirms parameter settings for communication. SECC test cases for CmSlacParm
--------------------------------------------------------------------------------
Entity: ELECTRIC VEHICLE
Description: <|COMPLETE|>
An Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion and can be charged through the grid
An Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion and can detect communication loss during charging
An Electric Vehicle (EV) is a type of vehicle that uses electric power for propulsion and must comply with local frequency legislation through the EVSE
An Electric Vehicle (EV) that initiates the signal strength measurement process
An Electric Vehicle (EV) that participates in the validation process by sending and receiving protocol messages
An Electric Vehicle, which is a type of vehicle powered by electric motors using energy stored in rechargeable batteries
An electric vehicle that processes incoming messages and interacts with EVSEs during the parameter exchange and matching process
An electric vehicle that requires connection to a communication module for charging and data exchange
EV refers to Electric Vehicle, which is a type of vehicle that operates on electric power and participates in vehicle-to-grid communication
EV refers to an Electric Vehicle, which is a type of vehicle that operates on electric power
Electric Vehicle (EV) is a type of vehicle that operates using electric power instead of traditional fuel
Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion and can be charged via a power outlet
Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion and can communicate with EVSE by sending public keys
Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion and is involved in the triggering process immediately after the plug-in of the cable assembly
Electric Vehicle (EV) is a type of vehicle that uses electric power for propulsion, mentioned in the context of power flow with EVSE
Electric Vehicle (EV) that connects to and disconnects from the logical network
Electric Vehicle, a general term for vehicles that operate on electric power, including BEVs and PHEVs
Electric Vehicle, a type of vehicle that is powered by electricity instead of traditional fuel sources
Electric Vehicle, a type of vehicle that uses electric motors for propulsion and is capable of being charged through an external power source
Electric Vehicle, which can decide whether to follow the EVSE's recommendation or proceed with the validation process
Electric Vehicle, which initiates the validation process by sending a readiness signal
Electric Vehicle, which interacts with EVSE for charging and communication processes
Electric Vehicle, which is a type of vehicle powered by electricity and capable of interacting with EVSE for charging
Electric Vehicle, which is capable of making decisions on how to proceed in certain situations
Electric Vehicle, which is expected to be prepared for a forced restart by an EVSE during the T_conn_resetup waiting state
Electric Vehicle, which is involved in the communication process and message exchanges in the test case
Electric Vehicle, which is involved in the validation process and must perform certain actions based on the protocol message
Electric Vehicle, which is involved in the vehicle-to-grid communication process and must adhere to specific requirements
Electric Vehicle, which is involved in the vehicle-to-grid communication process and must continue the matching process if certain conditions are met
Electric Vehicle, which is the recipient of charging and communication from the EVSE
Electric Vehicle, which is the recipient of communication from the EVSE and must comply with certain PSD values
Electric Vehicle, which is the recipient of the CM_SLAC_PARM.CNF message in the context of vehicle-to-grid communication
Electric Vehicle, which is the recipient of the communication from the low-layer communication module
Electric Vehicle, which is the subject of the protocol command to change its state
Electric Vehicle, which is the subject of the requirement to continue with the communication process
Electric Vehicle, which is the subject of the timers and validation process described
Electric Vehicle, which is the type of vehicle involved in the matching process mentioned
Electric Vehicle, which is the type of vehicle involved in the parallel injection process
Electric Vehicle, which participates in the SLAC process and communicates with EVSE
Electric Vehicle, which uses electricity as its primary source of propulsion
Electric Vehicle, which uses the low-layer communication module for various communication processes
Electric Vehicle, which uses the method to discover and select communication nodes based on signal strength
An Electric Vehicle (EV) is powered by electric motors and batteries for propulsion, offering an alternative to internal combustion engine vehicles.
An Electric Vehicle (EV) uses electric power for propulsion and is involved in vehicle-to-grid communication processes.
EV stands for Electric Vehicle, which is powered by electricity and uses electric motors for propulsion instead of traditional fuel sources.
Electric Vehicles (EVs), which are powered by electric motors, use energy stored in rechargeable batteries.
An Electric Vehicle is a type of vehicle that operates using electric power stored in batteries and is powered by electric motors.
Electric Vehicle, a type of vehicle powered by electricity.
Electric Vehicle is involved in the validation process with Electric Vehicle Supply Equipment (EVSE).
Electric Vehicles (EVs) are powered by electric motors and batteries instead of internal combustion engines.
Electric Vehicles are a type of vehicle that use electric motors for propulsion and require charging infrastructure.
An Electric Vehicle (EV) is a type of vehicle that uses electric motors for propulsion, requires charging infrastructure like EVSE, and can communicate with it for charging and validation processes.
Electric Vehicle (EV) is a type of vehicle that operates on electric power using electric motors for propulsion, powered by electricity stored in rechargeable batteries or fuel cells.
--------------------------------------------------------------------------------
Entity: EVCC
Description: EVCC refers to a set of non-standardized processing timeouts related to Electric Vehicle Communication Controller
Electric Vehicle Communication Controller, a component involved in electric vehicle charging systems, subject to testing under IEC 61851-1
<|COMPLETE|>
Electric Vehicle Communication Controller, which acts as a client in the communication protocol
Electric Vehicle Communication Controller, a component involved in the control and execution of test cases and behaviors in the test suite
Electric Vehicle Communication Controller, a technology component involved in the communication process during validation
A segment in the example identifier, possibly referring to Electric Vehicle Communication Controller
The Electric Vehicle Communication Controller, a system within the EV, is responsible for managing communication and validation processes with the Electric Vehicle Supply Equipment (EVSE).
The Electric Vehicle Communication Controller, a system under test in the ISO 15118 standard, is responsible for managing communication between the electric vehicle and the charging station.
The Electric Vehicle Communication Controller manages communication between electric vehicles and charging stations and infrastructure, facilitating charging communication.
The Electric Vehicle Communication Controller (EVCC) manages communication between electric vehicles and charging stations, including infrastructure for DC charging.
--------------------------------------------------------------------------------
Entity: EVSE
Description: Electric Vehicle Supply Equipment, which is the infrastructure that supplies electric energy for recharging electric vehicles and interacts with various signals and toggles
Electric Vehicle Supply Equipment, which handles parallel matching processes and monitors control pilot states
Electric Vehicle Supply Equipment involved in the communication process, particularly in sending and receiving specific messages
Electric Vehicle Supply Equipment, which provides recommendations to the electric vehicle regarding the validation process
Electric Vehicle Supply Equipment, which is responsible for receiving and processing messages in the vehicle-to-grid communication system
Electric Vehicle Supply Equipment, which defines the maximum charge current for the vehicle in the HLC-C mode
Electric Vehicle Supply Equipment that calculates signal strength based on M-SOUNDS
Electric Vehicle Supply Equipment, which provides the interface between the electric vehicle and the power source, and can affect signal transmission
Electric Vehicle Supply Equipment (EVSE) is the technology used to supply electric energy for recharging electric vehicles, specifically covered under modes 3 and 4 in this context
<|COMPLETE|>
Electric Vehicle Supply Equipment (EVSE) is the technology responsible for generating the valid duty cycle as per the IEC-1 standard
Electric Vehicle Supply Equipment that communicates with EVs through messages like CM_ATTEN_CHAR.IND during the parameter exchange
Electric Vehicle Supply Equipment, which supplies electric energy for recharging electric vehicles and participates in communication protocols
An Electric Vehicle Supply Equipment (EVSE) is the infrastructure that supplies electric energy for recharging electric vehicles and can make decisions based on ID recognition
Electric Vehicle Supply Equipment, which interacts with the EV during the validation process
Electric Vehicle Supply Equipment (EVSE) is the technology that provides electric energy for recharging electric vehicles and can set a nominal duty cycle
An Electric Vehicle Supply Equipment (EVSE) is the infrastructure that supplies electric energy for recharging electric vehicles and can establish a point-to-point link with an EV using G3PLC technology
Electric Vehicle Supply Equipment, which counts control pilot toggles and communicates results back to the EV
Electric Vehicle Supply Equipment, which can force an EV to restart if it has implemented option A
Electric Vehicle Supply Equipment, the infrastructure that supplies electric energy for recharging electric vehicles and participates in communication protocols like SLAC
Electric Vehicle Supply Equipment provides the infrastructure for charging electric vehicles, offering both electrical energy and communication capabilities, including socket-outlets.
Electric Vehicle Supply Equipment is involved in both matching and validation processes.
Electric Vehicle Supply Equipment provides electric energy for recharging electric vehicles and includes communication capabilities.
Electric Vehicle Supply Equipment provides the necessary infrastructure for charging electric vehicles.
Electric Vehicle Supply Equipment (EVSE) supplies electric energy for recharging electric vehicles, manages communication with the vehicle, handles validation processes including power limitation requests, detects state variations on the control pilot line, ensures compliance with local legislation, and can switch states while connecting to a private network.
Electric Vehicle Supply Equipment (EVSE) is the infrastructure that supplies electric energy for recharging electric vehicles, supports wake-up mechanisms, and facilitates communication with EVs.
--------------------------------------------------------------------------------
Entity: GOODCASE PROCEDURE
Description: A procedure executed by the Test System to ensure proper functioning by indicating the key at the local PLC node after receiving a valid message
A procedure executed by the Test System as part of the test case to ensure correct system behavior without SLAC validation
A procedure executed by the Test System as part of the test case to ensure proper message sending and system evaluation
A procedure executed by the Test System to ensure proper signaling and message handling during the test case
A procedure executed by the Test System to initiate a paused V2G communication session by sending a SessionStopReq message with specific parameters
A procedure executed by the Test System as part of the test case to ensure proper message handling and attenuation measurement
A procedure executed by the Test System to validate SLAC and send specific messages as part of the test case
A procedure within the test system that is initiated twice in parallel to test the system's response to CM_VALIDATE.CNF messages
A procedure executed by the test system to ensure that the test case runs under expected conditions
A procedure executed by the test system without SLAC validation to test the sending of CM_SLAC_MATCH.REQ messages
A procedure executed by the Test System to ensure initial conditions and successful process execution in the test case
A procedure in the test system that is executed twice in parallel to test the system's response to validation messages
A procedure executed by the Test System to indicate the initial CP State B transition in the test case TC_SECC_CMN_VTB_CmSlacParm_006
A procedure executed by the Test System to send specific messages and measure attenuation values as part of the test case
A procedure initiated by the test system to ensure proper communication and validation in the test case scenario
A procedure executed by the Test System to ensure proper functioning and validation of communication parameters in electric vehicle systems
A procedure executed by the Test System to ensure proper handling of the SECC communication in a specific test case
A procedure initiated by the test system to validate communication by waiting for specific messages
A procedure executed by the Test System to ensure the correct operation of the system under test by sending specific messages
A procedure executed by the Test System to evaluate the behavior of the system under test, particularly focusing on the repetition of CM_AMP_MAP.REQ messages
A procedure executed by the Test System to establish a new AVLN and send a CM_SLAC_PARM.REQ message with valid parameters
A procedure executed by the test system to ensure correct operation and validation of communication messages
A procedure executed by the Test System to count the number of CM_SLAC_MATCH.REQ repetitions and validate parameters
A procedure executed by the test system to ensure a 100% duty cycle with a specified delay
A procedure executed by the Test System to ensure proper handling of messages and duty cycle during the test case
A procedure in the test system that is initiated twice in parallel to test the system's response to invalid and valid messages
A procedure executed by the test system to ensure proper functionality, including a 5% duty cycle and a delay after the initial CP State B transition.
A procedure executed by the Test System to establish a new AVLN as part of the test case, ensuring proper communication and verifying network behavior.
A procedure executed by the test system without SLAC validation to test the communication protocol.
A procedure executed by the test system to ensure the correctness of the initial CP State B transition while also testing the initial CP State A transition.
A procedure executed by the test system to ensure that communication messages are sent and received correctly under expected conditions.
A procedure executed by the test system to simulate a specific scenario with a 53% duty cycle and a delay.
A procedure executed by the test system to ensure the correct sequence of operations and message exchanges during the test case.
A procedure executed by the Test System ensures the correct transitions of initial CP States C, D, and B, independently managing duty cycles.
A procedure executed by the test system without SLAC validation to test the communication between EV and EVSE.
A procedure executed by the Test System to establish a new AVLN and test both the connection loss scenario and the system's response.
A procedure executed by the test system to validate SLAC communication and the SLAC process, ensuring correct message exchanges.
A procedure executed by the Test System to ensure proper functionality, compliance with specified parameters, and correct behavior under expected conditions during testing.
A procedure executed by the test system to ensure that the system behaves correctly under both normal and specified conditions.
A procedure executed by the test system to ensure a 5% duty cycle under specified conditions, including delay and parameters.
--------------------------------------------------------------------------------
Entity: LOW-LAYER COMMUNICATION MODULE
Description: A component responsible for handling basic communication tasks at the lower layers of a network protocol stack, used in both EVSE and EV
A module responsible for handling basic communication tasks at the lower layers of a communication protocol stack, particularly in vehicle-to-grid systems
A module within the EVSE responsible for handling low-level communication tasks, such as configuring network identifiers and keys
A communication module responsible for managing communication at a lower layer, particularly in charging stations with multiple outlets
A component that needs to be configured as described in A.4.5 before the matching process begins
A low-layer communication module is a technology component responsible for handling basic communication tasks in a network, as specified in the V2G3-A09-115 standard
A component responsible for handling communication at the lower layers of a network protocol stack, often dealing with data transmission and reception
A module responsible for handling basic communication tasks in a vehicle-to-grid system, which can be optionally unpowered
A module responsible for handling the initial stages of communication in a system, particularly after a cable assembly is plugged in
A low-layer communication module is a component responsible for handling basic communication tasks directly connected to the EVSE
A component on the EVSE side responsible for handling basic communication tasks, including detecting the zero cross of the AC line cycle
A module responsible for handling the basic communication protocols and message flows between devices in a network
A component responsible for basic communication functions in an electric vehicle, which can be powered off during sleep mode
A communication layer responsible for handling basic communication tasks, such as receiving the first SLAC message
A component responsible for handling basic communication functions between the electric vehicle and the EVSE
A component responsible for handling communication at a lower layer in the communication stack, particularly in vehicle-to-grid systems
A communication module assigned locally to each socket-outlet on the EVSE side, responsible for handling low-level communication tasks
A component in a communication system responsible for handling low-level data transmission tasks, including managing additional carriers and sending amplitude maps
A component within a communication system responsible for handling low-level communication tasks, including adjusting transmission power
A component of the EVSE responsible for handling communication at a basic network level, which can be configured to known logical network parameters
A communication module responsible for handling low-level data exchange between an electric vehicle and the charging infrastructure
A module responsible for establishing initial communication between the EVSE and the electric vehicle at a basic level
A low-layer communication module is a component that handles the basic, foundational aspects of data transmission in a communication system
A component in communication systems responsible for handling lower-level communication tasks, including power management and signal processing
A module responsible for handling communication at a lower layer, crucial for processes like matching and responding to MMEs
A module responsible for handling communication at the lower layers of a network, including joining and leaving logical networks
A module responsible for handling communication protocols and data exchange between Electric Vehicles (EV) and Electric Vehicle Supply Equipment (EVSE), including message exchanges at the lowest level of the communication stack.
A component of the EVSE responsible for handling both basic and low-level communication tasks, which may be powered off during sleep mode or switched into low-power mode.
A module on the electric vehicle (EV) side responsible for handling basic communication functions.
A module in an electric vehicle responsible for handling low-level communication tasks.
A component of the EVSE responsible for handling basic communication tasks, protocols, and functions.
A component that handles basic communication tasks and protocols at a lower level of the communication stack within a network.
A module responsible for handling basic communication tasks and settings in a network, operating at lower layers of the communication protocol stack.
A module responsible for handling communication at the lower layers of a network stack, essential for establishing connections and ensuring data transmission and reception, typically involving the data link and physical layers.
--------------------------------------------------------------------------------
Entity: MME
Description: MME is a protocol template used for defining the structure of SLAC management message entries in communication systems
A protocol message used in the SLAC communication process
A term referring to a message or entity involved in the communication process, possibly related to the SLAC protocol
A term referring to a specific definition or standard outlined in Table A.4, which is used to validate the content of CM_ATTEN_CHAR.RSP messages
A term that could refer to a message or module involved in the testing or communication process
Mobility Management Entity, which is involved in the communication process with the electric vehicle
Management Message Entity, a type of message used in communication protocols
Management Message Entry used in the context of SLAC communication
Message Management Entity used in communication protocols
MME refers to a specific definition or set of criteria outlined in Table A.5 and Table A.6 that content must adhere to
A component or system involved in managing messages or communication in the SECC system
<|COMPLETE|>
A term likely referring to a message or module in the context of communication protocols
A term referring to a specific definition or standard outlined in Table A.2, which the content of CM_SLAC_PARM.CNF must adhere to
MME refers to a protocol message used in the context of communication processes, possibly related to mobility management
MME stands for Message Management Entity, which is used in the context of SLAC to define parameters for communication
MME refers to a message exchange mechanism or entity involved in the communication process
A term referring to a specific definition or standard that CM_ATTEN_CHAR.IND content must adhere to, as outlined in Table A.4
A term referring to the Message Management Entity, which defines the structure and content of messages like CM_SLAC_PARM.REQ
A term referring to the Message Management Entity, which defines the content standards for protocol messages like CM_SLAC_MATCH.CNF
A protocol message used in SLAC communication, which stands for Message Management Entity
MME stands for Mobility Management Entity, which is involved in managing network connections and exchanges, such as amplitude map exchanges
MME refers to a specific definition or standard that outlines valid content for communication protocols
A term referring to a specific definition or set of criteria outlined in Table A.5 and Table A.6
MME refers to a component or variable used in the context of message handling within the SLAC protocol testing environment
MME stands for Mobility Management Entity, which is a key control-node for the LTE access-network. It is responsible for idle mode UE tracking and paging procedure including retransmissions
A protocol record within the DataStructure_SLAC module, consisting of MME_Header and MME_Payload
Management Message Entry, a term used to describe a type of message used for management purposes in a network
MME refers to Management Message Entity, which is used for exchanging control messages between PLC nodes or between a PLC node and higher layers
A term referring to a variable type used in the function f_EVCC_CMN_TB_VTB_AttenuationCharacterization_001
MME stands for Management Message Entry, which is used in communication systems to define parameters for joining a logical network and manage message exchanges.
A term referring to a message management entity involved in communication protocols and processes.
MME stands for Message Management Entity, which is involved in managing and processing messages and defines their structure and content in communication protocols.
MME, or Mobility Management Entity, is a key component in mobile networks that manages mobile devices, handles signaling and session management, and oversees parameters for validation processes in communication protocols.
MME stands for Mobility Management Entity, a key component in mobile networks responsible for handling signaling and session management
--------------------------------------------------------------------------------
Entity: NEW MATCHING PROCESS
Description: A procedure initiated to start a new matching sequence, possibly related to communication or data exchange
--------------------------------------------------------------------------------
Entity: RUNID
Description: An identifier for a matching run, randomly chosen by the EV for each CM_SLAC_PARM.REQ message and constant for all following messages of the same run
A unique identifier used in the CM_SLAC_MATCH.REQ message to track the communication session
A unique identifier used to track the current execution of a test or process
A field within the MME that should match the value sent in the CM_SLAC_PARM.REQ message by the EV
A unique identifier used in the SLAC validation process to track message exchanges
A field within a protocol message that should match the value sent in a related message, CM_SLAC_PARM.REQ, by the EV
A variable value that should match the one sent in the CM_SLAC_PARM.REQ message by the EV
A unique identifier used in the SLAC validation process to track the current session
A term used to identify a specific execution or instance of a process or operation
RunID is a field containing a variable value that should match the one sent in the CM_SLAC_PARM.REQ message by the EV
RunID is a unique identifier for each test run in the testing process, ensuring distinct and traceable executions.
--------------------------------------------------------------------------------
Entity: SECURITY_TYPE
Description: SECURITY_TYPE is a field indicating the security level, with a fixed value of 0x00 representing "No Security"
A field within the MME that indicates the level of security, such as "No Security"
A variable representing the type of security protocol used, such as TLS or TCP
A term used to define the type of security protocol being used, such as cc_hexTls or cc_hexTcp
A field in a protocol message indicating the security level, specifically a fixed value for 'No Security'.
--------------------------------------------------------------------------------
Entity: SIGNAL STRENGTH MEASUREMENT
Description: The procedure of assessing the power level of a signal, which is crucial for communication technology performance
The procedure or method used to assess the strength of a signal, often in the context of communication technologies
The process of assessing the power level of a signal, which is crucial for effective communication and connectivity
The process of measuring the strength of a communication signal between nodes
The process by which the EV measures the strength of signals from EVSE nodes to determine the best connection point
The process of measuring the strength of a signal, which can be used to make decisions about connectivity or matching
A procedure or method used to assess the strength of a signal, often represented in a sequence chart to visualize the process
The process of measuring the strength of a signal, which can influence the EV's decision to request further actions from the EVSE
The process of measuring the strength of a signal in communication between devices and technologies.
--------------------------------------------------------------------------------
Entity: SLAC
Description: Signal Level Attenuation Characterization, a protocol used in the context of EVCC testing
Signal Level Attenuation Characterization, a protocol used for measuring and characterizing signal attenuation in power line communication
A protocol used for encoding in the given communication system
Signal Level Attenuation Characterization, a protocol used in the context of SECC for communication and matching processes
Signal Level Attenuation Characterization, a protocol used in the context of the function f_EVCC_CMN_TB_VTB_AttenuationCharacterization_001
SLAC is a protocol used for communication in electric vehicle charging, particularly for matching and session management
<|COMPLETE|>
Signal Level Attenuation Characterization (SLAC) is a process used for matching Plug-in Electric Vehicles (PEV) with Electric Vehicle Supply Equipment (EVSE)
Signal Level Attenuation Characterization, a process or technology for which data structures are needed in Annex G
Signal Level Attenuation Characterization (SLAC) is a process used in HomePlug Green PHY for network management, including link status and encryption key management
Signal Level Attenuation Characterization is a protocol for measuring signal attenuation in electric vehicle charging systems and communication, including matching and validation processes, specifically in power line communication.
Signal Level Attenuation Characterization is a process, technology, and protocol used to measure, assess, and manage signal attenuation in communication systems.
SLAC is a protocol used in power line and electric vehicle communication to measure, characterize, and manage signal attenuation, ensuring compatibility and proper data transmission between devices.
SLAC (Signal Level Attenuation Characterization) is a protocol used in electric vehicle communication and power line networks to manage signal quality, characterize signal attenuation, ensure reliable data transmission, establish connections, and facilitate matching between vehicles and charging stations. In the SLAC parameter exchange phase, the EV shall send a CM_SLAC_PARM.REQ.
--------------------------------------------------------------------------------
Entity: SLAC_PORT
Description: An infrastructure component used for receiving and sending messages in the context of EVCC testing
A port used for communication in the SLAC protocol, which is related to power line communication
A communication port used for sending and receiving protocol messages during the validation process
SLAC Port is a term used to describe a specific port used for Signal Level Attenuation Characterization in the context of power line communication
A communication interface used for exchanging data and managing processes in EVSE systems
Signal Level Attenuation Characterization (SLAC) Port is used in communication technology for measuring signal levels
A communication port used for SLAC (Signal Level Attenuation Characterization) in electric vehicle charging systems
Signal Level Attenuation Characterization (SLAC) Port is used in the context of power line communication for electric vehicle charging
SLAC_Port is a communication port used in conjunction with SECC_Tester and EVCC_Tester for testing purposes
A port used to send and receive SLAC messages, which are defined in the ISO 15118-3 standard, to and from the Electric Vehicle Communication Controller (EVCC) or Supply Equipment Communication Controller (SECC)
SLAC_Port is a communication port used in electric vehicle charging systems for Smart Link Access Control and Smart Load and Control, responsible for sending and receiving messages.
SLAC_Port is a communication interface used for receiving and sending messages related to the SLAC protocol in a testing setup.
A communication port used for sending and receiving messages in the context of the SLAC protocol.
A communication port used for exchanging and sending/receiving protocol messages during testing.
--------------------------------------------------------------------------------
Entity: SYSTEM UNDER TEST
Description: A placeholder term often used in documentation or templates to represent a system under test
A segment of an identifier that stands for System Under Test, indicating the specific system being evaluated
SUT stands for System Under Test, which is the system being tested for its ability to signal the corresponding duty cycle
System Under Test (SUT) refers to the system being tested for its ability to perform amplitude map exchanges
System Under Test (SUT) refers to the system being tested, which receives encoded data from the codec
System Under Test, referring to the system being tested for compliance with V2G communication standards and protocols
System Under Test, referring to the system being tested for its ability to leave the logical network under certain conditions
System Under Test, referring to the system being tested, in this context, using the IEC 61851-1 standard
System Under Test, the system being tested for conformance to the relevant requirements
System Under Test, the system being tested for its response to the SLAC match request
System Under Test, which consumes bit strings encoded or decoded by the SLAC codec during testing
System Under Test, which is expected to send a CM_AMP_MAP.CNF message during the test case
System Under Test, which is responsible for handling the validation process with the EVSE
System Under Test, which is the system being evaluated in the test case to check its behavior regarding message repetition
System Under Test, which is the system being tested for its ability to handle communication messages correctly
System Under Test, which is the system being tested to ensure it sends a valid SDP request message
The system being evaluated or tested, which can include EVCC and SECC in the context of ISO 15118
System Under Test, which is the system being evaluated in the test case for its response to protocol messages
The term 'System Under Test' denotes the system being evaluated or tested in a particular context.
SUT stands for System Under Test, referring to the systems being tested, specifically EVCC and SECC, with a focus on EVCC in this context.
SUT, or System Under Test, refers to the EVSE being tested for compatibility and functionality.
The System Under Test (SUT) in V2G communication refers to the system being tested in both the communication scenario and session process related to electric vehicles.
System Under Test, which is being tested for compliance and response to the SLAC validation process.
The System Under Test, which is being validated and tested for its response to validation processes and messages, is central to the validation process.
System Under Test refers to the system being tested, which can be either an EVCC or SECC.
The System Under Test is evaluated for its ability to measure and report attenuation values, handle attenuation values, and respond to attenuation characterization.
The System Under Test is the specific system or component currently undergoing testing to verify its performance, compliance with specified requirements and protocols, and ability to perform specific functions according to test case procedures.
The System Under Test evaluates its response to communication protocols and protocol messages, testing its ability to handle and respond to test case protocols and messages.
The System Under Test is being tested for its response to the test case scenario.
System Under Test refers to the system being tested in both the test suite and the testing process.
The System Under Test (SUT) refers to the system being tested, which includes either an Electric Vehicle Communication Controller (EVCC) or a Supply Equipment Communication Controller (SECC), specifically in the context of PLC bridges.
SUT, or System Under Test, is evaluated for message handling, functionality, performance, and its response to protocol messages and SLAC operations to ensure it meets specified requirements.
System Under Test refers to the system being evaluated or tested in various contexts, including its response to test case scenarios and specific executions.
The System Under Test (SUT) is evaluated in a testing environment using a test suite to ensure it meets specified requirements, expected behavior, and compliance with standards.
The System Under Test (SUT) is the specific system evaluated in a testing environment for compliance with standards like ISO 15118‐3, focusing on validation, communication processes, and expected behavior under various configurations and scenarios.
--------------------------------------------------------------------------------
Entity: TC_EVCC_AC_VTB_CMSLACPARM_001
Description: A test case designed to run on the EVCC_Tester system, likely related to testing specific parameters or functionalities
A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 53% duty cycle and a delay, followed by the sending of a CM_SLAC_PARM.REQ message
A specific test case requirement executed as part of the CmSlacParm process
<|COMPLETE|>
A specific test case identifier used in the context of electric vehicle communication and testing, likely related to AC vehicle-to-grid communication parameters
A specific test case identifier used in the context of testing electric vehicle communication controller (EVCC) functionalities related to AC vehicle-to-building (VTB) communication and SLAC parameter settings)
--------------------------------------------------------------------------------
Entity: TC_EVCC_AC_VTB_CMSLACPARM_002
Description: A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 53% duty cycle and a delay, followed by the sending of a CM_SLAC_PARM.REQ message
A specific test case description related to the Electric Vehicle Communication Controller (EVCC) for AC vehicle-to-building communication, focusing on SLAC parameter settings)
A specific test case requirement executed as part of the CmSlacParm process
<|COMPLETE|>
A specific test case identifier used in the context of electric vehicle communication and testing, likely related to AC vehicle-to-grid communication parameters)
A specific test case identifier used in the context of testing electric vehicle communication controller (EVCC) functionalities related to AC vehicle-to-building (VTB) communication and SLAC parameter settings
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_001
Description: A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging parameters
A specific test case requirement executed as part of the CmSlacParm process
A test case identifier used to describe a specific test scenario and evaluate certain parameters related to electric vehicle communication.
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_002
Description: A test case designed to execute the GoodCase procedure, indicating a 5% duty cycle with a delay after initial CP State B transition, and counting the number of CM_SLAC_PARM.REQ repetitions without sending a CM_SLAC_PARM.CNF message until a timer expires
A test case designed to verify the parameters and behavior of the EVCC in relation to the SLAC protocol, ensuring proper communication and functionality
A specific test case identifier used in a testing framework related to electric vehicle communication, including both charging parameters and technology.
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_004
Description: <|COMPLETE|>
A test case that evaluates the EVCC's communication and configuration settings under the SLAC protocol, with particular attention to signal and payload parameters
A test case designed to execute the GoodCase procedure, involving a 5% duty cycle with a delay after initial CP State B transition, and counting the number of CM_SLAC_PARM.REQ repetitions with valid parameters
A specific test case identifier used in both a testing framework and a table, likely related to electric vehicle communication or charging parameters.
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_005
Description: <|COMPLETE|>
A specific test case description used in the context of electric vehicle communication and technology testing)
A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 5% duty cycle and other parameters
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or technology
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_006
Description: <|COMPLETE|>
A test case process for executing specific parameters related to CmSlac in electric vehicle communication
A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 5% duty cycle and specific conditions related to CM_SLAC_PARM.REQ messages
A specific test case identifier used in a testing framework related to electric vehicle communication, likely concerning charging parameters or systems.
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_007
Description: A test case identifier used to describe a specific test scenario related to electric vehicle communication
<|COMPLETE|>
A test case process for executing specific parameters related to CmSlac in electric vehicle communication
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging systems
A specific test case description used in the context of electric vehicle communication and testing)
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_008
Description: A test case process for executing specific parameters related to CmSlac in electric vehicle communication
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or technology
A test case designed to execute the GoodCase procedure, indicating a 5% duty cycle with a delay after initial CP State B transition, and counting the number of CM_SLAC_PARM.REQ repetitions including a valid runID and additional parameters
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_009
Description: A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 5% duty cycle and specific message handling requirements
A test case process designed to verify the SLAC parameter communication in the EVCC system
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging systems
A test case process for executing specific parameters related to CmSlac in electric vehicle communication
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_012
Description: A test case designed to verify certain parameters of the SLAC protocol using the EVCC_Tester system
A specific test case requirement executed as part of the CmSlacParm process
A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure with a 5% duty cycle and delay, related to electric vehicle communication
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging systems
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_013
Description: A test case identifier used to describe a specific test scenario related to electric vehicle communication
A specific test case requirement executed as part of the CmSlacParm process
<|COMPLETE|>
Another test case aimed at testing SLAC protocol parameters with the EVCC_Tester system
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging parameters.
--------------------------------------------------------------------------------
Entity: TC_EVCC_CMN_VTB_CMSLACPARM_014
Description: A test case identifier used to describe a specific test scenario related to electric vehicle communication
A further test case for evaluating SLAC protocol parameters using the EVCC_Tester system
A specific test case requirement executed as part of the CmSlacParm process
<|COMPLETE|>
A specific test case identifier used in the context of testing communication parameters related to electric vehicle communication controllers)
A specific test case identifier used in a testing framework, likely related to electric vehicle communication or charging parameters
--------------------------------------------------------------------------------
Entity: TC_SECC_AC_VTB_CMSLACPARM_002
Description: A test case procedure executed by the Test System to verify specific behaviors and transitions in the communication protocol for electric vehicle supply equipment
<|COMPLETE|>
A specific test case identifier used in a testing framework, likely related to the communication or parameter settings in an electric vehicle charging context)
A specific test case identifier used in a testing framework, likely related to the communication parameters of an AC vehicle-to-building (VTB) system)
A specific test case process that runs on the SECC_Tester system to verify SLAC parameters
A specific test case description used in the context of testing, likely related to communication or parameter settings in a system)
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_ATTENUATIONCHARACTERIZATION_002
Description: A test case designed to evaluate the attenuation characterization in a communication system, involving the execution of a GoodCase procedure and the exchange of specific messages
<|COMPLETE|>
Another test case process for characterizing signal attenuation in the SECC communication system
A specific test case for characterizing the attenuation properties in a communication system related to vehicle-to-grid technologies.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_001
Description: A test case process that runs on the SECC_Tester system to verify SLAC parameter communication
<|COMPLETE|>
A test case executed to verify SLAC parameters under specific conditions in the SECC environment
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a vehicle-to-grid context)
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system
A test case designed to verify the communication and parameter exchange between systems, specifically focusing on the initial CP State B transition and the exchange of CM_SLAC_PARM messages Test case description for 'TC_SECC_CMN_VTB_CmValidate_001'
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_002
Description: Another test case executed to verify SLAC parameters under different conditions in the SECC environment
<|COMPLETE|>
Another test case process similar to TC_SECC_CMN_VTB_CmSlacParm_001, running on the SECC_Tester system for SLAC parameter verification
A test case designed to verify the communication and parameter settings in a vehicle-to-grid system, specifically focusing on the CM_SLAC_PARM message exchange and the initial CP State C transition
A specific test case identifier used in a testing framework related to communication parameters or settings in a vehicle-to-grid context.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_003
Description: A further test case executed to verify SLAC parameters under additional conditions in the SECC environment
<|COMPLETE|>
A test case designed to run specific validation or verification procedures on the SECC_Tester system
A test case identifier used to describe a specific test scenario in the context of vehicle-to-grid communication testing
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system. Test case description for 'TC_SECC_CMN_VTB_CmAmpMap_003'
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_004
Description: <|COMPLETE|>
A test case identifier used to describe a specific test scenario related to the communication between electric vehicle supply equipment and vehicles
A specific test case identifier used in a testing framework, related to communication or parameter settings in both a system and a vehicle-to-grid context.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_005
Description: <|COMPLETE|>
A test case executed to validate SLAC parameter settings in a communication protocol
A test case identifier used to describe a specific test scenario involving the execution of a procedure and the handling of messages in a vehicle-to-grid communication system
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_006
Description: A test case executed to further validate SLAC parameter settings in a communication protocol
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system
A test case identifier used to describe a specific test scenario involving the execution of the GoodCase procedure and the handling of CM_SLAC_PARM.REQ messages
A test case process related to the SLAC parameter characterization in the SECC communication module
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_007
Description: A test case identifier used to describe a specific test scenario involving the execution of a GoodCase procedure and the sending of a CM_SLAC_PARM.REQ message
A specific test case executed under the CmSlacParm condition
<|COMPLETE|>
A test case that runs on the SECC_Tester system to verify SLAC parameter communication
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a vehicle-to-grid context.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_008
Description: A test case procedure where the Test System executes the GoodCase procedure, stays in CP State A, transitions to CP State B, and involves sending and receiving CM_SLAC_PARM messages
<|COMPLETE|>
A test case that runs on the SECC_Tester system to verify SLAC parameter communication with specific conditions
A test case process related to the SECC (Supply Equipment Communication Controller) for validating SLAC (Signal Level Attenuation Characterization) parameters
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system.
--------------------------------------------------------------------------------
Entity: TC_SECC_CMN_VTB_CMSLACPARM_009
Description: Another test case process related to the SECC for validating SLAC parameters
<|COMPLETE|>
A test case that runs on the SECC_Tester system to verify SLAC parameter communication with specific conditions
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a vehicle-to-grid context)
A specific test case identifier used in a testing framework, likely related to communication or parameter settings in a system
A test case identifier used to describe a specific test scenario related to the SECC communication and SLAC parameter handling Test case description for 'TC_SECC_CMN_VTB_CmValidate_009'
--------------------------------------------------------------------------------
Entity: TP_EV_SLAC_INIT
Description: TP_EV_SLAC_init refers to the time window within which an electric vehicle must initiate the SLAC parameter request
The time between plug-in (state B detected) or wake-up and start of matching by the EV, indicating the initialization timing for SLAC
--------------------------------------------------------------------------------
Entity: TT_EVSE_MATCH_SESSION
Description: A process involving a session to match or validate communication messages specifically related to Electric Vehicle Supply Equipment (EVSE)
A session process for matching EVSE, which can timeout and affect the validation outcome
A process involved in matching the EVSE with the system under test (SUT) to ensure compatibility and readiness
A session process related to matching or validating the connection between an EVSE and another system
A term referring to the session during which the matching process between the EVSE and another entity is conducted
A timer used in the test case to determine the duration before sending a CM_SLAC_MATCH.REQ message
A term referring to the maximum time value allowed for the EVSE to receive a matching request from the EV
Maximum time from the expiration of TT_EVSE_MATCH_MNBC to the reception of either CM_VALIDATE.REQ or CM_SLAC_MATCH.REQ
A process session specifically for matching and validating communication with an EVSE
A timer that expires before the CM_SLAC_MATCH.REQ message is sent
A timer used to manage the session duration for matching EV and EVSE in the test case
TT_EVSE_match_session is a process for matching Electric Vehicle Supply Equipment (EVSE) sessions in the SLAC communication protocol, which can fail due to timeouts and involves confirming matches between EVSE and the protocol.
A process related to the matching session for Electric Vehicle Supply Equipment (EVSE) is considered failed if it times out and is not completed in time.
A timer is used in the SLAC validation process to manage the session duration for matching settings between EV and EVSE.
--------------------------------------------------------------------------------
Entity: TT_EVSE_SLAC_INIT
Description: A timer used in the test case to determine the maximum waiting period before sending a CM_SLAC_PARM.REQ message
A term referring to the timeout timer used by the EVSE during the SLAC initialization process
A term referring to a specific timer used in the initialization process of electric vehicle supply equipment communication
A timer used in the test system to determine the maximum waiting period before sending a specific message
A test case for initializing SLAC in the Electric Vehicle Supply Equipment
A timer used in the context of Electric Vehicle Supply Equipment (EVSE) to manage the duration for which certain operations or responses are valid
Time between detecting state B and receiving CM_SLAC_PARM.REQ on the EVSE side
A process involving the initialization of SLAC in the context of EVSE, ensuring readiness for communication
TT_EVSE_SLAC_init is a timer related to the SLAC protocol that manages the initialization process of the EVSE and indicates the timeout period for receiving SLAC requests.
The initialization of the EVSE (Electric Vehicle Supply Equipment) using the SLAC (Signal Level Attenuation Characterization) protocol, utilized in power line communication.
--------------------------------------------------------------------------------
Entity: TT_MATCHING_REPETITION TIMER
Description: A timer that controls the repetition of the CM_SLAC_PARM.REQ messages
--------------------------------------------------------------------------------
Entity: TT_MATCH_RESPONSE
Description: TT_match_response is a term referring to a timer used to manage response matching in EVSE communication processes
TT_match_response is a term referring to the maximum time allowed for the EV to receive a valid confirmation message from the EVSE
A term referring to the response expected during the matching process, which can timeout if not received in time
A timer that determines when the system under test should send a confirmation message
A term used to describe the response time for a matching process in a communication protocol
A term referring to the maximum time value that the EV waits for a response during the SLAC parameter exchange phase
A timer that dictates when a response is expected from the SUT after a match request
A timer used in the validation process to determine the duration for which the system waits for a response match
A process to match and verify the response received during the validation process
A time interval within which the EVSE should respond to a CM_SLAC_MATCH.REQ retry from the EV
A timer used to determine the duration before expecting a CM_SLAC_MATCH.CNF message
TT_match_response is a timer term used to track the duration for which an electric vehicle waits for a response after sending a validation request
A process involving the response to a match request, which can timeout if the CM_SLAC_MATCH.REQ message is not repeated
A timer used to determine the duration before a response is expected in the SLAC validation process
A term referring to the time duration within which a response is expected in the communication process between an EV and the charging infrastructure
A timer used to measure the response time for matching processes in the SLAC protocol
A timer used in the test case to determine when the CM_SLAC_PARM.CNF message should not be sent
A timer used to determine the time frame for expecting a response in the test case
A term referring to the maximum time allowed for receiving a response to a communication request
A process that involves waiting for a response during the matching session
A timer that is initiated after the TP_EV_vald_toggle timer expires, used to manage the response time for validation confirmation
A term referring to the time duration within which a response is expected in the communication process
A process or response mechanism that is initiated under certain conditions in the V2G3 standard
A timer used in the test case to determine when the CM_AMP_MAP.CNF message should be sent
TT_match_response is a term referring to a timer used to manage response matching in the SLAC protocol
A process related to matching responses in electric vehicle communication
A timer that dictates when a response to a SLAC match request should be expected
A timer that determines when the CM_SLAC_PARM.CNF message should be sent by the system under test
A process in the SLAC protocol related to matching responses during communication setup
Time that the EV/EVSE shall wait for a response from the EVSE/EV
A timer that determines when the CM_SLAC_MATCH.CNF message should be sent by the SUT
A process involved in the communication protocol where a response is expected after a matching request is sent
TT_match_response is a process that involves matching and validating responses during communication exchanges.
TT_match_response is a process in the SLAC communication protocol that involves matching responses, waiting for a confirmation message, and handling responses.
--------------------------------------------------------------------------------
Entity: V2G3-A06-05
Description: A specific requirement stating that the low-layer communication module on the EV side shall not respond to certain MMEs
A specific requirement within the V2G3 standard, testable only partially for selected cases
--------------------------------------------------------------------------------
Entity: V2G3-A09-13
Description: A specific requirement within the V2G3 standard, testable only partially
A specific requirement related to the V2G3 standard, detailing conditions under which the EVSE should consider that no SLAC will be performed
--------------------------------------------------------------------------------


TABLE INFORMATION:
Table 1: A.9.1.2 Description of involved MMEs - Table A.2 — Involved MMEs for parameters exchange
Table 2: A.8 Timings and constants - Table A.1 (continued)
Table 3: 8 Timings and constants - Table 3 — Timing and constant values
Table 4: A.8 Timings and constants - Table A.4 (continued)

FIGURE INFORMATION:
Figure 1: A.9.8.1 Example of matching process error handling - Figure A.9 — Example of sequence chart of matching process error handling

Image Description for Figure A.9:
# Detailed Description of Figure A.9 — Example of Sequence Chart of Matching Process Error Handling

Below is a step-by-step explanation, in **Markdown** format, of the sequence chart labeled **Figure A.9**. This figure illustrates the **SLAC (Signal-Level Attenuation Characterization) matching process** between an Electric Vehicle (EV) and an Electric Vehicle Supply Equipment (EVSE), with emphasis on how errors and timing constraints are handled. The diagram shows four main entities:

1. **EV Host**  
2. **EV PLC node** (the EV’s low-layer communication module)  
3. **EVSE PLC node** (the EVSE’s low-layer communication module)  
4. **EVSE Host**

Various **timers** and **messages** govern the retry logic, confirmations, and triggering conditions. The goal is to establish a matched communication link (sometimes referred to as SLAC matching). This specific figure highlights an error-handling example where the EV repeatedly sends parameter requests until the EVSE’s low-layer module is fully ready.

---

## 1. Entities and Their Roles

1. **EV Host**  
   - Coordinates overall EV-side communication and initiates the SLAC matching sequence upon detecting plug-in or other triggers.  
   - Waits for “Matching Process Start Trigger” to begin SLAC parameter exchange.

2. **EV PLC Node**  
   - The EV’s low-layer communication module that actually sends and receives SLAC messages (e.g., CM_SLAC_PARM.REQ).  
   - Interacts with the EVSE’s PLC node to configure parameters, confirm matching status, and finalize the SLAC link.

3. **EVSE PLC Node**  
   - The EVSE’s low-layer communication module. It responds to requests from the EV PLC node and eventually sends a CM_SLAC_PARM.CNF message when ready.  
   - May be initially “asleep” or in a booting state, causing the EV to resend parameter requests if no confirmation is received.

4. **EVSE Host**  
   - Oversees the EVSE side, can send key-setting commands to the EVSE PLC node (CM_SET_KEY.REQ) and receives confirmations (CM_SET_KEY.CNF).  
   - Also waits internally for the “Matching Process Start Trigger” before instructing the low-layer module to proceed with matching.

---

## 2. Key Messages in the Chart

- **CM_SET_KEY.REQ** / **CM_SET_KEY.CNF**  
  Used by the EVSE Host to set cryptographic or network keys in the EVSE PLC module. A request/confirmation exchange (REQ/CNF) ensures keys are established before proceeding.

- **CM_SLAC_PARM.REQ**  
  A crucial request message sent by the EV PLC node. It initiates or retries the SLAC parameter negotiation. Several of these may be sent if the EVSE PLC node is not yet ready to respond.

- **CM_SLAC_PARM.CNF**  
  The confirmation message that the EVSE PLC node sends in response to a valid CM_SLAC_PARM.REQ. Once this is received by the EV PLC node, the matching process can progress to the next stage (or conclude if final parameters are agreed).

---

## 3. Timers and Their Significance

The figure shows multiple timers or time parameters in the margin. Each timer serves a distinct purpose in error handling and retry logic during matching:

- **TP_EV_SLAC_init**:  
  A time parameter on the EV side. Indicates when the EV is ready to start sending SLAC messages after plug-in or initialization.

- **TT_EVSE_SLAC_init**:  
  A similar timeout event on the EVSE side, signifying the EVSE’s readiness for the matching process (or that it is still booting).

- **TT_match_response** and **TP_match_response**:  
  Both appear repeatedly in the message sequence. They govern how long each side waits for a response to SLAC messages (e.g., how long the EV will await a CM_SLAC_PARM.CNF before resending a CM_SLAC_PARM.REQ).  
  - “TT_match_response” often indicates a test timeout or internal handling.  
  - “TP_match_response” can denote a performance or protocol timer requiring the message to be answered within a specific duration.

- **TT_matching_rate**:  
  A wait time before restarting the SLAC matching process after a failure or no-response scenario. Used to avoid flooding the network with frequent retry attempts.

- **TT_matching_repetition**:  
  The maximum duration or repetition window during which multiple matching attempts can be retried before concluding that matching has failed entirely.

- **TT_match_sequence** / **TP_match_sequence**:  
  These timers define or bound the overall sequence of matching attempts. “TT_match_sequence” may mark the final stage of the matching process or the cutoff for the entire exchange sequence.

---

## 4. Step-by-Step Flow of the Sequence Chart

### A. Initial Key-Setting on the EVSE Side

1. **EVSE Host → EVSE PLC node: CM_SET_KEY.REQ**  
   - The EVSE Host sends a request to configure or set security/network keys on the EVSE PLC node.

2. **EVSE PLC node → EVSE Host: CM_SET_KEY.CNF**  
   - The EVSE PLC node confirms successful key setting back to the EVSE Host.  
   - After this step, the EVSE side is (or soon will be) ready to exchange SLAC parameters, once the matching trigger event starts.

### B. Waiting for Matching Process Start

3. **EV Host**: “Wait for Matching Process Start Trigger”  
   - On the EV side, the system is idle until the matching process is triggered (e.g., plug-in detected or higher-layer instruction).

4. **EVSE Host**: “Wait for Matching Process Start Trigger”  
   - Similarly, the EVSE Host is also waiting for the condition to begin the SLAC matching process.

5. **TP_EV_SLAC_init** and **TT_EVSE_SLAC_init**  
   - These timers are activated (or at least monitored) to ensure both sides begin matching in a timely manner.  
   - “TP_EV_SLAC_init” is often started on the EV side, while “TT_EVSE_SLAC_init” is tracked on the EVSE side.

### C. Repeated SLAC Parameter Requests and Error Handling

6. **EV PLC node → EVSE PLC node: CM_SLAC_PARM.REQ** (Attempt 1)  
   - As soon as the EV is ready, it sends the first parameter request to the EVSE.  
   - If the EVSE PLC node is not fully operational yet, no immediate response is given.

7. **Timer Trigger: TT_match_response** or **TP_match_response**  
   - The EV waits for a response from the EVSE PLC node within a defined time.  
   - If no **CM_SLAC_PARM.CNF** is received, the EV concludes the EVSE is not ready and may resend the request.

8. **EV PLC node → EVSE PLC node: CM_SLAC_PARM.REQ** (Attempt 2, 3, …)  
   - The EV PLC node continues sending CM_SLAC_PARM.REQ at intervals governed by **TT_match_response** (or **TP_match_response**).  
   - Each attempt is followed by another wait period.  
   - If the EVSE PLC node remains unresponsive, the timer **TT_matching_rate** might also come into play to delay the next retry.

9. **TT_matching_repetition**  
   - This overarching timer is running in the background. It ensures the total number of attempts remains within a certain window.  
   - If the EV times out on repeated attempts (and **TT_matching_repetition** expires), the process transitions to a “failed” state.

10. **EV PLC node → EVSE PLC node: CM_SLAC_PARM.REQ** (Final Attempt)  
    - Eventually, the EVSE PLC node is ready (i.e., has finished booting or is fully awake).

11. **EVSE PLC node → EV PLC node: CM_SLAC_PARM.CNF**  
    - At long last, the EVSE responds with the confirmation message.  
    - Reception of **CM_SLAC_PARM.CNF** indicates that the EVSE PLC node has accepted the request parameters and has effectively “caught up” to the EV’s repeated attempts.

### D. Conclusion of Matching Sequence

12. **TP_match_sequence** and **TT_match_sequence**  
    - As soon as the correct confirmation is received, the final matching sequence timers are observed.  
    - Typically, this implies the SLAC parameter exchange has succeeded, or at least the matching process can progress to the next step in the standard (e.g., amplitude map exchange or final link readiness).

13. **Matched State**  
    - Once a valid exchange has completed, the link enters the “Matched” state (per the standard’s definitions).  
    - At this point, no further **CM_SLAC_PARM** messages should be sent (per [V2G3-A09-118]) unless the process fails or restarts.

---

## 5. Relationships and Connections

1. **Key Setting First, Then SLAC Matching**  
   - The EVSE Host sets up keys on the EVSE PLC node before the matching process triggers.  
   - This ensures that secure or correct network parameters are in place once the EV and EVSE attempt to exchange SLAC parameters.

2. **Timers Govern Retrying and Error Handling**  
   - Each **CM_SLAC_PARM.REQ** attempt has a corresponding timer (TT_match_response / TP_match_response). If no reply is received within that window, the EV resends.  
   - Global repetition timers **TT_matching_repetition** and **TT_matching_rate** regulate how often and how many times the EV can resend these requests before declaring failure.

3. **Confirmation Ends Parameter Repetition**  
   - Once **CM_SLAC_PARM.CNF** arrives, the repeated attempts stop.  
   - The EV and EVSE effectively coordinate to finalize the link parameters.

4. **High-Level Wait States**  
   - Both the EV Host and EVSE Host remain in a “Wait for Matching Process Start Trigger” state until preconditions (like plug-in or system readiness) are met.  
   - Only after triggers and initial timers do the low-layer modules actually exchange messages.

---

## 6. Summary

Figure A.9 demonstrates a **typical SLAC matching sequence** with a strong focus on **error recovery and timing**. The EV tries multiple times to initiate the parameter exchange, while the EVSE might be booting or unready to respond. Each repeated **CM_SLAC_PARM.REQ** is gated by **TT_match_response**. If the EVSE still does not confirm, the EV eventually retries but must obey the higher-level timers (**TT_matching_rate**, **TT_matching_repetition**). Ultimately, the EVSE PLC node becomes active, responds with **CM_SLAC_PARM.CNF**, and the process can conclude successfully within **TT_match_sequence**.  

Such a design ensures robust handling of real-world delays (e.g., EVSE boot times) and aligns with ISO 15118-3 requirements that define how an “Unmatched” state eventually transitions to “Matched,” or else leads to a matching failure if all retries are exhausted.

---

> **Note:** These timers, messages, and states are specified in ISO 15118-3 Annex A for HomePlug Green PHY communication over the vehicle’s control pilot line. The standard also provides additional constraints (e.g., amplitude map exchange in A.9.6) and states that no further SLAC messages shall be processed once a “Matched” state is achieved ([V2G3-A09-118]).


Image Description for Figure 1:
# Detailed Description of Figure 1 — Overview of [ISO‑0] in the ISO/IEC OSI Reference Model

Below is a comprehensive, step-by-step explanation of the diagram labeled **“Figure 1 — Overview of [ISO-0] in the ISO/IEC OSI reference model.”** Although this figure is not a traditional “flowchart” (with decision diamonds or arrows depicting process steps), it provides a layered architectural view of how the ISO 15118 standards align with the classic ISO/IEC Open Systems Interconnection (OSI) reference model. In the sections below, each labeled entity is identified, and its role and connections are described in detail.

---

## 1. Entities in the Figure

1. **OSI layer 1 Physical**  
2. **OSI layer 2 Data link**  
3. **OSI layer 3 Network**  
4. **OSI layer 4 Transport**  
5. **OSI layer 5 Session**  
6. **OSI layer 6 Presentation**  
7. **OSI layer 7 Application**  
8. **Vehicle-to-Grid communication**  
9. **ISO 15118‑1**  
10. **General information and use-case definition**  
11. **ISO 15118‑2**  
12. **Network and application protocol requirements**  
13. **V2G standardized service primitive interface**  
14. **ISO 15118‑3**  
15. **Physical layer and Data link layer requirements**  
16. **Figure 1 — Overview of [ISO‑0] in the ISO/IEC OSI reference model**  

---

## 2. Overall Structure of the Diagram

The figure is conceptually divided into three major sections (from bottom to top):

1. **Lower Layers (OSI Layer 1 and 2)** – Represented by the ISO 15118‑3 standard.  
2. **Intermediate Layer Boundary** – Indicated by the “V2G standardized service primitive interface,” which bridges ISO 15118‑3 with the higher-layer protocols.  
3. **Higher Layers (OSI Layers 3 through 7)** – Represented by the ISO 15118‑2 standard for network and application-level communication, with references to ISO 15118‑1 for general concepts and use-case definitions.  

Within the big outer box labeled “Vehicle-to-Grid communication,” two standards are highlighted:
- **ISO 15118-1** (covering general info and use-case definitions)
- **ISO 15118-2** (covering network and application protocol requirements)

At the bottom, a second large box is labeled **ISO 15118-3** (covering physical and data link layer requirements). Between these two boxes, a horizontal band is labeled **V2G standardized service primitive interface**, indicating the interface boundary where higher-level protocols interact with physical and data link services.

---

## 3. Layer-by-Layer Description

### 3.1 OSI Layer 1 (Physical)
- **Name in Diagram**: “OSI layer 1 Physical.”  
- **Role**: The physical layer is responsible for the transmission and reception of raw bitstreams over a physical medium—e.g., the actual cable or wireless medium used for communications.  
- **Referenced Standard**: **ISO 15118‑3** covers the physical layer requirements, ensuring that electric vehicles (EVs) and charging stations (EVSEs) are interoperable at the physical signal level (e.g., Power Line Communication (PLC), electromagnetic compatibility requirements, etc.).

### 3.2 OSI Layer 2 (Data Link)
- **Name in Diagram**: “OSI layer 2 Data link.”  
- **Role**: The data link layer establishes and terminates a connection between two physically connected nodes, handling error detection/correction and basic framing.  
- **Referenced Standard**: **ISO 15118‑3** also covers the data link layer requirements (e.g., MAC addressing, PLC MAC layer specifics) to ensure a stable “low-layer” communication for Vehicle-to-Grid (V2G).

Both Layer 1 and Layer 2 appear inside the “ISO 15118‑3” box. They are the core focus of “Part 3” of the ISO 15118 series, which defines how signals and data frames are sent over the physical medium and how they link up into a standardized “pipe” for higher-layer messages.

### 3.3 V2G Standardized Service Primitive Interface
- **Name in Diagram**: “V2G standardized service primitive interface.”  
- **Role**: This horizontal band sits between the physical/data link layers (bottom) and the upper layers (top). It serves as a boundary or interface that allows the protocols described in ISO 15118‑2 (network and application) to communicate with the lower-layer technology specified by ISO 15118‑3.  
- **Importance**: It defines how services and primitives (e.g., data requests, acknowledgements, connection management) are exchanged between the data link layer and higher network/application layers. This is the main “handshake” region that ensures a consistent interface across potentially different hardware or firmware implementations.

### 3.4 OSI Layer 3 (Network)
- **Name in Diagram**: “OSI layer 3 Network.”  
- **Role**: The network layer handles packet forwarding, including routing through intermediate routers. In the scope of V2G, it organizes data exchange at the IP layer (or other possible network-layer protocols).  
- **Referenced Standard**: **ISO 15118‑2** is responsible for specifying how the network layer is used for V2G communication (e.g., IP addressing, transport selection requirements).

### 3.5 OSI Layer 4 (Transport)
- **Name in Diagram**: “OSI layer 4 Transport.”  
- **Role**: Responsible for reliable or unreliable end-to-end transport of data (e.g., TCP/UDP). In V2G contexts, this layer ensures robust message delivery or streaming.  
- **Referenced Standard**: Again, covered by **ISO 15118‑2**, which dictates how the transport layer interacts with the network layer and the session layer to support the V2G protocols.

### 3.6 OSI Layer 5 (Session)
- **Name in Diagram**: “OSI layer 5 Session.”  
- **Role**: Helps manage and control the connections between applications, establishing, maintaining, and terminating communication sessions.  
- **Referenced Standard**: Part of the **ISO 15118‑2** coverage, ensuring session-oriented capabilities (like initiating a charging session, exchanging messages for contract authorization, etc.).

### 3.7 OSI Layer 6 (Presentation)
- **Name in Diagram**: “OSI layer 6 Presentation.”  
- **Role**: Ensures that data is in a usable format for the application layer—handling data encryption, serialization, and translation if necessary.  
- **Referenced Standard**: **ISO 15118‑2** also governs how data representation and encoding details (e.g., XML, EXI) are handled in the V2G messages.

### 3.8 OSI Layer 7 (Application)
- **Name in Diagram**: “OSI layer 7 Application.”  
- **Role**: Closest to the end-user; in V2G, it describes the application-level data exchanges that facilitate use-cases like contractual identification, pricing, charging profiles, and energy management.  
- **Referenced Standard**: **ISO 15118‑2**. All relevant V2G messages (e.g., request/response for charging schedules, authentication, or payment) are part of the application layer protocols described here.

### 3.9 Vehicle-to-Grid Communication (Top-Level Box)
- **Name in Diagram**: “Vehicle-to-Grid communication.”  
- **Role**: This large box depicts the entire scope of “V2G” communication from an OSI perspective—covering from network to application aspects. It conceptually contains two key parts:
  1. **ISO 15118‑1** (General information and use-case definition)  
  2. **ISO 15118‑2** (Network and application protocol requirements)

  Where **ISO 15118‑1** sits within the conceptual top-level because it outlines overarching use-cases and contexts, while **ISO 15118‑2** addresses the technical details of how to implement them in the network/application layers.

### 3.10 ISO 15118‑1
- **Name in Diagram**: “ISO 15118‑1.”  
- **Caption**: “General information and use-case definition.”  
- **Role**: Provides the foundational concepts, goals, and use-case scenarios for V2G. It does not specify OSI layers per se but offers the background and scope for the more technical parts (‑2 and ‑3).

### 3.11 ISO 15118‑2
- **Name in Diagram**: “ISO 15118‑2.”  
- **Caption**: “Network and application protocol requirements.”  
- **Role**: Defines how the EV and EVSE communicate over the network and at the application layer to fulfill the use-cases that ISO 15118‑1 describes. It covers OSI layers 3 through 7 and ensures interoperability in message structuring, security, authentication, plug-and-charge features, etc.

### 3.12 ISO 15118‑3
- **Name in Diagram**: “ISO 15118‑3.”  
- **Caption**: “Physical layer and Data link layer requirements.”  
- **Role**: Specifies the physical mediums, data link procedures (PLC modems, MAC sublayer specifics), and any hardware-level interoperability requirements, including timing, cable specifications, electromagnetic compatibility, etc. This standard ensures that EV and EVSE can transmit signals reliably so that higher-layer protocols (ISO 15118‑2) can function as intended.

---

## 4. Relationship and Connections

1. **ISO 15118‑3 → V2G Standardized Service Primitive Interface**  
   - ISO 15118‑3 defines how data is physically encoded/decoded, then delivered to the next layer via service primitives. The horizontal interface states exactly how these data units or service requests move up to the higher layers.

2. **V2G Standardized Service Primitive Interface → ISO 15118‑2**  
   - The standardized interface allows protocols defined in ISO 15118‑2 to operate independently of the underlying physical or data link technologies. This separation provides modularity and helps different hardware implementations remain compatible as long as they abide by the same interface primitives.

3. **ISO 15118‑2 → OSI Layers 3–7**  
   - ISO 15118‑2 “lives” across the network, transport, session, presentation, and application layers, specifying how messages are constructed, routed, and validated for end-to-end V2G communication.

4. **ISO 15118‑1 → Overall**  
   - Although not explicitly mapped to a single OSI layer, ISO 15118‑1 supplies the conceptual building blocks—e.g., high-level use-cases, general requirements, and definitions—that shape the services needed in layers 1–7.

5. **Vehicle-to-Grid Communication (Overall)**  
   - Encompasses the end-to-end scenario, from the physical signals (lowest layer) to the application messages (highest layer). The entire diagonal or wave-like region that includes ISO 15118‑1 and ISO 15118‑2 is conceptually the V2G communication “stack,” reliant upon the hardware-level foundation described by ISO 15118‑3.

---

## 5. How the Diagram “Flows”
While not a classic procedural “flowchart,” the layering suggests an upward flow of data and messages:

1. **Physical/Layer 1**: Signals on the cable or PLC.  
2. **Data Link/Layer 2**: Data is framed, and local links are established error-free.  
3. **V2G Service Interface**: The boundary where well-defined primitives let higher-level protocols control or request link services.  
4. **Network, Transport, Session, Presentation, Application (Layers 3–7)**: Actual V2G messages, session management, security, and application data (e.g., payment, contract ID exchange).  

Each standard (ISO 15118‑1, ISO 15118‑2, and ISO 15118‑3) is responsible for a portion of this layered model. ISO 15118-1 sets the context, ISO 15118-2 handles the upper communication layers, and ISO 15118-3 ensures the physical/data link reliability.

---

## 6. Key Takeaways for Engineers

- **Separation of concerns**: The figure neatly distinguishes the physical/data link requirements (ISO 15118‑3) from the network-to-application requirements (ISO 15118‑2), with ISO 15118‑1 providing conceptual underpinnings.  
- **Modularity**: By adhering to the OSI layering, manufacturers can update physical or data link implementations without forcing redesign of higher-layer protocols, as long as the standardized service interface remains intact.  
- **Interoperability**: Each layer’s compliance ensures that an EV from one vendor can communicate effectively with an EVSE from another vendor—covering everything from signal waveforms to network addresses to high-level billing transactions.

---

**Figure 1** thus serves as a foundational reference for how the entire V2G communication stack (layers 1 through 7) aligns with the separate parts of the ISO 15118 standard, illustrating the scope and boundary of each part in the OSI model. The layered design promotes a robust, flexible, and interoperable charging ecosystem for electric vehicles and charging infrastructure.


TEXTUAL INFORMATION:
Text 1: A.9.1.1 Functional description (Context: A.9.1.1 Functional description > A.9.1 Signal strength measurement – parameter exchange > A.9 Matching EV – EVSE process) - Before the signal strength measurement starts, the EV broadcasts the parameters to be used for the following signal strength measurement sequence by means of the message CM_SLAC_PARM.REQ. Any
Text 2: A.9.1.1 Functional description (Context: A.9.1.1 Functional description > A.9.1 Signal strength measurement – parameter exchange > A.9 Matching EV – EVSE process) - unmatched EVSE which receives the parameter exchange broadcast sends a response to the EV by means of the message CM_SLAC_PARM.CNF.
Text 3: A.9.1.2 Description of involved MMEs (Context: A.9.1.2 Description of involved MMEs > A.9.1 Signal strength measurement – parameter exchange > A.9 Matching EV – EVSE process) - [V2G3-A09-04] The MMEs for the parameter exchange shall be used with the following content and be sent as Ethernet unicast/broadcast messages as defined
Text 4: ISO 15118-3:2015(E) ﻿ Licensed to National Tsing Hua University / Yi-Shin Chen (yishin@gmail.com) ISO Store Order: OP-720751 license #1/ Downloaded: 2023-10-04 Single user licence only, copying and networking prohibited. (Context: ISO 15118-3:2015(E) ﻿ Licensed to National Tsing Hua University / Yi-Shin Chen (yishin@gmail.com) ISO Store Order: OP-720751 license #1/ Downloaded: 2023-10-04 Single user licence only, copying and networking prohibited. > 7 Connection coordination > Road vehicles — Vehicle to grid communication interface — Part 3: Physical and data link layer requirements) - Figure 9 Shows AC EVSE control pilot timeout handling for 5 % control pilot duty cycle. See [V2G3 M06-07].
Text 5: A.9.8.1 Example of matching process error handling (Context: A.9.8.1 Example of matching process error handling > A.9.8 General error handling and timing constraints > A.9 Matching EV – EVSE process) - Figure A.9 gives an example of matching process error handling. The low-layer communication module of the EV is awake and the low-layer communication module of the EVSE is asleep. The EVCC sends first CM_SLAC_PARM.REQ message immediately after cable plug-in. The EVSE has to boot its low-layer communication module and is not able to answer the CM_SLAC_PARM.REQ message. After the low-layer communication module on the EVSE side is ready for communication, it sends a CM_SLAC_PARM.CNF.

ADDITIONAL CONTEXT:
Related Information 1: unmatched EVSE which receives the parameter exchange broadcast sends a response to the EV by means of the message CM_SLAC_PARM.CNF. (sibling of Text 1)
Related Information 2: [V2G3-A09-03] A SLAC request shall only be responded by EVSEs low-layer communciation module if all the following conditions are fulfilled: (sibling of Text 1)
Related Information 3: — EVSE is connected to an EV, detected by a valid control pilot; (sibling of Text 1)
Related Information 4: — EVSE is in “Unmatched” state. (sibling of Text 1)
Contextual Information 1: A.9.1.1 Functional description (ancestor of Text 1)
Contextual Information 2: A.9.1 Signal strength measurement – parameter exchange (ancestor of Text 1)
Contextual Information 3: A.9 Matching EV – EVSE process (ancestor of Text 1)
Related Information 5: Before the signal strength measurement starts, the EV broadcasts the parameters to be used for the following signal strength measurement sequence by means of the message CM_SLAC_PARM.REQ. Any (sibling of Text 2)
Related Information 6: Table A.2 — Involved MMEs for parameters exchange (sibling of Text 3)
Related Information 7: Table A.2 — Involved MMEs for parameters exchange <table border="1"> <td colspan="1" rowspan="1">MME</td> <td colspan="1" rowspan="1">Field</td> <td colspan="1" rowspan="1">Octet&lt;br&gt;No.</td> <td colspan="1" rowspan="1">Field&lt;br&gt;Size&lt;br&gt;(Octets)</td> <td colspan="1" rowspan="1">Value</td> <td colspan="1" rowspan="1">Definition</td> <tr> <td colspan="1" rowspan="3">CM_SLAC_PARM.REQ&lt;br&gt;Broadcast</td> <td colspan="1" rowspan="1">APPLICATION_TYPE</td> <td colspan="1" rowspan="1">0</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “PEV-&lt;br&gt;EVSE matching”</td> </tr> <tr> <td colspan="1" rowspan="1">SECURITY_TYPE</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “No&lt;br&gt;Security”</td> </tr> <tr> <td colspan="1" rowspan="1">RunID</td> <td colspan="1" rowspan="1">2 to 9</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">Identifier for a matching&lt;br&gt;run, randomly chosen by&lt;br&gt;the EV for each CM_SLAC_&lt;br&gt;PARM.REQ message and&lt;br&gt;constant for all following&lt;br&gt;messages of the same run</td> </tr> <tr> <td colspan="1" rowspan="5">CM_SLAC_PARM.CNF&lt;br&gt;Unicast</td> <td colspan="1" rowspan="1">M-SOUND_TARGET</td> <td colspan="1" rowspan="1">0 to 5</td> <td colspan="1" rowspan="1">6</td> <td colspan="2" rowspan="1">0xFFFFFFFFFFFF Fixed value indicating that&lt;br&gt;M-Sounds to be sent as Eth-&lt;br&gt;ernet broadcast</td> </tr> <tr> <td colspan="1" rowspan="1">NUM_SOUNDS</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">C_EV_match_&lt;br&gt;MNBC</td> <td colspan="1" rowspan="1">Number of expected&lt;br&gt;M-Sounds transmitted by&lt;br&gt;the GP station during the&lt;br&gt;SLAC process</td> </tr> <tr> <td colspan="1" rowspan="1">Time_Out</td> <td colspan="1" rowspan="1">7</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x06</td> <td colspan="1" rowspan="1">Duration TT_EVSE_&lt;br&gt;match_MNBC while the&lt;br&gt;EVSE receives incoming&lt;br&gt;M-SOUNDS after a CM_&lt;br&gt;START_ATTEN_CHAR.IND</td> </tr> <tr> <td colspan="1" rowspan="1">RESP_TYPE</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x01</td> <td colspan="1" rowspan="1">Fixed value indicating&lt;br&gt;“Other GP station”</td> </tr> <tr> <td colspan="1" rowspan="1">FORWARDING_STA</td> <td colspan="1" rowspan="1">9 to&lt;br&gt;14</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">EV Host MAC&lt;br&gt;address</td> <td colspan="1" rowspan="1">The destination of SLAC&lt;br&gt;results is always the EV&lt;br&gt;Host</td> </tr> <tr> <td colspan="1" rowspan="3"></td> <td colspan="1" rowspan="1">APPLICATION_TYPE</td> <td colspan="1" rowspan="1">15</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “PEV-&lt;br&gt;EVSE Matching”</td> </tr> <tr> <td colspan="1" rowspan="1">SECURITY_TYPE</td> <td colspan="1" rowspan="1">16</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “No&lt;br&gt;Security”</td> </tr> <tr> <td colspan="1" rowspan="1">RunID</td> <td colspan="1" rowspan="1">17 to&lt;br&gt;24</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">This value shall be the same&lt;br&gt;as the one sent in the CM_&lt;br&gt;SLAC_PARM.REQ message&lt;br&gt;by the EV</td> </tr> </table> (sibling of Text 3)
Contextual Information 4: A.9.1.2 Description of involved MMEs (ancestor of Text 3)
Related Information 8: Figure 5 shows an AC EVSE supporting HLC-C with PnC and EIM. The matching process is already started when EIM is done. The EVSE applies 5 % control pilot duty cycle after plug-in. Control pilot state X1 could be applied for a short time until the control pilot oscillator is switched on. If an EVSE only supports EIM or PnC, only some branches exist. (sibling of Text 4)
Related Information 9: X2 (5 % or nom.) "Matched state" and authorization OK EIM done & matching process started X1 X2 (nom.) X2 (nom.) X2 (5 % or nom.) b) EIM w. BC HLC-C HLC-C BC V2G Setup �inished Note: X1 is required by TS 62763 X2 (nom.) X2 (5 % or nom.) c) EIM V2G Setup �inished a) PnC Plug-in X1 or X2 (5 %) X2 (5 %) Re-init (sibling of Text 4)
Related Information 10: Key (sibling of Text 4)
Related Information 11: possible procedure mandatory procedure HLC-C charging controlled by high-level communication BC charging controlled by IEC 61851-1 trigger condition (sibling of Text 4)
Related Information 12: NOTE CP state X1 is allowed instead of X2 (nom.) following [IEC-3] (Table 5, X1 state usage). (sibling of Text 4)
Related Information 13: Figure 5 — Connection coordination Seq 3: AC EVSE with PnC and EIM and matching process started before EIM, 5 % control pilot duty cycle after plug-in (sibling of Text 4)
Related Information 14: Figure 6 shows an AC EVSE supporting HLC-C with PnC and EIM. The matching process is already started when EIM is done. The EVSE applies control pilot state X1 after plug-in. If an EVSE only supports EIM or PnC, only some branches exist. (sibling of Text 4)
Related Information 15: Plug-in X1 (100 %) X2 (5 % or nom.) "Matched state" and authorization OK EIM done & matching process started Re-init X2 (nom.) X2 (nom.) X2 (5 % or nom.) b) EIM w. BC HLC-C HLC-C BC V2G Setup �inished X2 (nom.) X2 (5 % or nom.) c) EIM V2G Setup �inished a) PnC Key (sibling of Text 4)
Related Information 16: possible procedure mandatory procedure (sibling of Text 4)
Related Information 17: HLC-C charging controlled by high-level communication (sibling of Text 4)
Related Information 18: BC charging controlled by IEC 61851-1 (sibling of Text 4)
Related Information 19: trigger condition (sibling of Text 4)
Related Information 20: Figure 6 — Connection coordination Seq 4: AC EVSE with PnC and EIM and matching process started before EIM, control pilot state X1 after plug-in (sibling of Text 4)
Related Information 21: Figure 7 shows an AC EVSE supporting HLC-C with PnC and EIM. EIM is done before plug-in. (sibling of Text 4)
Related Information 22: Figure 7 shows an AC EVSE supporting HLC-C with PnC and EIM. EIM is done before plug-in. X2 (nom.) X2 (nom.) X2 (5 % or nom.) b) EIM w. BC HLC-C BC V2G Setup �inished X2 (nom.) X2 (5 % or nom.) c) EIM w/o BC HLC-C V2G Setup �inished X2 (nom.) X2 (nom.) d) [IEC-1] Plug-in X2 (nom) Re-init A A Key possible procedure mandatory procedure HLC-C charging controlled by high-level communication BC charging controlled by IEC 61851-1 trigger condition (sibling of Text 4)
Related Information 23: Figure 7 — Connection coordination Seq 5: AC EVSE with EIM, EIM before plug-in, control pilot state X2 after plug-in (sibling of Text 4)
Related Information 24: Figure 8 shows a DC EVSE supporting HLC-C with PnC and EIM. First branch shows a PnC case. Second branch shows a case where EIM is done after plug-in. Third branch shows a case where EIM is done before plug-in. (sibling of Text 4)

Image Description for Figure 8:
# Detailed Description of Figure 8 — Connection Coordination Seq 6: DC EVSE with PnC and EIM

Below is a detailed, step‑by‑step explanation of the flowchart in **Figure 8**, entitled **“Connection coordination Seq 6: DC EVSE with PnC and EIM.”** Three distinct scenarios (branches) are shown:  
1. (a) PnC (Plug and Charge)  
2. (c) EIM with EIM after plug‑in  
3. (c) EIM with EIM before plug‑in  

Each branch illustrates how the control pilot states, re‑initialization events, and **V2G (Vehicle‑to‑Grid) setup** are coordinated when using a DC Electric Vehicle Supply Equipment (EVSE).

---

## 1. Entities Overview

Below is a list of key entities and labels as they appear in the figure:

1. **Key**  
   - Explains the meaning of arrow types:  
     - “possible procedure” (dashed arrow)  
     - “mandatory procedure” (solid arrow)  
   - Indicates “HLC‑C” refers to “charging controlled by high‑level communication.”

2. **Plug‑in**  
   - The physical action of connecting the DC charging connector to the vehicle.

3. **X1 or X2 (5%)**  
   - Denotes a control pilot state.  
   - In DC charging context, a 5 % PWM duty cycle can be used to indicate specific conditions (e.g., waiting for authorization or identification).

4. **X2 (5%)**  
   - Another notation of the control pilot state specifically at 5 % duty cycle.  
   - Sometimes the chart transitions from “X1 or X2 (5%)” to a clearly indicated “X2 (5%)” step.

5. **Re‑init (Re‑initialization)**  
   - An event where the system re‑initializes communication or restarts the handshake procedure.

6. **V2G Setup started** and **V2G Setup finished**  
   - These indicate the high‑level communication handshake between the EV and the EVSE for vehicle‑to‑grid functionality.  
   - “V2G Setup started” means the handshake begins.  
   - “V2G Setup finished” means the handshake completes successfully.

7. **HLC‑C** (High‑Level Communication ‑ Control)  
   - Represents charging control via high‑level communication protocols (as defined in ISO 15118).

8. **PnC (Plug and Charge)**  
   - A method of automatically identifying and authorizing an EV for charging, using ISO 15118’s “Plug and Charge” feature.

9. **EIM (External Identification Means)**  
   - A method or profile for identification of the EV user through an external means (e.g., RFID, app, or other mechanism). In some scenarios, EIM is performed before physically plugging in, while in others it occurs after the plug‑in event.

10. **(a) PnC** and **(c) EIM**  
   - Labels on the figure to differentiate which scenario is shown in each branch.

11. **possible procedure** (dashed arrow)  
   - Steps that may or may not occur, depending on system configuration or user action.

12. **mandatory procedure** (solid arrow)  
   - Required steps that must happen in a given scenario.

---

## 2. Flow of the Diagram

### 2.1 Top Branch — (a) PnC Scenario
1. **Plug‑in**  
   - The driver (or automated system) physically connects the DC charging cable to the vehicle.  
2. **X1 or X2 (5%)**  
   - Immediately after plug‑in, the control pilot may be at state X1 or X2 with a 5 % duty cycle, indicating that the EVSE is awaiting identification and/or handshake.  
3. **Transition to X2 (5%)**  
   - The system (EV and EVSE) settles at a 5 % duty cycle for further communication.  
4. **V2G Setup started**  
   - High‑level communication begins (ISO 15118 protocol handshake).  
5. **V2G Setup finished**  
   - The handshake completes successfully. The system is now ready for controlled charging.  
6. **HLC‑C**  
   - The ongoing charging session is controlled by high‑level communication (“HLC‑C”).  
7. **Final Arrow to “PnC”**  
   - The diagram labels this entire scenario under “(a) PnC,” emphasizing that Plug and Charge identification was used.

### 2.2 Middle Branch — (c) EIM Scenario (EIM after Plug‑In)
1. **Plug‑in**  
   - The operator connects the vehicle to the DC charger.  
2. **X1 or X2 (5%)**  
   - Immediately sees the control pilot in a 5 % duty cycle state, awaiting identification or handshake.  
3. **Transition to X2 (5%)**  
   - The control pilot stabilizes at X2 (5 %).  
4. **V2G Setup started**  
   - The vehicle‑to‑grid communication handshake is initiated.  
5. **V2G Setup finished**  
   - The handshake concludes successfully.  
6. **HLC‑C**  
   - Charging is now under high‑level communication control.  
7. **Final Arrow to “c) EIM”**  
   - The scenario is labeled “(c) EIM,” indicating that the system uses an external identification means.  
   - Notably, the figure suggests that the EIM steps occur in or after the plug‑in event (rather than beforehand).

### 2.3 Bottom Branch — (c) EIM Scenario (EIM before Plug‑In)
1. **EIM**  
   - External identification means is carried out **before** physically plugging in the vehicle.  
2. **X1 or X2 (5%)**  
   - The EVSE (or user interface) is in a state where it allows external ID, possibly at a 5 % duty cycle without the EV physically connected.  
3. **Plug‑in**  
   - The user then plugs in the vehicle.  
4. **X1 or X2 (5%)**  
   - Once again, the control pilot is at 5 % duty cycle after plug‑in, still coordinating identification if needed.  
5. **Re‑init**  
   - The system triggers a re‑initialization of the communication if required (for example, if the plug‑in event occurred after some EIM steps).  
6. **V2G Setup started**  
   - The vehicle and EVSE begin the ISO 15118 handshake.  
7. **X2 (5%)**  
   - The control pilot is confirmed at X2 with a 5 % duty cycle while the V2G communication is in progress.  
8. **V2G Setup finished**  
   - Handshake completes; the EV and EVSE are ready for managed charging.  
9. **HLC‑C**  
   - High‑level communication is actively controlling the charging session.  
10. **Final Arrow to “c) EIM”**  
   - Again, labeled “(c) EIM,” but this time with the identification finished **before** the plug‑in event.

---

## 3. Relationship and Connection of Entities

- **“Plug‑in”** is the physical action that introduces the vehicle to the EVSE. In two of the branches (top and middle), EIM/PnC is effectively happening right after or during plug‑in. In the bottom branch, **EIM** occurs **before** the user physically connects the vehicle.  
- **“X1 or X2 (5%)”** stands for specific control pilot states. The 5 % duty cycle often indicates a waiting or authorization phase. The chart consistently shows these states around the plug‑in and re‑init events.  
- **“V2G Setup started”** and **“V2G Setup finished”** encapsulate the ISO 15118 handshake. Once V2G setup finishes, the charger transitions to **HLC‑C** (high‑level communication control).  
- **“Re‑init”** can happen if the system needs to restart or re‑establish the communication sequence for any reason (for instance, if the user performed EIM prior to plug‑in).  
- **“PnC”** is one type of identification method; **“EIM”** is another. Figure 8 illustrates how a DC EVSE can handle both PnC and EIM in multiple possible sequences.

---

## 4. Key Takeaways

1. **Multiple Identification Methods:** The figure highlights that DC charging can be initiated with either PnC or EIM (or both), and the sequence of EIM can vary (before or after plug‑in).  
2. **Control Pilot States (X1/X2 at 5 %):** The 5 % duty cycle is a critical indication that the system is in a hold or handshake‑awaiting state.  
3. **V2G Setup Flow:** Each branch confirms that once the vehicle is plugged in and identification is complete (via either PnC or EIM), the V2G communication handshake starts, finishes, and hands over to **HLC‑C** for managing the charging.  
4. **Re‑init Step:** Illustrates that if the sequence is interrupted or the vehicle or EVSE requires a fresh handshake (e.g., after an EIM step), they re‑initialize the communication before proceeding with V2G Setup.  

By following these flow steps, engineers and implementers can quickly understand how a DC EVSE (supporting ISO 15118) handles both **PnC** and **EIM** identification methods under different timing scenarios.

Related Information 25: Figure 8 — Connection coordination Seq 6: DC EVSE with PnC and EIM (sibling of Text 4)
Related Information 26: HLC-C c) EIM Plug-in X1 or X2 (5 %) X2 (5 %) Re-init V2G Setup �inished V2G Setup started c) EIM Plug-in X1 or X2 (5 %) HLC-C a) PnC Plug-in X1 or X2 (5 %) X2 (5 %) Re-init V2G Setup �inished V2G Setup started EIM X1 or X2 (5 %) EIM X2 (5 %) Key possible procedure mandatory procedure HLC-C charging controlled by high-level communication Figure 8 — Connection coordination Seq 6: DC EVSE with PnC and EIM (sibling of Text 4)
Related Information 27: Figure 9 — Connection coordination Seq 7: AC EVSE timeout handling for 5 % control pilot duty cycle (sibling of Text 4)
Related Information 28: Plug-in X2 (5 %) Re-init TT_EVSE_ SLAC_init E/F (0 %) T_step_EF Timeout X2 (5 %) TT_EVSE_ SLAC_init E/F (0 %) T_step_EF X2 (5 %) TT_EVSE_ SLAC_init E/F (0 %) T_step_EF Timeout Timeout X1 Figure 9 — Connection coordination Seq 7: AC EVSE timeout handling for 5 % control pilot duty cycle (sibling of Text 4)
Related Information 29: Table 2 shows the options for EVs with and without HLC, according to the different control pilot duty cycle values. (sibling of Text 4)
Related Information 30: Table 2 — EV behaviour (sibling of Text 4)
Related Information 31: Table 2 — EV behaviour <table border="1"> <td colspan="1" rowspan="1">Duty cycle seen&lt;br&gt;by the EV</td> <td colspan="1" rowspan="1">EV w/o HLC</td> <td colspan="1" rowspan="1">EV with HLC</td> <tr> <td colspan="1" rowspan="1">B1</td> <td colspan="1" rowspan="1">no reaction</td> <td colspan="1" rowspan="1">Matching process to be launched&lt;br&gt;If the EV_Discovering_Status is “EVSE_FOUND”: V2G Setup fin-&lt;br&gt;ished: wait&lt;br&gt;If EV_Discovering_Status = EVSE_NOT_FOUND:&lt;br&gt;&lt;br&gt;no reaction</td> </tr> <tr> <td colspan="1" rowspan="1">5 %</td> <td colspan="1" rowspan="1">no reaction</td> <td colspan="1" rowspan="1">Matching process to be launched &lt;br&gt;If the EV_Discovering_Status is “EVSE_FOUND”: V2G Setup fin-&lt;br&gt;ished: continue with negotiated charge profile&lt;br&gt;If EV_Discovering_Status = “EVSE_NOT_FOUND”: no reaction</td> </tr> <tr> <td colspan="1" rowspan="1">X2 (nom)</td> <td colspan="1" rowspan="1">BC</td> <td colspan="1" rowspan="1">BC is allowed&lt;br&gt;In parallel, matching to be launched&lt;br&gt;When EV_Discovering_Status = EVSE_FOUND: HLC can begin at&lt;br&gt;any time.&lt;br&gt;If EV_Discovering_Status = EVSE_NOT_FOUND: BC allowed or no&lt;br&gt;reaction.</td> </tr> </table> (sibling of Text 4)
Related Information 32: NOTE No reaction means that the EV may go to sleep, according to the implementation. (sibling of Text 4)
Contextual Information 5: ISO 15118-3:2015(E) ﻿ Licensed to National Tsing Hua University / Yi-Shin Chen (yishin@gmail.com) ISO Store Order: OP-720751 license #1/ Downloaded: 2023-10-04 Single user licence only, copying and networking prohibited. (ancestor of Text 4)
Contextual Information 6: 7 Connection coordination (ancestor of Text 4)
Contextual Information 7: Road vehicles — Vehicle to grid communication interface — Part 3: Physical and data link layer requirements (ancestor of Text 4)
Related Information 33: Figure A.9 — Example of sequence chart of matching process error handling (sibling of Text 5)
Contextual Information 8: A.9.8.1 Example of matching process error handling (ancestor of Text 5)
Contextual Information 9: A.9.8 General error handling and timing constraints (ancestor of Text 5)
Related Information 34: [V2G3-A09-04] The MMEs for the parameter exchange shall be used with the following content and be sent as Ethernet unicast/broadcast messages as defined. (sibling of Table 1)
Related Information 35: This Clause summarizes all timings used in this Annex. (sibling of Table 2)
Related Information 36: [V2G3-A08-01] All low-layer communciation modules shall comply with Table A.1. (sibling of Table 2)
Related Information 37: Table A.1 — Timing and constant values (sibling of Table 2)
Related Information 38: Table A.1 — Timing and constant values <table border="1"> <td colspan="1" rowspan="1">Parameter</td> <td colspan="1" rowspan="1">Description</td> <td colspan="1" rowspan="1">Min</td> <td colspan="1" rowspan="1">Typical</td> <td colspan="1" rowspan="1">Max</td> <td colspan="1" rowspan="1">Unit</td> <tr> <td colspan="1" rowspan="1">C_EV_match_MNBC</td> <td colspan="1" rowspan="1">Number of M-Sounds sent for the&lt;br&gt;SLAC</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_retry</td> <td colspan="1" rowspan="1">Number of retries of the correspond-&lt;br&gt;ing message within the matching&lt;br&gt;process</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_signalattn_direct</td> <td colspan="1" rowspan="1">Lower threshold for the signal&lt;br&gt;strength measurement</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">dB</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_signalattn_indirect</td> <td colspan="1" rowspan="1">Higher threshold for the signal&lt;br&gt;strength measurement</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">dB</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_start_atten_char_inds</td> <td colspan="1" rowspan="1">Number of CM_START_ATTEN_CHAR.&lt;br&gt;INDs sent by the EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">3</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">TP_amp_map_exchange</td> <td colspan="1" rowspan="1">Performance timer for the start of an&lt;br&gt;AMP MAP Exchange&lt;br&gt;Either the EV or the EVSE shall send&lt;br&gt;a CM_AMP_MAP.REQ within the&lt;br&gt;max value of this timer after link is&lt;br&gt;detected in order to trigger an AMP&lt;br&gt;MAP Exchange.</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_batch_msg_interval</td> <td colspan="1" rowspan="1">Interval between two CM_START_&lt;br&gt;ATTEN_CHAR.IND or CM_MNBC_&lt;br&gt;SOUND.IND messages</td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">50</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_match_session</td> <td colspan="1" rowspan="1">Performance time for the EV to start&lt;br&gt;validation or SLAC_MATCH after&lt;br&gt;sending CM_ATTEN_CHAR.RSP</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">500</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_SLAC_init</td> <td colspan="1" rowspan="1">Time between plug-in (state B&lt;br&gt;detected) or wake-up and start of&lt;br&gt;matching by the EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EVSE_avg_atten_calc</td> <td colspan="1" rowspan="1">Performance time for the EVSE to&lt;br&gt;calculate the average attenuation pro-&lt;br&gt;file after reception of all M-SOUNDs&lt;br&gt;or after TT_EVSE_match_MNBC has&lt;br&gt;expired</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_link_ready_notification</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">0,2</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TP_match_response</td> <td colspan="1" rowspan="1">General performance time for a&lt;br&gt;response to a request</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> </table> (sibling of Table 2)
Related Information 39: Table A.1 (continued) <table border="1"> <td colspan="1" rowspan="1">Parameter</td> <td colspan="1" rowspan="1">Description</td> <td colspan="1" rowspan="1">Min</td> <td colspan="1" rowspan="1">Typical</td> <td colspan="1" rowspan="1">Max</td> <td colspan="1" rowspan="1">Unit</td> <tr> <td colspan="1" rowspan="1">TP_match_sequence</td> <td colspan="1" rowspan="1">General performance time for sub-&lt;br&gt;sequent requests after a response to&lt;br&gt;previous request has been received</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_amp_map_exchange</td> <td colspan="1" rowspan="1">Timeout timer that runs on both EV&lt;br&gt;and EVSE side after link is detected&lt;br&gt;If an EV or EVSE does not want to&lt;br&gt;start an AMP MAP Exchange and no&lt;br&gt;request is received by the other side&lt;br&gt;within the timeout value of this timer,&lt;br&gt;then it is to be assumed that no AMP&lt;br&gt;MAP Exchange will take place and&lt;br&gt;a D-LINK_READY.indication is to be&lt;br&gt;sent to the HLE.</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EV_atten_results</td> <td colspan="1" rowspan="1">Time the EV shall wait for CM_&lt;br&gt;ATTEN_CHAR.IND messages from&lt;br&gt;EVSEs. Timer starts with the sending&lt;br&gt;of the first CM_START_ATTEN_CHAR.&lt;br&gt;IND</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">1 200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_match_MNBC</td> <td colspan="1" rowspan="1">Timeout on the EVSE side that trig-&lt;br&gt;gers the calculation of the average&lt;br&gt;attenuation profile</td> <td colspan="1" rowspan="1">600</td> <td colspan="1" rowspan="1">600</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_match_session</td> <td colspan="1" rowspan="1">Maximum time from the expiration of&lt;br&gt;TT_EVSE_match_MNBC and the recep-&lt;br&gt;tion of either CM_VALIDATE.REQ or&lt;br&gt;CM_SLAC_MATCH.REQ</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_SLAC_init</td> <td colspan="1" rowspan="1">Time between detecting state B and&lt;br&gt;receiving CM_SLAC_PARM.REQ on the&lt;br&gt;EVSE side</td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">50</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_join</td> <td colspan="1" rowspan="1">Maximum time between CM_SLAC_&lt;br&gt;MATCH.CNF and link establishment&lt;br&gt;If there is no link after this timeout&lt;br&gt;expires, EV retries matching process&lt;br&gt;and EVSE resets its state machine</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">12</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_response</td> <td colspan="1" rowspan="1">Time that the EV/EVSE shall wait for a&lt;br&gt;response from the EVSE/EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_sequence</td> <td colspan="1" rowspan="1">Time that the EVSE/EV shall wait for&lt;br&gt;a request from the EV/EVSE</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">400</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_matching_repetition</td> <td colspan="1" rowspan="1">Time duration for repetitions of the&lt;br&gt;matching process when an error&lt;br&gt;occurs</td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_matching_rate</td> <td colspan="1" rowspan="1">Time to wait for a repetition of the&lt;br&gt;whole matching process after a failed&lt;br&gt;matching process</td> <td colspan="1" rowspan="1">400</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">ms</td> </tr> </table> (sibling of Table 2)
Contextual Information 10: A.8 Timings and constants (ancestor of Table 2)
Contextual Information 11: Annex A (normative) HomePlug Green PHY on control pilot line (ancestor of Table 2)
Related Information 40: This Clause summarizes all timings used in the main body of this part of ISO 15118. (sibling of Table 3)
Related Information 41: [V2G3-M08-01] All low-layer communication devices shall comply with Table 3. (sibling of Table 3)
Related Information 42: Table 3 — Timing and constant values <table border="1"> <td colspan="1" rowspan="1">Parameter</td> <td colspan="1" rowspan="1">Description</td> <td colspan="1" rowspan="1">Min</td> <td colspan="1" rowspan="1">Typical</td> <td colspan="1" rowspan="1">Max</td> <td colspan="1" rowspan="1">Unit</td> <tr> <td colspan="1" rowspan="1">C_conn_max_match</td> <td colspan="1" rowspan="1">Number of retries of matching&lt;br&gt;process</td> <td colspan="1" rowspan="1">3</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_vald_nb_toggles</td> <td colspan="1" rowspan="1">Number of BCB-Toggles</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">3</td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EVSE_match_parallel</td> <td colspan="1" rowspan="1">Number of parallel matching&lt;br&gt;processes to be handled by&lt;br&gt;EVSE</td> <td colspan="1" rowspan="1">5</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_sequ_retry</td> <td colspan="1" rowspan="1">Number of matching retries by&lt;br&gt;Control Pilot state E transitions</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">T_conn_init_HLC</td> <td colspan="1" rowspan="1">Minimum B state duration after&lt;br&gt;a state F, D, or C</td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">T_conn_resume</td> <td colspan="1" rowspan="1">Time after the wake up trigger&lt;br&gt;(e.g. BCB-Toggle) until the low-&lt;br&gt;layer communication module is&lt;br&gt;ready for communciation</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">T_conn_max_comm</td> <td colspan="1" rowspan="1">Time after plug-in until the low-&lt;br&gt;layer communication module is&lt;br&gt;ready for communciation</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">T_conn_resetup</td> <td colspan="1" rowspan="1">Time to resetup the matching&lt;br&gt;process after a loss of commu-&lt;br&gt;nication</td> <td colspan="1" rowspan="1">15</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">T_vald_detect_time</td> <td colspan="1" rowspan="1">Time to detect a variation of the&lt;br&gt;state on EVSE side</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_vald_state_duration</td> <td colspan="1" rowspan="1">Duration of each state B or C&lt;br&gt;within the BCB-Toggle</td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">400</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_vald_toggle</td> <td colspan="1" rowspan="1">Duration of BCB-Toggle&lt;br&gt;sequence</td> <td colspan="1" rowspan="1">600</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">3 500</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_vald_toggle</td> <td colspan="1" rowspan="1">Timeout timer for the EVSE to&lt;br&gt;stop monitoring control pilot for&lt;br&gt;BCB-Toggle. Value comes from&lt;br&gt;CM_VALIDATE.REQ</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">3 500</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_match_leave</td> <td colspan="1" rowspan="1">Maximum time to leave the logi-&lt;br&gt;cal network</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">T_step_EF</td> <td colspan="1" rowspan="1">Time to stay at E/F state</td> <td colspan="1" rowspan="1">4</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">s</td> </tr> </table> (sibling of Table 3)
Related Information 43: [V2G3-M08-02] Any successful matching process shall reset all the timeout timers and reset the retry_counters. (sibling of Table 3)
Contextual Information 12: 8 Timings and constants (ancestor of Table 3)
Contextual Information 13: INTERNATIONAL STANDARD ISO 15118-3 First edition 2015-05-15 Licensed to National Tsing Hua University / Yi-Shin Chen (yishin@gmail.com) ISO Store Order: OP-720751 license #1/ Downloaded: 2023-10-04 Single user licence only, copying and networking prohibited. (ancestor of Table 3)
Related Information 44: Figure A.9 gives an example of matching process error handling. The low-layer communication module of the EV is awake and the low-layer communication module of the EVSE is asleep. The EVCC sends first CM_SLAC_PARM.REQ message immediately after cable plug-in. The EVSE has to boot its low-layer communication module and is not able to answer the CM_SLAC_PARM.REQ message. After the low-layer communication module on the EVSE side is ready for communication, it sends a CM_SLAC_PARM.CNF. (sibling of Figure 1)

OUTPUT FORMAT INSTRUCTIONS:
Your answer should follow these guidelines:
1. Start with an 'Overview' section that provides a concise explanation of what this concept/topic is.
2. For the related content, organize it into appropriate sections with descriptive headings based on the information available.
   - Analyze the content and group related information logically.
   - Choose section titles that best represent the information, such as 'Related Topics', 'Related Primitives', 'Configuration Requirements', etc.
   - Let the content guide your choice of section titles rather than forcing a predefined structure.
3. The structure should match the format used in technical documentation, with clear hierarchy and organization.
4. Include any relevant figures, tables, or processes mentioned in the information.
5. Be as detailed and comprehensive as possible while ONLY using the provided information.
6. In writing your answer, strictly follow the content provided in the information, and do not add any new information or make assumptions.


Question: What is CM_SLAC_PARM.REQ?

Above is all the available information related to this question.
Use ONLY this information to construct a comprehensive answer.
Do not add any new information that is not present below.