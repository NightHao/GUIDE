Question What is CM_SLAC_MATCH.CNF?: What is CM_SLAC_MATCH.CNF?

Below is all the available information related to this question.
Use ONLY this information to construct a comprehensive answer.
Do not add any new information that is not present below.

TABLE INFORMATION:
Table 1: A.9.4.2 Description of involved MMEs - Table A.7 — MMEs parameters definition for logical network parameter exchange
Table 2: A.9.5.2 Description of involved MMEs - Table A.8 — MMEs parameters definition for joining the logical network
Table 3: A.8 Timings and constants - Table A.7 (continued)
Table 4: A.8 Timings and constants - Table A.1 (continued)

FIGURE INFORMATION:
Figure 1: A.9.3.3.1 Sequence chart - Figure A.5 — Sequence chart of validation process of matching decision

Image Description for Figure 1:
# Detailed Description of Figure 1 — Overview of [ISO‑0] in the ISO/IEC OSI Reference Model

Below is a comprehensive, step-by-step explanation of the diagram labeled **“Figure 1 — Overview of [ISO-0] in the ISO/IEC OSI reference model.”** Although this figure is not a traditional “flowchart” (with decision diamonds or arrows depicting process steps), it provides a layered architectural view of how the ISO 15118 standards align with the classic ISO/IEC Open Systems Interconnection (OSI) reference model. In the sections below, each labeled entity is identified, and its role and connections are described in detail.

---

## 1. Entities in the Figure

1. **OSI layer 1 Physical**  
2. **OSI layer 2 Data link**  
3. **OSI layer 3 Network**  
4. **OSI layer 4 Transport**  
5. **OSI layer 5 Session**  
6. **OSI layer 6 Presentation**  
7. **OSI layer 7 Application**  
8. **Vehicle-to-Grid communication**  
9. **ISO 15118‑1**  
10. **General information and use-case definition**  
11. **ISO 15118‑2**  
12. **Network and application protocol requirements**  
13. **V2G standardized service primitive interface**  
14. **ISO 15118‑3**  
15. **Physical layer and Data link layer requirements**  
16. **Figure 1 — Overview of [ISO‑0] in the ISO/IEC OSI reference model**  

---

## 2. Overall Structure of the Diagram

The figure is conceptually divided into three major sections (from bottom to top):

1. **Lower Layers (OSI Layer 1 and 2)** – Represented by the ISO 15118‑3 standard.  
2. **Intermediate Layer Boundary** – Indicated by the “V2G standardized service primitive interface,” which bridges ISO 15118‑3 with the higher-layer protocols.  
3. **Higher Layers (OSI Layers 3 through 7)** – Represented by the ISO 15118‑2 standard for network and application-level communication, with references to ISO 15118‑1 for general concepts and use-case definitions.  

Within the big outer box labeled “Vehicle-to-Grid communication,” two standards are highlighted:
- **ISO 15118-1** (covering general info and use-case definitions)
- **ISO 15118-2** (covering network and application protocol requirements)

At the bottom, a second large box is labeled **ISO 15118-3** (covering physical and data link layer requirements). Between these two boxes, a horizontal band is labeled **V2G standardized service primitive interface**, indicating the interface boundary where higher-level protocols interact with physical and data link services.

---

## 3. Layer-by-Layer Description

### 3.1 OSI Layer 1 (Physical)
- **Name in Diagram**: “OSI layer 1 Physical.”  
- **Role**: The physical layer is responsible for the transmission and reception of raw bitstreams over a physical medium—e.g., the actual cable or wireless medium used for communications.  
- **Referenced Standard**: **ISO 15118‑3** covers the physical layer requirements, ensuring that electric vehicles (EVs) and charging stations (EVSEs) are interoperable at the physical signal level (e.g., Power Line Communication (PLC), electromagnetic compatibility requirements, etc.).

### 3.2 OSI Layer 2 (Data Link)
- **Name in Diagram**: “OSI layer 2 Data link.”  
- **Role**: The data link layer establishes and terminates a connection between two physically connected nodes, handling error detection/correction and basic framing.  
- **Referenced Standard**: **ISO 15118‑3** also covers the data link layer requirements (e.g., MAC addressing, PLC MAC layer specifics) to ensure a stable “low-layer” communication for Vehicle-to-Grid (V2G).

Both Layer 1 and Layer 2 appear inside the “ISO 15118‑3” box. They are the core focus of “Part 3” of the ISO 15118 series, which defines how signals and data frames are sent over the physical medium and how they link up into a standardized “pipe” for higher-layer messages.

### 3.3 V2G Standardized Service Primitive Interface
- **Name in Diagram**: “V2G standardized service primitive interface.”  
- **Role**: This horizontal band sits between the physical/data link layers (bottom) and the upper layers (top). It serves as a boundary or interface that allows the protocols described in ISO 15118‑2 (network and application) to communicate with the lower-layer technology specified by ISO 15118‑3.  
- **Importance**: It defines how services and primitives (e.g., data requests, acknowledgements, connection management) are exchanged between the data link layer and higher network/application layers. This is the main “handshake” region that ensures a consistent interface across potentially different hardware or firmware implementations.

### 3.4 OSI Layer 3 (Network)
- **Name in Diagram**: “OSI layer 3 Network.”  
- **Role**: The network layer handles packet forwarding, including routing through intermediate routers. In the scope of V2G, it organizes data exchange at the IP layer (or other possible network-layer protocols).  
- **Referenced Standard**: **ISO 15118‑2** is responsible for specifying how the network layer is used for V2G communication (e.g., IP addressing, transport selection requirements).

### 3.5 OSI Layer 4 (Transport)
- **Name in Diagram**: “OSI layer 4 Transport.”  
- **Role**: Responsible for reliable or unreliable end-to-end transport of data (e.g., TCP/UDP). In V2G contexts, this layer ensures robust message delivery or streaming.  
- **Referenced Standard**: Again, covered by **ISO 15118‑2**, which dictates how the transport layer interacts with the network layer and the session layer to support the V2G protocols.

### 3.6 OSI Layer 5 (Session)
- **Name in Diagram**: “OSI layer 5 Session.”  
- **Role**: Helps manage and control the connections between applications, establishing, maintaining, and terminating communication sessions.  
- **Referenced Standard**: Part of the **ISO 15118‑2** coverage, ensuring session-oriented capabilities (like initiating a charging session, exchanging messages for contract authorization, etc.).

### 3.7 OSI Layer 6 (Presentation)
- **Name in Diagram**: “OSI layer 6 Presentation.”  
- **Role**: Ensures that data is in a usable format for the application layer—handling data encryption, serialization, and translation if necessary.  
- **Referenced Standard**: **ISO 15118‑2** also governs how data representation and encoding details (e.g., XML, EXI) are handled in the V2G messages.

### 3.8 OSI Layer 7 (Application)
- **Name in Diagram**: “OSI layer 7 Application.”  
- **Role**: Closest to the end-user; in V2G, it describes the application-level data exchanges that facilitate use-cases like contractual identification, pricing, charging profiles, and energy management.  
- **Referenced Standard**: **ISO 15118‑2**. All relevant V2G messages (e.g., request/response for charging schedules, authentication, or payment) are part of the application layer protocols described here.

### 3.9 Vehicle-to-Grid Communication (Top-Level Box)
- **Name in Diagram**: “Vehicle-to-Grid communication.”  
- **Role**: This large box depicts the entire scope of “V2G” communication from an OSI perspective—covering from network to application aspects. It conceptually contains two key parts:
  1. **ISO 15118‑1** (General information and use-case definition)  
  2. **ISO 15118‑2** (Network and application protocol requirements)

  Where **ISO 15118‑1** sits within the conceptual top-level because it outlines overarching use-cases and contexts, while **ISO 15118‑2** addresses the technical details of how to implement them in the network/application layers.

### 3.10 ISO 15118‑1
- **Name in Diagram**: “ISO 15118‑1.”  
- **Caption**: “General information and use-case definition.”  
- **Role**: Provides the foundational concepts, goals, and use-case scenarios for V2G. It does not specify OSI layers per se but offers the background and scope for the more technical parts (‑2 and ‑3).

### 3.11 ISO 15118‑2
- **Name in Diagram**: “ISO 15118‑2.”  
- **Caption**: “Network and application protocol requirements.”  
- **Role**: Defines how the EV and EVSE communicate over the network and at the application layer to fulfill the use-cases that ISO 15118‑1 describes. It covers OSI layers 3 through 7 and ensures interoperability in message structuring, security, authentication, plug-and-charge features, etc.

### 3.12 ISO 15118‑3
- **Name in Diagram**: “ISO 15118‑3.”  
- **Caption**: “Physical layer and Data link layer requirements.”  
- **Role**: Specifies the physical mediums, data link procedures (PLC modems, MAC sublayer specifics), and any hardware-level interoperability requirements, including timing, cable specifications, electromagnetic compatibility, etc. This standard ensures that EV and EVSE can transmit signals reliably so that higher-layer protocols (ISO 15118‑2) can function as intended.

---

## 4. Relationship and Connections

1. **ISO 15118‑3 → V2G Standardized Service Primitive Interface**  
   - ISO 15118‑3 defines how data is physically encoded/decoded, then delivered to the next layer via service primitives. The horizontal interface states exactly how these data units or service requests move up to the higher layers.

2. **V2G Standardized Service Primitive Interface → ISO 15118‑2**  
   - The standardized interface allows protocols defined in ISO 15118‑2 to operate independently of the underlying physical or data link technologies. This separation provides modularity and helps different hardware implementations remain compatible as long as they abide by the same interface primitives.

3. **ISO 15118‑2 → OSI Layers 3–7**  
   - ISO 15118‑2 “lives” across the network, transport, session, presentation, and application layers, specifying how messages are constructed, routed, and validated for end-to-end V2G communication.

4. **ISO 15118‑1 → Overall**  
   - Although not explicitly mapped to a single OSI layer, ISO 15118‑1 supplies the conceptual building blocks—e.g., high-level use-cases, general requirements, and definitions—that shape the services needed in layers 1–7.

5. **Vehicle-to-Grid Communication (Overall)**  
   - Encompasses the end-to-end scenario, from the physical signals (lowest layer) to the application messages (highest layer). The entire diagonal or wave-like region that includes ISO 15118‑1 and ISO 15118‑2 is conceptually the V2G communication “stack,” reliant upon the hardware-level foundation described by ISO 15118‑3.

---

## 5. How the Diagram “Flows”
While not a classic procedural “flowchart,” the layering suggests an upward flow of data and messages:

1. **Physical/Layer 1**: Signals on the cable or PLC.  
2. **Data Link/Layer 2**: Data is framed, and local links are established error-free.  
3. **V2G Service Interface**: The boundary where well-defined primitives let higher-level protocols control or request link services.  
4. **Network, Transport, Session, Presentation, Application (Layers 3–7)**: Actual V2G messages, session management, security, and application data (e.g., payment, contract ID exchange).  

Each standard (ISO 15118‑1, ISO 15118‑2, and ISO 15118‑3) is responsible for a portion of this layered model. ISO 15118-1 sets the context, ISO 15118-2 handles the upper communication layers, and ISO 15118-3 ensures the physical/data link reliability.

---

## 6. Key Takeaways for Engineers

- **Separation of concerns**: The figure neatly distinguishes the physical/data link requirements (ISO 15118‑3) from the network-to-application requirements (ISO 15118‑2), with ISO 15118‑1 providing conceptual underpinnings.  
- **Modularity**: By adhering to the OSI layering, manufacturers can update physical or data link implementations without forcing redesign of higher-layer protocols, as long as the standardized service interface remains intact.  
- **Interoperability**: Each layer’s compliance ensures that an EV from one vendor can communicate effectively with an EVSE from another vendor—covering everything from signal waveforms to network addresses to high-level billing transactions.

---

**Figure 1** thus serves as a foundational reference for how the entire V2G communication stack (layers 1 through 7) aligns with the separate parts of the ISO 15118 standard, illustrating the scope and boundary of each part in the OSI model. The layered design promotes a robust, flexible, and interoperable charging ecosystem for electric vehicles and charging infrastructure.

Figure 2: A.9 Matching EV – EVSE process - Figure A.2 — Sequence chart of HomePlug Green PHY matching process (part 2

Image Description for Figure A.2:
**Detailed Description of Figure A.2 — Sequence Chart of HomePlug Green PHY Matching Process (Part 2)**

Below is a step‐by‐step walkthrough of the second part of the SLAC (Signal-Level Attenuation Characterization) matching process, as shown in Figure A.2. The figure involves four principal entities:
1. **EV Host**  
2. **EV PLC Node** (the low‐layer communication module on the EV side)  
3. **EVSE PLC Node** (the low‐layer communication module on the EVSE side)  
4. **EVSE Host**  

Several timers are used throughout (e.g., TT_match_response, TT_EVSE_match_MNBC, TT_EV_atten_results, etc.), and numerous message exchanges take place to coordinate the matching, measurement, validation, and eventual linking of the EV and the EVSE. The main goal is to ensure that the EV joins the EVSE’s HomePlug Green PHY network only if the correct EVSE is physically connected.

---

## 1. Entities Shown in the Figure

1. **EV Host**  
   • Triggers and manages part of the matching and SLAC processes on the vehicle side.  
   • May also participate in the amplitude map exchange and final notifications to higher layers.

2. **EV PLC Node**  
   • The low‐layer communication module in the EV.  
   • Sends/receives SLAC‐related messages (e.g., CM_SLAC_PARM.REQ), handles attenuation measurement steps (CM_START_ATTEN_CHAR.IND, CM_MNBC_SOUND.IND, CM_ATTEN_CHAR.RSP), and initiates validation or matching requests.

3. **EVSE PLC Node**  
   • The low‐layer communication module in the charging station.  
   • Responds to the EV’s messages (e.g., CM_SLAC_PARM.CNF), performs attenuation measurements, and returns results (e.g., CM_ATTEN_CHAR.IND).  
   • May also carry out a validation procedure upon EV requests and send final match confirmations.

4. **EVSE Host**  
   • Controls higher-level aspects on the EVSE side, including key sets (CM_SET_KEY.REQ) or other logic.  
   • May provide triggers to begin or end the matching process.

---

## 2. High‐Level Flow Overview

Figure A.2 shows the continuation of the overall HomePlug Green PHY matching process, focusing on:  
- Attenuation measurements using M‐Sound messages and collecting CM_ATTEN_PROFILE.IND data.  
- Final attenuation confirmations (CM_ATTEN_CHAR.IND and CM_ATTEN_CHAR.RSP).  
- (Optionally) Validation steps (CM_VALIDATE) with possible BCB toggles.  
- Network matching confirmation (CM_SLAC_MATCH).  
- Key setting (CM_SET_KEY) on both sides.  
- Detection of the link and optional amplitude map exchange (CM_AMP_MAPREQ and CM_AMP_MAPCNF).  
- Final “D_LINK_READY” notification to the higher layers once the link is established.

---

## 3. Detailed Step‐by‐Step Flow

Below, each arrow or step in the figure is described in sequence (from top to bottom):

1. **Wait for Matching Process Start Trigger**  
   - Both the EV side and the EVSE side wait internally until a trigger condition indicates that SLAC matching should begin.  
   - Timers such as TP_EV_SLAC_init (for the EV) and TT_EVSE_SLAC_init (for the EVSE) are started.

2. **EV PLC Node → CM_SLAC_PARM.REQ**  
   - Once triggered, the EV PLC node sends a “CM_SLAC_PARM.REQ” broadcast request.  
   - This request announces the EV’s parameters to potential EVSE nodes and includes a unique runID.

3. **EVSE PLC Node → CM_SLAC_PARM.CNF**  
   - An unmatched EVSE node that is ready replies with “CM_SLAC_PARM.CNF” to the EV’s broadcast.  
   - This confirmation message includes details like M-Sound counts, a matching runID, and a time-out field (Time_Out) dictating how long the EVSE will receive M-Sounds.

4. **Timers and Response Windows**  
   - The EV uses TT_match_response to await CM_SLAC_PARM.CNF messages. If valid CNFs are received, it proceeds. Otherwise, it retries or declares failure after repeated timeouts.

5. **EV PLC Node → CM_START_ATTEN_CHAR.IND** (multiple times)
   - After the EV obtains a valid parameter confirmation, it waits for TP_match_sequence to expire, then begins attenuation characterization by sending “CM_START_ATTEN_CHAR.IND” messages in a short batch.  
   - Each indicates the number of M‐Sounds to transmit (NUM_SOUNDS) and includes the runID.

6. **EV PLC Node → CM_MNBC_SOUND.IND** (multiple times)
   - Following its last “CM_START_ATTEN_CHAR.IND,” the EV sends a sequence of “CM_MNBC_SOUND.IND” messages C_EV_match_MNBC times (for example, 8 times).  
   - A decrementing counter (Cnt) goes down with each M‐Sound message. The EV typically spaces these out with TP_EV_batch_msg_interval to avoid congestion.

7. **EVSE PLC Node → CM_ATTEN_PROFILE.IND** (multiple times)
   - While the EV is sending M‐Sounds, the EVSE may measure and aggregate the received signals. It can send multiple “CM_ATTEN_PROFILE.IND” messages back to the EV if necessary.  
   - The EV receives these within TT_EV_atten_results.

8. **EVSE PLC Node → CM_ATTEN_CHAR.IND**
   - After collecting or averaging enough M‐Sounds, the EVSE compiles final attenuation data and sends “CM_ATTEN_CHAR.IND” to the EV.  
   - This is typically triggered once TT_EVSE_match_MNBC expires and the EVSE finishes averaging.

9. **EV PLC Node → CM_ATTEN_CHAR.RSP**
   - Upon receiving the final attenuation characterization message, the EV responds with “CM_ATTEN_CHAR.RSP,” acknowledging the data.  
   - At this point, the EV has the final measured attenuation and can decide whether the EVSE is indeed the physically connected one (i.e., “EVSE_FOUND,” “EVSE_POTENTIALLY_FOUND,” or “EVSE_NOT_FOUND”).

10. **Optional Validation Phase**  
   - If the EV determines it needs further certainty, it performs a validation step:  
     1. **CM_VALIDATE.REQ (Step 1)** from EV to EVSE – the EV requests the EVSE’s readiness to do a BCB toggle validation on the control pilot.  
     2. **CM_VALIDATE.CNF (Step 1)** from EVSE to EV – the EVSE states “Ready,” “Not Required,” “Not Ready,” or “Failure.”  
     3. **BCB Toggle** – If the EVSE is “Ready,” the EV toggles the battery control block for a specific time.  
     4. **CM_VALIDATE.REQ (Step 2)** from EV to EVSE – includes how long the EVSE should count toggles.  
     5. **CM_VALIDATE.CNF (Step 2)** from EVSE to EV – indicates success/failure and includes the count of toggles.  
   - The EV can confirm the physically linked EVSE if the toggles match the EV’s expectation.

11. **EV PLC Node → CM_SLAC_MATCH.REQ**
   - Once the EV is confident it has identified the correct EVSE, it sends “CM_SLAC_MATCH.REQ” to finalize the network join parameters.  
   - This message includes MAC addresses, the runID, and other final matching fields.

12. **EVSE PLC Node → CM_SLAC_MATCH.CNF**
   - The EVSE acknowledges with “CM_SLAC_MATCH.CNF,” which supplies the EV with the NMK (network membership key) or other parameters needed for a private logical network.  
   - Both sides now have the exact security and channel information.

13. **EV PLC Node ↔ EV Host** and **EVSE Host**: Key‐Setting (CM_SET_KEY)
   - The figure may show “CM_SET_KEY.REQ” from the EVSE Host to EVSE PLC node (or from the EV Host to the EV PLC node).  
   - “CM_SET_KEY.CNF” confirms that the local low‐layer module is configured with the correct NMK.

14. **Link Detected & TT_match_join**  
   - Once the EV sets its own key, it attempts to join the EVSE’s logical network. If a link is detected within TT_match_join, the process proceeds. Otherwise, the EV or EVSE decides the matching has failed and may retry.

15. **(Optional) Amplitude Map Exchange (CM_AMP_MAPREQ, CM_AMP_MAPCNF)**  
   - If either the EV or the EVSE requests a reduced transmit power or localized notched carriers, it may initiate the amplitude map exchange.  
   - “CM_AMP_MAP.REQ” is sent, followed by “CM_AMP_MAP.CNF.” If no amplitude map exchange is needed, this part is skipped.

16. **Inform Higher‐Layer Entities**  
   - Once the link is securely established, the final step is a “D-LINK_READY” indication to the higher‐layer entity (HLE) in both the EV and the EVSE. This notifies both that the HomePlug Green PHY link is active and ready for ISO 15118 application‐layer communication.

---

## 4. Relationships and Key Connection Points

- **EV PLC Node ↔ EVSE PLC Node**:  
  Almost all SLAC measurement messages flow between these two low‐layer communication modules. They exchange parameter sets, attenuation data, and matching confirmations.

- **EV Host ↔ EV PLC Node**:  
  The EV Host instructs or triggers the EV PLC node to start SLAC or to proceed with validation. It may also configure local amplitude maps or set keys.

- **EVSE Host ↔ EVSE PLC Node**:  
  The EVSE Host can command its low‐layer module to set a new key (e.g., CM_SET_KEY.REQ) or to confirm certain states. It also triggers the EVSE PLC node to respond after a successful matching.

- **Timers**:  
  Many timers appear in the sequence and govern when a node can give up, retry, or proceed to the next step. For example:  
  - **TT_EVSE_SLAC_init**: Time for EVSE to listen for CM_SLAC_PARM.REQ after detecting state B.  
  - **TP_match_sequence**: A performance time ensuring that the next request (e.g., CM_START_ATTEN_CHAR.IND) happens only after the prior response.  
  - **TT_match_response**: Both EV and EVSE wait up to this duration for a particular response; if it times out, they may retry or declare a failure.  
  - **TT_EV_atten_results**: EV’s time window to receive all CM_ATTEN_CHAR.IND.  
  - **TT_EVSE_match_MNBC**: EVSE’s time window to collect M-Sound data and produce CM_ATTEN_CHAR.IND.  
  - **TP_EV_batch_msg_interval**: Interval between consecutive messages in a batch (e.g., multiple CM_MNBC_SOUND.IND).  
  - **TT_match_join**: Maximum time allowed for the newly provided NMK/NID to form a valid link.  
  - **TT_amp_map_exchange**: Time for optional amplitude map request/response.  
  - **TP_link_ready_notification**: Performance limit to notify HLE that the data link is established.

---

## 5. Concluding Notes

- **Failure Handling**:  
  If any node fails to receive the expected messages within the specified timers or if content is invalid (e.g., invalid runID or mismatch in message definitions), the matching may be retried until certain repetition counts are reached. Ultimately, if repeated attempts fail, the matching process ends in “Unmatched” state.

- **Optional Validation**:  
  The EV is free to skip the CM_VALIDATE steps if the signal strength measurement unambiguously identifies the EVSE. If the EVSE is “Busy” or “Not Ready,” the EV can either wait and retry or attempt matching with a different EVSE (if multiple stations were discovered).

- **Amplitude Map Exchange**:  
  This may or may not be used in every session. It is only performed if either side wants to restrict transmit power further. If performed, both sides finalize an amplitude map to ensure compliance with local regulations and minimal interference.

---

### Final Outcome

By the end of the sequence shown in Figure A.2, the EV has:  
1. Exchanged parameters and measured attenuation with all potential EVSEs.  
2. (Optionally) Validated the correct EVSE with BCB toggles.  
3. Requested and received final matching data (NMK, NID).  
4. Joined the logical network by setting keys.  
5. Confirmed or skipped the amplitude map exchange.  
6. Indicated to higher layers that the link is ready for powerline communication.

All these steps ensure that only the physically connected EVSE is selected, avoiding interference or incorrect pairing with other EVSE nodes on the same powerline network.


Image Description for Figure 2:
```markdown
# Detailed Description of Figure 2 — [ISO-3] Relationship to the ISO/IEC OSI Reference Model

This figure shows how the Physical and Data Link layers used in ISO 15118‑3 (specifically for Power Line Communication on electric vehicles) align with the classic ISO/IEC 7498-1 (OSI) reference model. It illustrates the layered network architecture, culminating in interfaces that connect to higher-level protocols (Application, Presentation, Session, Transport, Network) and basic signaling (Control Pilot) as specified in IEC 61851‑1.

Below is a step-by-step, layer-by-layer description of each entity in the figure and how they relate to each other.

---

## 1. Entities Overview

From **bottom** to **top**, the following entities appear in the diagram:

1. **Communication media**  
   The physical medium (the cable assembly) through which signals and energy are exchanged between the Electric Vehicle (EV) and the Electric Vehicle Supply Equipment (EVSE).

2. **Signal coupling**  
   This represents the method of coupling the PLC (Power Line Communication) signal onto the AC or DC charging cable. It ensures the high-frequency PLC signal is injected or extracted without interfering with the power transfer itself.

3. **PLC Physical layer**  
   The physical layer of the Power Line Communication (e.g., HomePlug GreenPHY). It defines the electrical and modulation specifications required to transmit bits over the communication media.

4. **MAC/PHY SAP**  
   The Service Access Point between the PHY (Physical) and MAC (Medium Access Control) layers. It represents the interface through which the upper layer (MAC) exchanges data and control information with the physical layer.

5. **PLC MAC layer**  
   The Medium Access Control layer that handles packet framing, addressing, and channel-access mechanisms specific to PLC (e.g., carrier-sense multiple access, collision avoidance, etc.).

6. **Convergence MAC SAP**  
   The interface between the PLC MAC layer and the convergence layer. It ensures that data from higher-layer protocols is properly formatted for MAC-layer transmission and vice versa.

7. **Convergence layer**  
   A bridging layer that adapts the classic OSI Data Link–level services (like Ethernet bridging or VLAN tagging) into the specific requirements/format of the PLC protocols. It converges or translates data to align with HomePlug GreenPHY or other PLC standards.

8. **Control SAP**  
   A specialized Service Access Point providing a control interface for the PLC or other network-management functions (e.g., encryption key management, SLAC services, link status queries). This is used by upper software modules that need direct PLC-related control/configuration.

9. **Data link control SAP**  
   An interface that provides link-status information, error management, and other data link control functionalities. This SAP ties the connection coordination module to the lower-level Data Link functionalities.

10. **Connection coordination**  
   A functional block that coordinates establishing or tearing down logical connections. It helps with matching EVs to EVSEs, exchanging handshake signals, and managing the relationship between basic IEC 61851-1 signaling and the higher, logical data connections of ISO 15118.

11. **Data SAP**  
   The interface between the Data Link layer and the Network (layer 3) or higher layers for actual V2G (vehicle-to-grid) data exchange. All high-level charging messages (e.g., those required by ISO 15118-2) flow through the Data SAP.

12. **Higher layers**  
   In OSI terms, these encapsulate the Application, Presentation, Session, Transport, and Network layers. ISO 15118-2 typically operates at these layers (exchanging XML messages, session management, security, etc.).

13. **Control pilot (IEC 61851-1) Hardware I/Os**  
   Shown to the right, this denotes the separate hardware line(s) used for “basic signaling” (PWM duty cycle, pilot states, etc.). It is not strictly part of the PLC communication stack but interplays with it (for example, telling the EV and EVSE when to begin or end coupling for high-level communication).

14. **OSI reference model layers**  
   A vertical bracket on the left reminding us that Physical and Data Link layers in the OSI model are here implemented by the PLC layers and the “convergence layer.”

15. **Key**: “covered by communication technology specification”  
   The figure highlights (in gray) the parts (Convergence layer, PLC MAC, PLC PHY, etc.) that are defined by specific communication technology standards (e.g., HomePlug GreenPHY, IEEE 1901 Profile GreenPHY).

---

## 2. Detailed Layer-by-Layer Explanation and “Flow”

Although this is not a conventional “flowchart,” the diagram can be read from the **Physical** layer at the bottom to the **Application** layer at the top to understand how data flows and which components interact:

1. **Communication Media (Bottom Layer)**  
   • Power cabling used for vehicle charging is also used to carry data signals.  
   • Power is transferred from the EVSE to the EV; meanwhile, high-frequency signals are superimposed for data exchange.

2. **Signal Coupling Layer**  
   • Couples the PLC signal on top of the AC or DC power line.  
   • Ensures minimal interference and correct impedance matching to pass data effectively between EV and EVSE.

3. **PLC Physical Layer**  
   • Responsible for modulating and demodulating waveforms on the power line.  
   • Follows standards such as HomePlug GreenPHY for robust physical signaling (e.g., OFDM, error correction).

4. **MAC/PHY SAP**  
   • Logical interface that the MAC layer uses to send and receive frames (bits, symbols) via the Physical layer.  
   • Transmits or receives packets after being encoded/decoded at the PHY.

5. **PLC MAC Layer**  
   • Implements media access rules (channel sensing, collision avoidance, etc.).  
   • Adds header/trailer fields managing addressing and error detection.  
   • Manages bridging to upper or lower layers via convergence sub-layers.

6. **Convergence MAC SAP**  
   • Provides a standardized interface for the next layer (Convergence layer) to get data from MAC frames.  
   • Ensures correct framing and token passing between the Convergence and MAC layers.

7. **Convergence Layer**  
   • Adapts the PLC MAC frames into a more generic data link structure or vice versa.  
   • Potentially includes bridging or VLAN tagging for IP-based or ISO 15118-2 application data.  
   • At this layer, the system transitions from technology-specific data link frames to a more general data link service usable by higher protocols.

8. **Control SAP**  
   • A specialized side-interface that configuration/control processes (like encryption-key management or the SLAC process used for EV–EVSE association) can call.  
   • Enables reading/writing certain parameters in the PLC MAC or PHY, including link status, encryption keys, and networking specifics.

9. **Data Link Control SAP**  
   • Presents data link status (connected, disconnected, error) and handles command signals for enabling or disabling link functionalities.  
   • Ties in to the Connection Coordination function, letting higher-layer logic know about link conditions.

10. **Connection Coordination**  
    • Supervises or orchestrates which link or channel is used, how the handshake or matching occurs, and whether the EV and EVSE are “paired.”  
    • Tightly integrated with basic signaling from IEC 61851-1 (Control Pilot) and high-level communication from ISO 15118-2.

11. **Data SAP**  
    • The normal “data” interface for exchanging V2G protocol payloads (e.g., charging session requests, contract identification) between the Data Link layer and the higher OSI layers (Network and above).  
    • Actual ISO 15118-2 messages pass through this Data SAP after being encapsulated into MAC frames.

12. **Higher Layers**  
    • Spanning OSI Layers 3 to 7 (Network, Transport, Session, Presentation, Application).  
    • In the context of ISO 15118, these higher layers format, encrypt, and interpret the actual “plug-and-charge” or “vehicle-to-grid” messages.

13. **Control Pilot (IEC 61851-1) Hardware I/Os**  
    • Shown on the right side as a separate domain.  
    • Provides basic PWM signaling to indicate EV states, EVSE states, maximum current capability, presence of the EV, or charging fault conditions.  
    • Ties into overall Connection Coordination to start or stop the PLC communication as required by the standard.

---

## 3. Relationship and Connection of Entities

- **Physical to MAC**  
  Data moves from the **Communication media** (power lines) through **Signal coupling** into the **PLC Physical layer**, which transmits/receives bits. The **MAC/PHY SAP** is then used to pass frames to/from the **PLC MAC layer**.

- **MAC to Convergence**  
  The **PLC MAC layer** sends or receives data frames to the **Convergence layer** through the **Convergence MAC SAP**. At this stage, commands and bridging logic are aligned with the needs of higher-level protocols.

- **Convergence to Higher Protocols**  
  After the Convergence layer, there are multiple SAPs:
  1. **Control SAP** for direct PLC control and configuration queries (e.g., security keys, link info).  
  2. **Data Link Control SAP** for controlling the link status, error notifications, and link enable/disable.  
  3. **Data SAP** for normal data traffic that flows up to the OSI Network or Transport layers.

- **Coordination with Basic Signaling**  
  The **Connection coordination** block leverages the **Control SAP** and **Data link control SAP** to manage the handshake between the EV and EVSE at both the PLC level and the basic PWM signaling level. Meanwhile, the **Control pilot** line (IEC 61851-1) physically coordinates the presence detection and permissible current via the duty cycle.

- **Higher Layers**  
  Above the **Data SAP**, normal IP networking (or the ISO 15118-2 application messages) can proceed. These higher-layer protocols rely on the data path established at lower layers by the PLC system and are orchestrated by the **Connection coordination** function.

---

## 4. Key Takeaways

1. **Layered Architecture**  
   The figure highlights how the Physical and Data Link layers of ISO 15118‑3 map directly onto the OSI reference model. The “convergence layer” ensures that higher layers can remain mostly independent of the underlying PLC technology.

2. **Control vs. Data**  
   Two main SAP families exist:  
   - **Control SAP / Data Link Control SAP**: For link management, error reporting, and secure network configuration.  
   - **Data SAP**: For passing normal application data (ISO 15118-2 messages) to the upper layers.

3. **Basic Signaling Integration**  
   IEC 61851-1’s control pilot is shown outside the PLC stack, yet it is integral to “Connection coordination,” ensuring correct startup, safety interlocks, and fallback charging states.

4. **Covered by Communication Technology Specification**  
   The gray regions (Convergence layer, MAC, PHY) are implementations guided by specific PLC standards (e.g., HomePlug GreenPHY). They are thus “covered by communication technology specification.”

By understanding each block and interface, engineers can quickly trace how signals and data flow from the power line (physical) up to the ISO 15118 application protocol, and how the system coordinates the link state with basic pilot signaling.
```


TEXTUAL INFORMATION:
Text 1: A.9.1.3.2 EV side (Context: A.9.1.3.2 EV side > A.9.1 Signal strength measurement – parameter exchange > A.9 Matching EV – EVSE process) - If the EV receives a CM_SLAC_MATCH.CNF with invalid content, it shall be ignored. Content which deviate from the MME definition in Table A.7 is invalid.
Text 2: A.9.5.3.2 EV side (Context: A.9.5.3.2 EV side > A.9.5 Joining the logical network > A.9 Matching EV – EVSE process) - If no link is established within the max(TT_match_join) after receiving CM_SLAC_ MATCH.CNF, the EV shall consider that the matching process is FAILED.

ADDITIONAL CONTEXT:
Related Information 1: [V2G3-A09-05] The EV shall send a CM_SLAC_PARM.REQ within TP_EV_SLAC_init time window. (sibling of Text 1)
Related Information 2: [V2G3-A09-06] The start condition of the TP_EV_SLAC_init timer shall be the trigger of the match- ing process defined in 6.4.3.2. (sibling of Text 1)
Related Information 3: [V2G3-A09-07] In the SLAC parameter exchange phase, the EV shall send a CM_SLAC_PARM.REQ and wait for the maximum value of TT_match_response for CM_SLAC_PARM.CNFs from potential EVSEs. (sibling of Text 1)
Related Information 4: [V2G3-A09-08] The start condition of TT_match_response shall be the transmission of CM_SLAC_ PARM.REQ. (sibling of Text 1)
Related Information 5: [V2G3-A09-10] If no valid CM_SLAC_PARM.CNF arrives at the EV when TT_match_response expires, the EV shall retransmit the request and wait again for TT_match_ response. The total number of retries is given by C_EV_match_retry. If C_EV_ match_retry is reached, the matching process shall be considered as FAILED. (sibling of Text 1)
Contextual Information 1: A.9.1.3.2 EV side (ancestor of Text 1)
Contextual Information 2: A.9.1 Signal strength measurement – parameter exchange (ancestor of Text 1)
Contextual Information 3: A.9 Matching EV – EVSE process (ancestor of Text 1)
Related Information 6: [V2G3-A09-101] After receiving a CM_SLAC_MATCH.CNF from the EVSE, the EV shall configure its low-layer communciation module to the values from this message by using the CM_SET_KEY.REQ MME. (sibling of Text 2)
Related Information 7: NOTE 1 In a specific implementation, methods other than the CM_SET_KEY MMEs may also be used as long as the configuration result is equivalent. (sibling of Text 2)
Related Information 8: NOTE 2 It is up to the implementation how to handle a negative response in a CM_SET_KEY.CNF or a missing CM_SET_KEY.CNF at all. (sibling of Text 2)
Contextual Information 4: A.9.5.3.2 EV side (ancestor of Text 2)
Contextual Information 5: A.9.5 Joining the logical network (ancestor of Text 2)
Related Information 9: Table A.7 — MMEs parameters definition for logical network parameter exchange <table border="1"> <td colspan="1" rowspan="1">MME</td> <td colspan="1" rowspan="1">Field</td> <td colspan="1" rowspan="1">Octet no.</td> <td colspan="1" rowspan="1">Field size&lt;br&gt;(Octets)</td> <td colspan="1" rowspan="1">Value</td> <td colspan="1" rowspan="1">Definition</td> <tr> <td colspan="1" rowspan="9">CM_SLAC_MATCH.&lt;br&gt;REQ&lt;br&gt;Unicast</td> <td colspan="1" rowspan="1">APPLICA-&lt;br&gt;TION_TYPE</td> <td colspan="1" rowspan="1">0</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “PEV-EVSE&lt;br&gt;matching”</td> </tr> <tr> <td colspan="1" rowspan="1">SECURITY_&lt;br&gt;TYPE</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “No Secu-&lt;br&gt;rity”</td> </tr> <tr> <td colspan="1" rowspan="1">MVFLength</td> <td colspan="1" rowspan="1">2 to 3</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">0x3e</td> <td colspan="1" rowspan="1">Fixed value for matching</td> </tr> <tr> <td colspan="1" rowspan="1">PEV ID</td> <td colspan="1" rowspan="1">4 to 21</td> <td colspan="1" rowspan="1">17</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">-</td> </tr> <tr> <td colspan="1" rowspan="1">PEV MAC</td> <td colspan="1" rowspan="1">21 to 26</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">MAC&lt;br&gt;address of&lt;br&gt;the EV Host</td> <td colspan="1" rowspan="1">MAC address of EV Host</td> </tr> <tr> <td colspan="1" rowspan="1">EVSE ID</td> <td colspan="1" rowspan="1">26 to 43</td> <td colspan="1" rowspan="1">17</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">-</td> </tr> <tr> <td colspan="1" rowspan="1">EVSE MAC</td> <td colspan="1" rowspan="1">44 to 49</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">MAC&lt;br&gt;address of&lt;br&gt;the EVSE&lt;br&gt;Host</td> <td colspan="1" rowspan="1">EVSE MAC address</td> </tr> <tr> <td colspan="1" rowspan="1">RunID</td> <td colspan="1" rowspan="1">50 to 57</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">This value shall be the same as the&lt;br&gt;one sent in the CM_SLAC_PARM.&lt;br&gt;REQ message by the EV.</td> </tr> <tr> <td colspan="1" rowspan="1">RSVD</td> <td colspan="1" rowspan="1">58 to 65</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">reserved</td> </tr> </table> (sibling of Table 1)
Related Information 10: Table A.7 (continued) (sibling of Table 1)
Related Information 11: Table A.7 (continued) <table border="1"> <td colspan="1" rowspan="1">MME</td> <td colspan="1" rowspan="1">Field</td> <td colspan="1" rowspan="1">Octet no.</td> <td colspan="1" rowspan="1">Field size&lt;br&gt;(Octets)</td> <td colspan="1" rowspan="1">Value</td> <td colspan="1" rowspan="1">Definition</td> <tr> <td colspan="1" rowspan="12">CM_SLAC_MATCH.&lt;br&gt;CNF&lt;br&gt;Unicast</td> <td colspan="1" rowspan="1">APPLICA-&lt;br&gt;TION_TYPE</td> <td colspan="1" rowspan="1">0</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “PEV-EVSE&lt;br&gt;matching”</td> </tr> <tr> <td colspan="1" rowspan="1">SECURITY_&lt;br&gt;TYPE</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value indicating “No Secu-&lt;br&gt;rity”</td> </tr> <tr> <td colspan="1" rowspan="1">MVFLength</td> <td colspan="1" rowspan="1">2 to 3</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">0x56</td> <td colspan="1" rowspan="1">Fixed value for matching</td> </tr> <tr> <td colspan="1" rowspan="1">PEV ID</td> <td colspan="1" rowspan="1">4 to 20</td> <td colspan="1" rowspan="1">17</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">-</td> </tr> <tr> <td colspan="1" rowspan="1">PEV MAC</td> <td colspan="1" rowspan="1">21 to 26</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">MAC&lt;br&gt;address of&lt;br&gt;the EV Host</td> <td colspan="1" rowspan="1">PEV MAC address</td> </tr> <tr> <td colspan="1" rowspan="1">EVSE ID</td> <td colspan="1" rowspan="1">27 to 43</td> <td colspan="1" rowspan="1">17</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">-</td> </tr> <tr> <td colspan="1" rowspan="1">EVSE MAC</td> <td colspan="1" rowspan="1">44-49</td> <td colspan="1" rowspan="1">6</td> <td colspan="1" rowspan="1">MAC&lt;br&gt;address of&lt;br&gt;the EVSE&lt;br&gt;Host</td> <td colspan="1" rowspan="1">EVSE MAC address</td> </tr> <tr> <td colspan="1" rowspan="1">RunID</td> <td colspan="1" rowspan="1">50 to 57</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">This value shall be the same as the&lt;br&gt;one sent in the CM_SLAC_PARM.&lt;br&gt;REQ message by the EV.</td> </tr> <tr> <td colspan="1" rowspan="1">RSVD</td> <td colspan="1" rowspan="1">58 to 65</td> <td colspan="1" rowspan="1">8</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">reserved</td> </tr> <tr> <td colspan="1" rowspan="1">NID</td> <td colspan="1" rowspan="1">66 to 72</td> <td colspan="1" rowspan="1">7</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">Network ID derived from the NMK&lt;br&gt;by the EVSE according to [HPGP],&lt;br&gt;4.4.3.1</td> </tr> <tr> <td colspan="1" rowspan="1">RSVD</td> <td colspan="1" rowspan="1">73</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">reserved</td> </tr> <tr> <td colspan="1" rowspan="1">NMK</td> <td colspan="1" rowspan="1">74 to 89</td> <td colspan="1" rowspan="1">16</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">Private NMK of the EVSE (random&lt;br&gt;value)</td> </tr> </table> (sibling of Table 1)
Contextual Information 6: A.9.4.2 Description of involved MMEs (ancestor of Table 1)
Contextual Information 7: A.9.4 Logical network parameter exchange (ancestor of Table 1)
Related Information 12: Table A.8 — MMEs parameters definition for joining the logical network <table border="1"> <td colspan="1" rowspan="1">MME</td> <td colspan="1" rowspan="1">Field</td> <td colspan="1" rowspan="1">Octet&lt;br&gt;no.</td> <td colspan="1" rowspan="1">Field size&lt;br&gt;(octets)</td> <td colspan="1" rowspan="1">Value</td> <td colspan="1" rowspan="1">Definition</td> <tr> <td colspan="1" rowspan="10">CM_SET_KEY.REQ&lt;br&gt;Unicast to local low-&lt;br&gt;layer communcia-&lt;br&gt;tion node</td> <td colspan="1" rowspan="1">Key Type</td> <td colspan="1" rowspan="1">0</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x01</td> <td colspan="1" rowspan="1">Fixed value to indicate “NMK”</td> </tr> <tr> <td colspan="1" rowspan="1">My Nonce</td> <td colspan="1" rowspan="1">1 to 4</td> <td colspan="1" rowspan="1">4</td> <td colspan="1" rowspan="1">0x00000000</td> <td colspan="1" rowspan="1">Fixed value, encrypted payload not&lt;br&gt;used</td> </tr> <tr> <td colspan="1" rowspan="1">Your Nonce</td> <td colspan="1" rowspan="1">5 to 8</td> <td colspan="1" rowspan="1">4</td> <td colspan="1" rowspan="1">0x00000000</td> <td colspan="1" rowspan="1">Fixed value, encrypted payload not&lt;br&gt;used</td> </tr> <tr> <td colspan="1" rowspan="1">PID</td> <td colspan="1" rowspan="1">9</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x04</td> <td colspan="1" rowspan="1">Fixed value to indicate “HLE proto-&lt;br&gt;col”</td> </tr> <tr> <td colspan="1" rowspan="1">PRN</td> <td colspan="1" rowspan="1">10 to 11</td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">0x0000</td> <td colspan="1" rowspan="1">Fixed value, encrypted payload not&lt;br&gt;used</td> </tr> <tr> <td colspan="1" rowspan="1">PMN</td> <td colspan="1" rowspan="1">12</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x00</td> <td colspan="1" rowspan="1">Fixed value, encrypted payload not&lt;br&gt;used</td> </tr> <tr> <td colspan="1" rowspan="1">CCo&lt;br&gt;Capablility</td> <td colspan="1" rowspan="1">13</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">CCo Capability according to the&lt;br&gt;station role</td> </tr> <tr> <td colspan="1" rowspan="1">NID</td> <td colspan="1" rowspan="1">14 to 20</td> <td colspan="1" rowspan="1">7</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">54 LSBs contain the NID&lt;br&gt;2 MSBs = 0b00</td> </tr> <tr> <td colspan="1" rowspan="1">NewEKS</td> <td colspan="1" rowspan="1">21</td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">0x01</td> <td colspan="1" rowspan="1">Fixed value to indicate “NMK”</td> </tr> <tr> <td colspan="1" rowspan="1">NewKey</td> <td colspan="1" rowspan="1">22 to 37</td> <td colspan="1" rowspan="1">16</td> <td colspan="1" rowspan="1">variable</td> <td colspan="1" rowspan="1">NMK</td> </tr> </table> (sibling of Table 2)
Contextual Information 8: A.9.5.2 Description of involved MMEs (ancestor of Table 2)
Related Information 13: This Clause summarizes all timings used in this Annex. (sibling of Table 3)
Related Information 14: [V2G3-A08-01] All low-layer communciation modules shall comply with Table A.1. (sibling of Table 3)
Related Information 15: Table A.1 — Timing and constant values (sibling of Table 3)
Related Information 16: Table A.1 — Timing and constant values <table border="1"> <td colspan="1" rowspan="1">Parameter</td> <td colspan="1" rowspan="1">Description</td> <td colspan="1" rowspan="1">Min</td> <td colspan="1" rowspan="1">Typical</td> <td colspan="1" rowspan="1">Max</td> <td colspan="1" rowspan="1">Unit</td> <tr> <td colspan="1" rowspan="1">C_EV_match_MNBC</td> <td colspan="1" rowspan="1">Number of M-Sounds sent for the&lt;br&gt;SLAC</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_retry</td> <td colspan="1" rowspan="1">Number of retries of the correspond-&lt;br&gt;ing message within the matching&lt;br&gt;process</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">2</td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_signalattn_direct</td> <td colspan="1" rowspan="1">Lower threshold for the signal&lt;br&gt;strength measurement</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">dB</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_match_signalattn_indirect</td> <td colspan="1" rowspan="1">Higher threshold for the signal&lt;br&gt;strength measurement</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">dB</td> </tr> <tr> <td colspan="1" rowspan="1">C_EV_start_atten_char_inds</td> <td colspan="1" rowspan="1">Number of CM_START_ATTEN_CHAR.&lt;br&gt;INDs sent by the EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">3</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">nbr</td> </tr> <tr> <td colspan="1" rowspan="1">TP_amp_map_exchange</td> <td colspan="1" rowspan="1">Performance timer for the start of an&lt;br&gt;AMP MAP Exchange&lt;br&gt;Either the EV or the EVSE shall send&lt;br&gt;a CM_AMP_MAP.REQ within the&lt;br&gt;max value of this timer after link is&lt;br&gt;detected in order to trigger an AMP&lt;br&gt;MAP Exchange.</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_batch_msg_interval</td> <td colspan="1" rowspan="1">Interval between two CM_START_&lt;br&gt;ATTEN_CHAR.IND or CM_MNBC_&lt;br&gt;SOUND.IND messages</td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">50</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_match_session</td> <td colspan="1" rowspan="1">Performance time for the EV to start&lt;br&gt;validation or SLAC_MATCH after&lt;br&gt;sending CM_ATTEN_CHAR.RSP</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">500</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EV_SLAC_init</td> <td colspan="1" rowspan="1">Time between plug-in (state B&lt;br&gt;detected) or wake-up and start of&lt;br&gt;matching by the EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TP_EVSE_avg_atten_calc</td> <td colspan="1" rowspan="1">Performance time for the EVSE to&lt;br&gt;calculate the average attenuation pro-&lt;br&gt;file after reception of all M-SOUNDs&lt;br&gt;or after TT_EVSE_match_MNBC has&lt;br&gt;expired</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TP_link_ready_notification</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">0,2</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">1</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TP_match_response</td> <td colspan="1" rowspan="1">General performance time for a&lt;br&gt;response to a request</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> </table> (sibling of Table 3)
Related Information 17: Table A.1 (continued) <table border="1"> <td colspan="1" rowspan="1">Parameter</td> <td colspan="1" rowspan="1">Description</td> <td colspan="1" rowspan="1">Min</td> <td colspan="1" rowspan="1">Typical</td> <td colspan="1" rowspan="1">Max</td> <td colspan="1" rowspan="1">Unit</td> <tr> <td colspan="1" rowspan="1">TP_match_sequence</td> <td colspan="1" rowspan="1">General performance time for sub-&lt;br&gt;sequent requests after a response to&lt;br&gt;previous request has been received</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">100</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_amp_map_exchange</td> <td colspan="1" rowspan="1">Timeout timer that runs on both EV&lt;br&gt;and EVSE side after link is detected&lt;br&gt;If an EV or EVSE does not want to&lt;br&gt;start an AMP MAP Exchange and no&lt;br&gt;request is received by the other side&lt;br&gt;within the timeout value of this timer,&lt;br&gt;then it is to be assumed that no AMP&lt;br&gt;MAP Exchange will take place and&lt;br&gt;a D-LINK_READY.indication is to be&lt;br&gt;sent to the HLE.</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EV_atten_results</td> <td colspan="1" rowspan="1">Time the EV shall wait for CM_&lt;br&gt;ATTEN_CHAR.IND messages from&lt;br&gt;EVSEs. Timer starts with the sending&lt;br&gt;of the first CM_START_ATTEN_CHAR.&lt;br&gt;IND</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">1 200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_match_MNBC</td> <td colspan="1" rowspan="1">Timeout on the EVSE side that trig-&lt;br&gt;gers the calculation of the average&lt;br&gt;attenuation profile</td> <td colspan="1" rowspan="1">600</td> <td colspan="1" rowspan="1">600</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_match_session</td> <td colspan="1" rowspan="1">Maximum time from the expiration of&lt;br&gt;TT_EVSE_match_MNBC and the recep-&lt;br&gt;tion of either CM_VALIDATE.REQ or&lt;br&gt;CM_SLAC_MATCH.REQ</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_EVSE_SLAC_init</td> <td colspan="1" rowspan="1">Time between detecting state B and&lt;br&gt;receiving CM_SLAC_PARM.REQ on the&lt;br&gt;EVSE side</td> <td colspan="1" rowspan="1">20</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">50</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_join</td> <td colspan="1" rowspan="1">Maximum time between CM_SLAC_&lt;br&gt;MATCH.CNF and link establishment&lt;br&gt;If there is no link after this timeout&lt;br&gt;expires, EV retries matching process&lt;br&gt;and EVSE resets its state machine</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">12</td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_response</td> <td colspan="1" rowspan="1">Time that the EV/EVSE shall wait for a&lt;br&gt;response from the EVSE/EV</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">200</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_match_sequence</td> <td colspan="1" rowspan="1">Time that the EVSE/EV shall wait for&lt;br&gt;a request from the EV/EVSE</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">400</td> <td colspan="1" rowspan="1">ms</td> </tr> <tr> <td colspan="1" rowspan="1">TT_matching_repetition</td> <td colspan="1" rowspan="1">Time duration for repetitions of the&lt;br&gt;matching process when an error&lt;br&gt;occurs</td> <td colspan="1" rowspan="1">10</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">s</td> </tr> <tr> <td colspan="1" rowspan="1">TT_matching_rate</td> <td colspan="1" rowspan="1">Time to wait for a repetition of the&lt;br&gt;whole matching process after a failed&lt;br&gt;matching process</td> <td colspan="1" rowspan="1">400</td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1"></td> <td colspan="1" rowspan="1">ms</td> </tr> </table> (sibling of Table 3)
Contextual Information 9: A.8 Timings and constants (ancestor of Table 3)
Contextual Information 10: Annex A (normative) HomePlug Green PHY on control pilot line (ancestor of Table 3)
Contextual Information 11: Road vehicles — Vehicle to grid communication interface — Part 3: Physical and data link layer requirements (ancestor of Table 3)
Related Information 18: Figure A.5 — Sequence chart of validation process of matching decision (sibling of Figure 1)
Contextual Information 12: A.9.3.3.1 Sequence chart (ancestor of Figure 1)
Contextual Information 13: A.9.3 Validation of matching decision (ancestor of Figure 1)
Related Information 19: [V2G3-A09-01] The matching process shall base on the messages defined in [HPGP]. [V2G3-A09-02] The configuration of the low-layer communciation module as described in A.4.5 shall be done prior to entering the matching process. (sibling of Figure 2)
Related Information 20: Figures A.1and A.2 outlines the complete sequence of the matching process. It shows the sequence to follow, from the discovery of the other low-layer communciation modules to the start of the nominal communication. (sibling of Figure 2)
Related Information 21: Figure A.1 — Sequence chart of HomePlug Green PHY matching process (part 1) (sibling of Figure 2)
Related Information 22: ISO Licensed to National Tsing Hua University / Yi-Shin Chen (yishin@gmail.com) ISO Store Order: OP-720751 license #1/ Downloaded: 2023-10-04 Single user licence only, copying and networking prohibited. (sibling of Figure 2)
Related Information 23: A.9.1 Signal strength measurement – parameter exchange (sibling of Figure 2)
Related Information 24: A.9.2 Signal strength measurement (sibling of Figure 2)
Related Information 25: A.9.3 Validation of matching decision (sibling of Figure 2)
Related Information 26: A.9.4 Logical network parameter exchange (sibling of Figure 2)
Related Information 27: A.9.5 Joining the logical network (sibling of Figure 2)
Related Information 28: A.9.6 Amplitude map exchange (sibling of Figure 2)
Related Information 29: A.9.7 Leave the logical network (sibling of Figure 2)
Related Information 30: A.9.8 General error handling and timing constraints (sibling of Figure 2)

OUTPUT FORMAT INSTRUCTIONS:
Your answer should follow these guidelines:
1. Start with an 'Overview' section that provides a concise explanation of what this concept/topic is.
2. For the related content, organize it into appropriate sections with descriptive headings based on the information available.
   - Analyze the content and group related information logically.
   - Choose section titles that best represent the information, such as 'Related Topics', 'Related Primitives', 'Configuration Requirements', etc.
   - Let the content guide your choice of section titles rather than forcing a predefined structure.
3. The structure should match the format used in technical documentation, with clear hierarchy and organization.
4. Include any relevant figures, tables, or processes mentioned in the information.
5. Be as detailed and comprehensive as possible while ONLY using the provided information.
6. In writing your answer, strictly follow the content provided in the information, and do not add any new information or make assumptions.
